----------------------------------------
//044 [2006/12/28] by Rayce

・grfファイルの読み込みに関する大幅な変更と拡張（grfio.*, map.c）
　基本的にはeAを参考にしました、thx a lot!!

　　今まではgrfファイルを読み込む際に、grf内に格納されているファイル全てに対してデコード情報を保存していました。
　　しかしサーバ側はgatとtxtファイルしか必要としないので、他のファイルに関しては情報を保存しないように変更しました。
　　これによりメモリ使用量が約5MB近く削減されます（約40000 files × 132 = 5,280,000 byte）。

	GRF version: 0x0200. Number of files: 29977. Entered files: 462.
	               ↑                      ↑                    ↑
	      [grfファイルのversion]           ｜                    ｜
	                        [grf内に存在するファイルの総数]      ｜
	                                          [実際にエントリーされたgat,txtのファイル数]

　　conf/grf-files.txtの記述方式を変更し、10個までしか読み込めなかった制限を取り払います（上限127個）。
　　詳細はconf/grf-files.txtに直接記載しているので参考のこと。
　　またdataフォルダに置いてあるresnametable.txtを読み込んでduplicateするmapを指定できるように拡張しました。

	datadir:                   → data\resnametable.txt
		指定なしなのでgrfファイルを展開した後のファイルを自動で参照する
	datadir: C:\Program Files\ → C:\Program Files\data\resnametable.txt
		指定されたパスにあるresnametable.txtを読み込む

　　resnametable.txtをgrfファイルから抽出し、例えば
	dummy.gat#prontera.gat#
　　のように記述するとdummy.gatという名前のプロンテラを作ることができるのは周知の事実ですが、
　　これをdataフォルダに置いてパスを指定することで、grfファイルを作成することなく簡便にmapのduplicateを
　　行うことが可能になります。

　　今回の変更によりconf/grf-files.txtの機能性が向上したため、map_athena.confにある
　　read_grf_files_txt, data_grf, sdata_grf, adata_grfキーは廃止します。
　　今後はgrfファイルの読み込みはconf/grf-files.txtに一任されますので注意してください。

　　補足事項は以下の通り
	-> エントリテーブルを作成せずに直接 grfio_add() を呼び出して読み込み開始する
	-> MAX_GRF_FILES, data_file構造体を削除
	-> リソースチェックは全てのgrfファイルを解析し終えた後に行う
	　 grfio_resourcecheck() は対象ファイル名を引数に取るように変更
	-> filelist_adjust() は最後だけでよい
	-> grfio_setdatafile() は不要になったので削除

・上記のresnametable.txtの指定対応に伴い、012で実装したavailmapシステムは廃止（char.*, chrif.c, map.*, pc.c）
　　availmapは全てサーバ側で制御できるため、ユーザーにパッチを配布することなくmapのコピーを作成できるという利点
　　がありました。
　　しかし、例えば別のMAPへワープする際に現在のMAPとduplicateされたMAPの参照元が同じだった場合、ミニMAPに表示
　　されるPTメンバーのドットが消えずに残ったりするという気持ち悪さがありました。
　　もちろん修正することは可能でしたが、resnametable.txtを利用する方が遥かにスマート（/whereも正常に働くし）だと
　　判断したため、システムそのものを白紙に戻すことに決めました。
　　今後はresnametable.txtに必要な情報を追加し、ユーザーに配布する形式を取ってください。

----------------------------------------
//043 [2006/12/27] by Rayce

・042のキャストの明示が抜けている箇所を修正
・storage, guild_storage構造体のメンバ storage を store_item に名称変更（mmo.h）
・アイテムが製造武器、名前入り、ペット情報埋め込み済みかどうかを判定するマクロ itemdb_isspecial() を追加
	merged from eA

・せっかく作ったので、ハッシュの計算結果をダンプするコードを追加しておく（script.c）
	script.cにある DEBUG_HASH のコメントアウトを外すと、サーバ終了時にstr_dataに関する情報を
	hash_dump.txtに書き出すようになります。
	これは元々038で行ったスクリプトの解析速度の高速化を検証するために作ったデバッグ用のコード
	でしたが、もし利用者が自分の環境に合わせて速度を改善したい場合にはこれを用いて SCRIPT_HASH_SIZE
	の最適値を見積もることができます。
	特に独自に作ったスクリプトがかなり巨大で多くの変数/ラベルを使っている場合は、このサイズを
	大きくすることで読み込み速度が向上する可能性があります。

----------------------------------------
//042 [2006/12/27] by Rayce

・void*型から型変換する際はキャストを明示するように修正
・C++の予約語である classやnew キーワードを別の名称に変更
・login-converter.cで malloc.h のインクルードがなくてエラーを起こしていた問題を修正

----------------------------------------
//041 [2006/12/26] by Rayce

・各職に設定可能なスキルツリーのサイズを MAX_SKILL_TREE として定義、デフォルトは100（pc.h）
・ホムのスキルツリーのサイズを MAX_HOMSKILL_TREE として定義、デフォルトは16（homun.h）
・スキルツリー関連でバッファオーバーフローを起こす可能性を修正（homun.c, pc.c）

・属性を示す定数を ELE_*** として定義（map.h）
　属性に関連する値を気付いた範囲で置き換え
　現在は無(0)〜不死(9)までしかありませんが、拡張要素でさらに種類を（19まで）増やしてもある程度
　正常に作動することを考慮して部分的に修正

・全体的に細かい修正
・doc/db_ref.txtのhomun_db.txtに関する記述が古いままだったので追記

----------------------------------------
//040 [2006/12/26] by Rayce

・malloc, calloc, realloc, strdup, free を全て aMalloc, aCalloc, aRealloc, aStrdup, aFree に置換
　#define による置き換えはそのままですが、出来る限りこれらのマクロを利用すること

・「unsigned と signed の比較」で警告が出る部分を修正
	BCC: -w-7035 を bcc32_make.batより削除
	VC : /wd4018 を vc_make.batより削除

----------------------------------------
//039 [2006/12/25] by Rayce

・gccでコンパイルする際、038においてscript.hで警告が出力されるので修正（atcommand.c, script.*）
	script_read_vars(), script_write_vars() の引数変更

・scriptのdo-while構文を少しだけ修正
・038でコメントアウトした aRealloc を有効に戻す（サイズ縮小される可能性を考慮して）

----------------------------------------
//038 [2006/12/25] by Rayce

・スクリプトの解析速度を高速化（script.c）
　　SCRIPT_HASH_SIZEを定義し、文字列のハッシュサイズを16から512に拡張
　　parse_script() の script_buf を aCalloc → aMalloc に置き換え
　　parse完了時の aRealloc をコメントアウト（サイズ縮小されないので意味がない）
　　search_str() と add_str() の改善
	-> 今までは小文字で検索し、見つからなかったらそのままの文字で検索し直すという手法だったため
	　 小文字で登録されてないものは検索時間が無駄に必要となる状態でした。
	　 そこで小文字としてハッシュ計算し、strcmpiで文字列の照合を行うようにしました。

　※デフォルトで付属のscript全てを読み込ませた場合、現時点でstr_dataは約3300くらいあります。
　　ハッシュサイズが16だとcollisionが多すぎなので拡張することにしました。
　　512だと外部ハッシュリストに繋がるのが多くても20程度なのでresonableな値だと判断しました。

　※今までは @Buf, @BUF のみがスクリプトに記述されていた場合（全部小文字の @buf は書かれていない時）、
　　@Bufと@BUFが別の変数として扱われるという奇妙な現象が起こっていました。
　　今後はスクリプトの仕様に完全に従う形で、全ての変数/定数/関数/ラベルを小文字として扱うようにします。

　※簡単で非常に荒い実験ですが、読み込み速度が40%近く高速化されていることを確認しました。
　　初期化時だけでなく add_str() を呼び出すスクリプト命令/関数においても高速化されていることが見込まれます。

・@readvars, @writevarsの修正（atcommand.c, script.*）
	-> データ取得と保存部分のみscript.cに記述し、文字列解析部分はatcommand.cに記述する
	-> 変数が登録されているかどうかのチェックは search_str() を利用するように高速化
	-> C_PARAMとC_INTは配列指定 [] があるときは参照できないように修正
	-> 書き込み時に定数を書き換えてしまう危険性を修正
	-> typeの書き換えを行わないように巻き戻し（C_NOPのままで問題ない）

　※atcommand_vars_sub(), script_check_variable(), script_read_vars(), script_write_vars() 追加
　※script_operate_vars() の削除

----------------------------------------
//037 [2006/12/24] by Rayce

・NPCファイルの読み込み時に、MAP名のチェックを強化する（npc.c）
・スクリプトエンジンの改善（script.c）
	-> スクリプトのparse時にエラーが発生した場合、エラー箇所を正しく出力するように修正
	-> check_script_buf() を expand_script_buf() に改名し、バッファサイズの拡張を行うだけの関数に変更
	-> 不要なコメントアウト部分を抹消
	-> getelementofarray関数の処理改善
	　 頻繁に使われる可能性の高い1次元の配列に関しては、多次元配列をサポートしたAthena2099より前の方法
	　 に近い形にして高速化を図っています
	-> getcharid関数で引数の値の範囲チェックが抜けていたので修正
	-> if, else-if, switch, while, do-whileの後には必ず () を付けることを強制する

　※以下のようなコードは今後エラーとして扱われます
	if Sex mes "true"; close;
　　C言語ライクなスクリプトを指向するため、必ず if(Sex) のように () を付けなければなりません

・上記変更に伴ってエラーが出るNPCスクリプトの修正
	script/npc/town/npc_lighthalzen.txt

・pvp_nopenaltyという存在しないmapflagを削除（script/mapflag/mapflag.txt）
	022でmapflag系の整理を行った際に存在しないmapflagを指定した場合には警告を出すように強化
	してましたが、mapflagファイル自体の修正が抜けてました
・kh_dun02.gatのmapflagからnoteleportが欠けてたので修正
・conf/map_athena.confに035で追加されたnpc_event_halloween.txtの記述が抜けてたので追記

----------------------------------------
//036 [2006/12/20] by Rayce

・定数の追加と精錬に関する拡張（map.h, pc.h）
	MAX_WEAPON_LEVEL : 武器Lvの最大値でデフォルトは4
	MAX_REFINE : 最大精錬値でデフォルトは10
	WT_MAX : 武器タイプの最大値、自動的に設定される

　※Lv5以上の武器を追加したい場合はMAX_WEAPON_LEVELの値を増やし、refine_dbの行を書き加えてください
　　+11以上の精錬を設定したい場合はMAX_REFINEの値を増やし、refine_dbのLv10の成功確率の次の列に確率を書き加えてください

・status.cでデータベースを読み込む変数の見通しをよくするための変更
	-> refine_db.txtに利用する変数（refinebonusとpercentrefinery）をまとめてrefine_db構造体とする
	-> job_db1.txt, job_db2.txt, job_db2-2.txtで利用する変数群をまとめてjob_db構造体とする
	-> status_getrefinebonus() を status_get_overrefine_bonus() に改名して、過剰精錬ボーナスを返す
	　 ためだけの関数に変更
	-> status_calc_pc() で最大HP,SPを計算する部分を少し整理

・+10装備に対してスクリプトのgetequippercentrefinery関数を実行すると、バッファオーバーフロー
　（最悪の場合サーバクラッシュ）が発生するバグを修正
・@reloadstatusdbを実行した際に、job_db1.txtのHP係数の値を変更しても最大HPが正しく再計算されない問題を
　修正するために、status_calc_sigma() を status_readdb() 内に取り込み
・スパノビの魂で装備可能になる武器LvをLv4以上に拡張（pc.c）

----------------------------------------
//035 [2006/12/19] by Rayce

・AthenaProject2266よりmerge, thanks to Blazeさん
　以下Readmeをそのまま転載
	・忍者・ガンスリンガーのJOBEXPテーブルLv49〜更新（exp.txt）
	・テコン系列のHP・SP係数など修正（job_db1.txt）
	・item_fabox.txt、item_arrowtype.txt、mob_boss.txt更新
	・ハンター転職員の座標を修正（npc_job_11hunter.txt）
	・ジョンダ職員からカートを借りられない不具合を修正（npc_misc_zonda.txt）
	・コモドクエスト修正（npc_town_comodo.txt）
	・アインブロッククエスト修正と料理人クエスト追加（npc_town_einbroch.txt）
	・2006ハロウィンイベント新規追加（npc_event_halloween.txt）
	・神器、TheSign、タナトスクエスト関連マップのmapflagを追加（mapflag.txt）

・AthenaProject2267より部分的にmerge, thanks to Cocoaさん
　以下変更箇所のみそのまま転載
	・リザレクションホムンクルスの詠唱を中断可能に変更(skil_db.txt)
	・アシッドテラー、デモンストレーション、ケミカルチャージのディレイ追加(skill_cast_db.txt)

----------------------------------------
//034 [2006/12/19] by Rayce

・ホムがunit_free() されるときにも status_change_clear() を呼ぶように修正（unit.c）
・unit.cを少しだけ整理
・SI_BREAKARMOR, SI_BREAKWEAPON, SI_MAGNUM を追加（status.h）
・マグナムブレイク中ならSI_MAGNUMを送信するように修正（status.c）

・status_change_clear() の修正
	-> コメントアウト部分はもはや必要すらないので抹消
	-> type=0のときにのみSC_BABYとSC_REDEMPTIOのスキップ判定を行うように変更
	　 つまりtype=1（PC, HOMのunit_free）とtype=2（MOBのunit_remove_map）のときは全ステータス異常
	　 を強制的に解除するということになります
	-> sc_countを0にしないように修正

・Himmel氏発案のGMハイドの改造をmerge, thx a lot!!（atcommand.c, battle.*, clif.c）
	battle_athena.confにgm_perfect_hideを追加しました。デフォルトはno。
	yesにすると@hideが完全なインビジブルモードとなり、ツールによって姿が検出されなくなります。
	@hideでハイドした際は一旦キャラクターを消滅させ、解除時に再度出現パケットを送信しています。
	これによりハイドの瞬間に位置を悟られることを防止し、また出現の際に座標がズレるのを解消しています。

----------------------------------------
//033 [2006/12/17] by Rayce

・グラウンドドリフトをファイアスフィアで設置した場合、吹き飛ばすときにSAB_NODAMAGEを入れるように修正
	skill_additional_effect() が呼ばれるのはダメージ発生後なので、clif_blown() で飛ばすと位置ズレ
	を引き起こす可能性があるためです

・デスペラード修正
	5x5の範囲にランダムでオブジェクトが10回発生する、オブジェクトの攻撃範囲は3x3
	ウォーターボールとメテオストームのロジックを組み合わせてやってます

・アローシャワー、デスペラード、グラウンドドリフトは発動時に矢/弾を消費するように修正（battle.c, skill.c）
	敵が範囲内に居なくても消費されるようになります
	特にグラウンドドリフトは敵がヒットしたときに弾が減るという奇妙な現象が解消されます
	battle_skill_attack() ではなく自前で battle_delarrow() を呼び出すことで処理するように変更しています

----------------------------------------
//032 [2006/12/16] by Rayce

・status.cでコンパイル時に警告が出てたので修正（status.c）
・スキルユニットが罠かどうかを判定する skill_unit_istrap() を用意（skill.h）
・アンクルに敵が乗った状態で自動鷹が発動するとダメージが分散してしまう問題を修正（skill.c）
・battle_athena.confにtrap_is_invisibleを追加（battle.*, clif.c）
	yesにすると設置した罠が見えないようになります、merged from eA

----------------------------------------
//031 [2006/12/16] by Rayce

・凍結、石化、睡眠を解除する処理をまとめた status_change_attacked_end() を用意（battle.c, skill.c, status.*）
・ハイド状態を解除する処理をまとめた status_change_hidden_end() を用意（homun.c, mob.c, pc.c, status.*）
・スキルユニットのIDを定数 UNT_*** として定義する（skill.*）
	merged from eA

・グラウンドドリフトの暫定修正（battle.c, clif.c, skill.c）
	-> clif.cで弾薬の種類に応じて見かけを変えるのではなく、実際にスキルユニットIDを変えるように修正
	-> 足元置き、重ね置き可能にしてみる
	-> BF_WEAPONではくBF_MISCとして扱うようにしてみる
	　 スキルユニットからの攻撃を武器スキルとして扱うとダメージディレイが異常に遅れたり
	　 矢のATKが加算されたりするなど不可思議なことが起こり得るので罠と同じ扱いにしておきます
	-> battle_calc_attack() および skill_additional_effect() に引数を渡すとき、グラウンドドリフトだけは
	　 スキルユニットのIDが必要になるのでsrcの代わりにdsrcを渡すようにする
	-> 100%ダメージを属性込みで計算したあと、固定部分を加算してさらに無属性で属性補正するように修正
	-> ウィンドスフィアならスタン、ダークスフィアなら盲目、ポイズンスフィアなら毒、アイススフィアなら凍結
	　 の効果が追加されるように修正、確率は不明なので基本50%で設定
	-> ファイアスフィアなら必ず3セル吹き飛ぶように修正

---------------------------------------
//030 [2006/12/13] by Rayce

・@mesで従来のギルド会話、オープン会話に加えてパーティ会話が選択できるように拡張（clif.c）
・Athena1881以前の古い形式のキャラクターセーブデータは今後サポートしないようにする
・conf/char_athena.confで、キャラ作成時に持たせる武器と防具を任意に設定できるように拡張（merged from Freya）
	デフォルトではナイフとコットンシャツですが、start_weaponとstart_armorの値を変えることで
	違うものを持たせることが可能です
	また0にすることで初期装備を無しに設定できます。

・httpd.cでAURIGA_MOD_VERSIONではなくAURIGA_REVISIONを参照するように変更
・atn_bignumber型の定義とRETCODEをmmo.hからutils.hへ移動
・VCの警告関連
	pragma(disable : 4996) は削除、core.cのunlinkをremoveに置換
	エンコード問題があるので 4819 の警告をvc_make.batで抑制するように追加
	ついでに 4018 もvc_make.batで定義する

----------------------------------------
//029 [2006/12/13] by Rayce

・Athena Projectに投稿されたRohypnolさんのパッチから、独自修正項目についてmerge, thx a lot!!
	-> モンクの魂状態なら猛龍拳が5×5の範囲攻撃になるように修正
	-> ビーストストレイピングはダブルストレイピング使用後2sec以内でしか使えないように修正
	-> ビーストストレイピングが動物だけでなく昆虫種族にも使えるように修正
	-> 以下のスキル使用時に共闘ボーナスが付くように修正、battle_join_struggle() 追加
	　 （プロボック、気奪、マインドブレイカー、スティールコイン）

・カートレボリューションの吹き飛び方向を修正
　ターゲット以外の周囲の相手は、発動者ではなくターゲットとの位置関係で飛ぶ方向を決める

----------------------------------------
//028 [2006/12/12] by Rayce

・武器修理についてeAを参考して修正（clif.c, skill.*）
	-> メニュー選択後に射程内に対象が居ない場合は失敗するように修正
	-> 成功したときのみエフェクトを出すように修正
	-> clif.cでは判定を行わず、全てskill_repair_weapon() 内で処理するように変更
	-> skill_can_repair() は skill_repair_weapon() に吸収したので削除
	-> 処理方法の改善

・向き判定用の配列 dirx[], diry[] をmap.cに集める（homun.c, map.*, pc.c, pet.c, skill.c, unit.c）
・unit_skillcastcancel() に詠唱妨害可能かどうかの判定を取り込む
　引数に2を指定すれば、関数内部でフェンカードやGvGマップかなどを調べます

----------------------------------------
//027 [2006/12/11] by Rayce

・conf/grf-files.txtでdata, sdata, adataの制限を取り払うように拡張（grfio.*, map.c）
	-> MAX_GRF_FILES（デフォルトでは10個）まで読み込み可能
	-> : の前の名前は15文字以内で任意に指定することができます
	　 同じ名前がある場合は下に記述されたもので上書きされます
	-> 行頭に // を入れるとコメントアウトとして扱われます
	-> map_athena.confの方はdata, sdata, adata固定のままです
	　 grf-files.txtを利用することを推奨します

----------------------------------------
//026 [2006/12/11] by Rayce

・db/produce_db.txtの拡張をAthena Projectの投稿分からmerge, thanks to Rohypnolさん（skill.*）
	-> dbに新しくFixPerの項目を挿入
	　 基本成功確率にこの値を加算することで確率の補正を個別に設定します
	-> skill_produce_db構造体から使われてないメンバ trigger を削除し、perを追加
	-> skill.hに製造グループ定数 PRD_*** を追加
	　 製造の種別はスキルIDではなくこのグループ定数で分類する
	-> battle_athena.confの以下3項目が全く利用されてなかったので修正
		scroll_produce_rate, making_rate, scroll_item_name_input
	-> クリエイトコンバーターは100%成功にしておく
	　 db/produce_db.txtのFixPerを10000に設定しただけで、計算式自体はskill.cに残してます
	-> オリデオコン/エルニウム作成は本鯖にはない機能なので、ItemLvを1003に変更しておく
	-> 説明についてはdoc/db_ref.txtに記載

・012のMAPコピー機能の追加以後、担当MAPを決める処理が誤作動を起こしそうな気がしたので少し修正（map.h）
・login.cから使われてない変数 m_start, gm_last を削除（login.c）

----------------------------------------
//025 [2006/12/09] by Rayce

・製造系の修正をAthena2262-fix4よりmerge、thanks to T.Nさん（clif.c, skill.*）
	-> skill_produce_mix() から確率計算部分を切り離して skill_calc_produce_rate() とする
	-> 同様にファーマシー成功時のランキング計算部分を切り離して skill_am_ranking_point() とする
	-> skill_can_produce_mix() はnameidではなくインデックスを直接受け取るように変更し、検索の無駄を省く
	-> トワイライトファーマシーで成功個数/ランキングを一度に獲得するように修正
	-> トワイライトファーマシー成功後、重量オーバーになってしまう場合は地面に落ちずに消滅するように

----------------------------------------
//024 [2006/12/08] by Rayce

・pc_dead() でのデスペナルティ処理を最適化（pc.c）
・カオティックベネディクションのスキルLvが11以上のときサーバクラッシュする問題を修正（skill.c）
・battle_athena.confでresurrection_expを設定していたとき、JobExpの計算が間違っていたバグを修正（skill.c）
・レデムプティオで取得できる経験値の計算において、battle_athena.confのdeath_penalty_typeの設定が
　正しく反映されてなかったバグを修正（skill.c）
・経験値計算処理は出来るだけdouble型ではなくatn_bignumber型を利用するように修正
・skill_castend_nodamage_id() を少し整形

----------------------------------------
//023 [2006/12/08] by Rayce

・setmapflag命令の機能拡張
	const.txtに記載されているマップフラグ全てをこの命令で設定できます。
	mf_nosave, mf_baseexp_rate, mf_jobexp_rate, mf_pvp_nightmaredrop, mf_gvg_nightmaredrop, mf_pk_nightmaredrop
	については更に引数を指定することで必要な情報を設定します。
・setmapflag命令でナイトメアモード用の設定を行うために npc_set_mapflag_sub() を利用するので
　staticを外してnpc.hで宣言するように変更
・setmapflagnosave命令は不要になったので抹消

・removemapflag命令の機能拡張
	ナイトメアモード系を削除する場合には該当マップのドロップリストを削除し、
	空き詰め処理を行います。

・checkmapflag関数の追加
	指定マップに該当のmapflagが設定されているかどうかを調べます。
	mf_baseexp_rate, mf_jobexp_rateの場合には設定した経験値取得倍率が返ってきます。
	ナイトメアモード系のドロップリストに関する情報は取得できません。

・上記を実装するに当たり、処理を一括でまとめたかったので変数にビットフィールドを使わないように変更
	全てint型にして、script_conv_mapflag() でアドレスを取得できるようにしています。
	base_exp_rateとjob_exp_rateをflag構造体のメンバとして取り込み。

　※checkmapflag関数はgetpkflag関数の上位互換版です。
　　if(getpkflag("this")) は if(checkmapflag("this",mf_pvp) || checkmapflag("this",mf_gvg))
　　と等価ということになります。。
　　マップフラグに応じてスクリプトの挙動やアイテムの効果を変化させたいときなどに。

----------------------------------------
//022 [2006/12/07] by Rayce

・mapflag関連の最適化や機能追加
　（atcommand.c, map.*, mob.c, npc.*, pc.c, script.c, skill.c）
	-> mapflagを設定する処理をまとめて npc_set_mapflag() を用意
	　 スクリプトからの読み込みと@mapflagからの読み込みで共用します
	-> base_exp_rateとjob_exp_rateで負の値を設定しても取得経験値倍率が0にならなかった問題を修正
	-> MF_***系定数をscript.cからmap.hへ移動
	-> map_data構造体内のdrop_list構造体に drop_flag メンバを追加
	　 Pv, Gv, PK でドロップリストを共存させるためのものです
	-> ナイトメアモードの場合のアイテムドロップ処理をまとめて pc_nightmare_drop() を用意
	　 処理がゴチャゴチャしてたので書き直し
	-> MAX_DROP_PER_MAP の値が大きすぎるので、48 → 8 に縮める
	　 越えてしまった場合は「drop list is full」が出力されます
	　 ナイトメアモードで多くのアイテムIDを設定したい場合にはこの値を大きくしてください
	-> PKフィールドをナイトメアモードに一括変更するとき（map_athena.confのmap_pk_nightmaredrop有効時）
	　 drop_listに空きがない場合はモード設定しないように変更
	-> 存在しないマップフラグをスクリプトに書いていた場合は警報が鳴るように
	-> 利用価値が低いので map_check_normalmap() を削除
	-> 以下の4つのマップフラグをスクリプトから設定できるように
		fireworks, cloud1, cloud2, cloud3
	-> ついでなので新しく gvg_nightmaredrop を追加
	　 シーズモードで且つアイテムをドロップする特殊なMAPを作ることができます
	-> db/const.txtを変更
	-> doc/script_ref.txt更新

・pc_damage() から死亡処理を切り離して pc_dead() を用意（pc.c）
・ALT+Gをしたときギルドエンブレムが時々表示されないバグを多分修正（clif.c）
	merged from eAthena, thx a lot!!

----------------------------------------
//021 [2006/12/06] by Rayce

・キャラIDは出来るだけsd->char_idではなくsd->status.char_idを参照するように修正
　sd->char_idは認証用に使うだけに留める
・スクリプト解析エンジンについてeAthenaより一部merge（script.c）

・doc/script_ref.txt更新
・db群の更新
	thanks to huge cgi

----------------------------------------
//020 [2006/12/06] by Rayce

・ブロックIDの定義が各ファイルに散らばってて把握しずらいのでmmo.hに集める
	-> MIN_FLOORITEM を追加、MAX_FLOORITEM をmap.hから移動
	-> START_ACCOUNT_NUM, END_ACCOUNT_NUM をlogin.hから移動
	-> START_NPC_NUM, END_NPC_NUM をnpc.hから移動

・clif_parse_WantToConnection() における不正パケットのチェックを強化（chrif.c, clif.c）
	-> 送られてきたアカウントIDが不正な値でないかチェックする
	　 （例えばIDの値がMAX_FLOORITEM以内だと、存在しているのに map_id2sd() で検索されないキャラが出来る）
	-> Sexの不正チェックを chrif_authreq() から移動
	-> session_dataをcallocする前に判定は行う、不正だった場合はタイムアウトで落とす
	-> 「invalid Account ID !!」および「invalid Sex !!」が出力された場合は、
	　 不正なアクセスが行われたことを意味します

・一部の weapontype1, weapontype2 変数への代入について、0を WT_FIST に置換（pc.c）
・map.cを少しだけ整形

・scriptのchangebase命令で、職業IDが22（ウェディング）および26（拳聖2）のときは武器を外す処理が含まれていたが
　この部分をコメントアウト（script.c）
	装備を外すとHPやSPが減少する効果（bSPPenaltyUnrig等）を持つ装備品を装備している状態（三葉蟲カード等）で、
	EquipScriptに changebase 22; が記述された装備品（ウェディングドレス等）を装備すると
	HPとSPが共に0になり死亡してしまう現象を修正するための処置です。
	武器を外す処理を省いてもウェディング状態のときは clif_changelook() で武器の表示をしないように処置される
	ためクライアントエラーにはなりません。

　※詳細
	上記の例の場合、呼び出される主な関数は以下の通り。
	pc_equipitem() → status_calc_pc() → run_script() → buildin_changebase() → pc_unequip() → pc_heal()
	bSPPenaltyUnrigの効果により装備の解除時に pc_heal() が呼ばれますが、status_calc_pc() ではmax_hpの値は
	まだ計算されていない状態なので max_hp = 0 です。
	従って pc_heal() で最初に呼ばれる pc_checkoverhp() によってHPが0にされてしまいます。

----------------------------------------
//019 [2006/12/05] by Rayce

・mob_dead() の処理改善および整形
・ホムがMVPを取ったときのMVP経験値に対しても battle_athena.conf の master_get_homun_base_exp
　の倍率を適用するように修正（mob.c）

・一部のスキルの倍率計算において、double型ではなくatn_bignumber型を使うように変更（battle.c）
　少しオーバーフローしやすくなってる可能性はあります…
・battle_calc_weapon_attack() で利用するマクロ名が紛らわしいので
　ATK_FIX → DMG_FIX, ATK_ADD → DMG_ADD に変更、新たに DMG_SET 追加（ダメージ値の置換用）

・atn_bignumber型の変換指定子を統一して使えるようにマクロ BIGNUMCODE を用意（mmo.h）
　基本的にprintf用で10進数のみ対応です。
　用意しただけで実際のコードには今のところ出現してませんが、数値をダンプしたいとき等に利用してください。
	printf("i = %"BIGNUMCODE, i);

----------------------------------------
//018 [2006/12/04] by Rayce

・被弾共闘が入らないのを修正（pc.c）
　応急処置的にbl.idで管理するようにはしてますが、本来ならPCの場合はキャラIDを利用すべきなので
　いずれ修正する必要はあります
	merged from Athena-2262, thanks to T.Nさん

・doc/script_ref.txtにおいてmapflagの base_exp_rate, job_exp_rate に関して追記
・一閃を必中に修正（battle.c）
・mob_damage() から死亡処理の部分を切り離して mob_dead() を用意、および少し整理（mob.c）
・mob_damage() にあるテコンミッションのターゲット選定でも無限ループに陥る可能性があったので修正（mob.c）

・経験値取得系の関数において、引数をint型からatn_bignumber型に変更
　および無駄なキャストを排除して整理し直し
	guild_payexp(), homun_gainexp(), party_exp_share(), pc_gainexp()
・ホムの取得経験値がオーバーフローする可能性を修正（homun.c）
・ホムが取得した経験値を主人へ渡すときの倍率をbattle_athena.confで指定できるように変更/拡張（battle.c, homun.c）
	master_get_homun_base_exp はデフォルトで100（%）です
	master_get_homun_job_exp  はデフォルトで0（%）です

----------------------------------------
//017 [2006/12/01] by Rayce

・battle_calc_weapon_attack() の修繕その８
	-> 回避判定を先に行い、回避できなかったときだけ必要なダメージ計算を行うように改善
	　 基本ダメージ計算 battle_calc_base_damage() などの処理が省略されますので、回避時の計算は
	　 かなり改善されているものと期待します
	-> ヒット・属性・レンジの補正は回避判定の前に集める
	　 これら3つの要素は最終ダメージ計算 battle_calc_damage() に必要です
	　 battle_calc_damage() は回避出来たときにも呼び出されるので、回避判定前に補正しておかなければなりません

　※クリティカル時の処理をさらに改善する余地はありますが、長らく続いた修繕関連はこれでひとまず終了とします。

----------------------------------------
//016 [2006/11/29] by Rayce

・ヒールと治療の助けをカイトで反射した際にもエフェクトを付ける（skill.c）
・ローグの魂効果中はディスペル無効に修正（skill.c）

・battle_calc_weapon_attack() の修繕その７
	-> 「カードによるダメージ追加処理」「カードによる左手ダメージ追加処理」「カードによるダメージ減衰処理」
	　 「対象にステータス異常がある場合のダメージ減算処理」の4項目は、ダメージがあるときだけ計算する
	　 これらはダメージ倍率を計算する部分ですが、ダメージが0の場合は積を取っても結局0になるのは確定しているので
	　 計算を行う必要はありません
	-> スパイラルピアースのスキル倍率が間違っていたので修正、break抜け？
	-> 細かい整形

----------------------------------------
//015 [2006/11/21] by Rayce

・サーバースナップショット（version.h）
・不要なファイルを削除
　　conf/
	help1.txt, help2.txt, help3.txt, help4.txt
　　src/common/
	zconf_win32.h, zlib_win32.h
