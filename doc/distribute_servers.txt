==========================================================================
 サーバー分散
--------------------------------------------------------------------------

Athena は負荷分散のためにサーバー分散機能をサポートしてます。
その簡単な解説をするドキュメントです。

目次

・サーバー分散とは
・キャラクターサーバー分散
・マップサーバー分散
・マップサーバーだけ別 PC にする
・同じ PC 内でサーバー分散
・SQL によるデータベースの分散


==========================================================================
サーバー分散とは
--------------------------------------------------------------------------

デフォルトの Athena はログインサーバー、キャラクターサーバー、マップサーバーの
３つのサーバープログラムが同じマシン上で動作します。また、このマップサーバーは
全てのマップを担当しています。

このように同じマシンに全ての機能を集約すると、接続人数が増えた際に
CPU の処理が追いつかなくなり、ラグの原因となることがあります。
そのため、サーバープログラムを複数のマシンに配置し、その機能や担当するマップを
分散してマシンの負荷を下げる必要が出てきます。

Athena は分散サーバー配置をサポートしています。
サーバー分散は以下のような機能を提供します。

	・キャラクターサーバー分散
		複数のワールドを形成します。
		
	・マップサーバー分散
		一つのワールドを複数のマップサーバーで分散して形成します。
	
（参考）
	・ログインサーバー分散
		こちらは Athena の機能では実現できませんが、クライアント側の設定により
		実現可能です。clientinfo.xml で実現できます。
	
		全てのデータはログインサーバー間で共有できません。


・Athena のサーバーツリー

                 login-server
                   |       |
          char-server[A]  char-server[B]  (キャラクターサーバー分散)
             |     |                |
   map-server[C]  map-server[D]    map-server[E]
     (マップサーバー分散)

	login-server	ログインサーバーがツリー構造のルートになります
	char-server[A]	キャラクターサーバーが１つのワールド A を提供します
	map-server[C]	ワールド A の一部のマップを担当します
	map-server[D]	ワールド A の C 担当マップ以外のマップを担当します
	char-server[B]	A とは別のワールド B を提供します
	map-server[E]	ワールド B の全てのマップを担当します


==========================================================================
キャラクターサーバー分散
--------------------------------------------------------------------------

共通のログインサーバーに複数のキャラクターサーバーを配置します。
つまり複数のワールドを形成できます。

アカウントデータはワールド間で共有します。
キャラクターデータはワールド間で共有できません。
ワールド内のマップや NPC 、設定はワールドごとに別々に設定できます

こちらは非常に簡単です。
キャラクターサーバーが接続するログインサーバーのアドレスを変更し、
ID, Password などを適切に設定することで異なるログインサーバーに接続できます。

import/char_conf.txt を変更するといいでしょう。

注意点としては、キャラクターサーバーが使う ID とパスワードは、
あらかじめログインサーバーに登録されたサーバーアカウントを使う必要があります。
また、ログインサーバーに接続するほかのキャラクターサーバーと
同じアカウントを共有してはいけません。


＜例＞

	マシンA (192.168.0.2)	ログインサーバー、１つ目のキャラクターサーバー
	マシンB (192.168.0.3)	２つ目のキャラクターサーバー

	構成図
		  マシンA                   マシンB

		login-server ----------- char-server[B]
			|
		char-server[A]


	アカウントデータ
		ID		password		sex(性別はサーバーフラグを兼ねています)
		s1		p1				S
		s2		p2				S

	char_conf.txt (char-server[A])
		userid: s1				←サーバーアカウントを指定
		passwd: p1
		server_name: FirstWorld
		login_ip: 127.0.0.1		← 同じマシンなので localhost でよい
		login_port: 6900

	char_conf.txt (char-server[B])
		userid: s2				←char-server[A] とは違うアカウントを使用
		passwd: p2
		server_name: SecondWorld
		login_ip: 192.168.0.2	← ログインサーバー（マシンA）の IP を指定
		login_port: 6900

	注意
	　マシンB ではログインサーバーを起動する必要はありません。
	　この例ではサーバーアカウントはデフォルトのまま使用していますが、
	　セキュリティを考えると別の ID, パスワードに変更すべきです。



==========================================================================
マップサーバー分散
--------------------------------------------------------------------------

共通のキャラクターサーバーに複数のマップサーバーを配置します。
マップサーバーごとに担当するマップを設定できます。

アカウントデータ、キャラクターデータはマップサーバー間で共有します。
一部の状態変化などはマップサーバー間で共有できません。
一部の変数はマップサーバー間で共有できません。
一部のマップ指定のスクリプト関数はマップサーバー越しに実行できません。
その他一部の機能がマップサーバー間では動作しないことがあります。

マップや NPC はワールドごとに別々に設定できます。
複数マップにまたがる NPC を配置する場合、ワールドを分割すると
正常に働かないことがあるので、担当マップの配置を工夫してください。

ほとんどの設定はマップサーバー間で共通にするべきです。
（わざと別の設定にして特殊なマップを作ることもできますが、推奨されません）

キャラクターサーバー分散とは違って少し複雑です。
接続先の設定はキャラクターサーバー分散と同じように import/map_conf.txt で
同じキャラクターサーバーに接続するように設定します。
ただし、サーバーの ID, パスワードは全てのマップサーバーで等しく、
キャラクターサーバーのものにあわせる必要があります。

マップサーバー分散では、どのマップサーバーがどのマップを担当するかという
設定が必要です。これらも import/map_conf.txt で設定します。
どのマップを担当するかという問題は意外に難しいです。
もちろんマップの込み具合をみて、負荷が分散するように振り分けるのが
好ましいですが、それだけが判断基準ではありません。
困難ですが、一番の判断基準は NPC です。
別マップにあったとしても、関連のある NPC は同じマップサーバーに配置しなければ
ならないことが多いです。このあたりは判断が難しいのですが、
こまめに調べるしかないでしょう。

では、マップの分担を import/map_conf.txt に記述する方法を説明します。
まず、delmap: all で標準のマップを全て削除します。
その後、担当するマップを map: hoge.gat というふうに羅列するといいでしょう。

＜例＞

	マシンA (192.168.0.2)	キャラクターサーバー、１つ目のマップサーバー
	マシンB (192.168.0.3)	２つ目のマップサーバー

	構成図
		  マシンA                   マシンB

		char-server ----------- map-server[B]
			|
		map-server[A]

	char_conf.txt
		userid: s1
		passwd: p1
		
	map_conf.txt	（map-server[A]）
		userid: s1				← char_conf.txt と同じものを指定
		passwd: p1
		char_ip: localhost		← 同じマシンなので localhost でよい
		char_port: 6121
	
		delmap: all
		map: new_1-1.gat
	
	map_conf.txt	（map-server[B]）
		userid: s1				← char_conf.txt と同じものを指定
		passwd: p1
		char_ip: 192.168.0.2	← キャラサーバー（マシンA）の IP を指定
		char_port: 6121
		
		delmap: all
		map: prontera.gat
		
	注意
	　マシンB ではキャラクターサーバーを起動する必要はありません。
	　この例ではサーバーアカウントはデフォルトのまま使用していますが、
	　セキュリティを考えると別の ID, パスワードに変更すべきです。


==========================================================================
マップサーバーだけ別 PC にする
--------------------------------------------------------------------------

スペックの低いマシンでログインサーバーとキャラクターサーバーを動かし、
スペックの高いマシンでマップサーバーを動かしたい場合など特殊なケースです。

これは担当するマップを分配する必要がない分簡単で、
map_conf.txt の接続先 (char_ip, char_port) を変更するだけになります。

＜例＞

	マシンA (192.168.0.2)	キャラクターサーバー
	マシンB (192.168.0.3)	マップサーバー

	構成図
		  マシンA                   マシンB
		login-server
			|
		char-server ----------- map-server

	map_conf.txt (マシンB)
		char_ip: 192.168.0.2
		char_port: 6121


==========================================================================
同じ PC 内でサーバー分散
--------------------------------------------------------------------------

conf ファイルを切り替えるだけでできます。
実行ファイルを複数用意する必要はありません。

char-server のコマンドラインパラメータの内、第１引数が char_athena.conf、
第２引数が inter_athena.conf へのパスです。
これを変更することで別の conf ファイルを指定します。
（たとえば、char_athena2.conf などを用意してそれを指定する)

map-server のコマンドラインパラメータの内、第１引数が map_athena.conf、
第２引数が battle_athena.conf、第３引数が atcommand_athena.conf、
第４引数が script_athena.conf、第５引数が msg_athena.conf、
第６引数が grf-files.txt へのパスです。
基本的には map_athena.conf だけ切り替えればいいでしょう。

（参考）
login-server のコマンドラインパラメータの第１引数は login_athena.conf
へのパスです。同じマシンで複数のログインサーバーを動かす場合に変更します。


==========================================================================
SQL によるデータベースの分散
--------------------------------------------------------------------------

SQL を使用する場合、各種 conf でデータベースサーバーを設定できます。
つまり、専用のデータベースサーバーを用意して使用することもできます。

