----------------------------------------
//0205 [2007/07/06] by Rayce

・bin内のtoolフォルダをトップに移動してbinフォルダを削除する
	gccでMakefileを用いてコンパイルしたとき、生成されるexeファイルはbinではなく
	Aurigaのトップディレクトリに置かれるように変更されます。
	BCC, VCと同様の扱いになります。

----------------------------------------
//0204 [2007/07/05] by Rayce

・dbファイル群の更新 from huge cgi, thanks
・存在しないmapflag pvp_nopenaltyが混入していたので再度削除
・以下のスクリプトでエラーが発生していたので修正
	npc/misc/npc_misc_zonda.txt
	npc/quest/npc_quest_juperos.txt
	npc/quest/npc_quest_kiel.txt
	npc/quest/npc_quest_turbo.txt
	npc/town/amatsu.txt
	sample/npc_test_ev.txt

----------------------------------------
//0203 [2007/07/05] by Rayce

・@autoloot時にアイテムと同じMAPに居ない場合は取得できないように修正（mob.c）
・@autolootで取得したアイテムもPT分配の対象になるように修正（mob.c）
・グリードで取得したアイテムもPT分配の対象になるように修正（pc.*, skill.c）
　pc_takeitem() から処理本体を pc_takeitem_sub() として切り離してグリードと共通化

・conf/inter_auriga.confの guild_join_limit をデフォルトで「加入可能」の0に変更（int_guild.c）
・040以降、@recallでサーバクラッシュしていたバグを修正（inter.c, intif.c）

----------------------------------------
//0202 [2007/07/02] by Rayce

・getwaitingroomstate関数、getpetinfo関数、gethomuninfo関数から正しく文字列を取得できるように
　一部のaStrdupを使わないように修正（script.c）
・スクリプトで使えるOn系ラベルの最大文字数を24文字から23文字に縮小（npc.c, script.c）
	ev_dbは48文字でstrncmpするため合成されるイベント名は48文字以内に収まる必要があるためです。
	　(NPC識別子) + "::" + (Onラベル) = 23 + 2 + 23 = 48文字

・イベント型NPCスクリプトの名前が A::B::C のようになっているとサーバクラッシュするバグを修正（npc.c）
	今までは B::C が識別子になっていたため、ev_db_final() 内でaStrdupされてない名前をfreeしていました。
	今後は B が識別子になります。
	2回目以降に "::" が出現した場合はそれ以降の文字列は捨てられます。

・malloc.hから不要なincludeを外す（malloc.h, httpd.c, graph.c）
・malloc.cの整理

----------------------------------------
//0201 [2007/06/30] by Rayce

・コメントアウトしてあったBL_VALIDATEをコードから抹消（map.*）
・dspにデフォルトで /wd4819 を付ける

・MEMWATCHがオンの場合に、サーバを停止するときsocket.cがunfreedとして誤認される問題を修正（malloc.c）
・MEMWATCHがオンの場合はUSE_MEMMGR無しとして自動的に定義されるように修正（malloc.c）
	MEMWATCHを使うときはUSE_MEMMGRによるメモリマネージャは使えません。
	アライメントが異なるためサーバクラッシュを引き起こします。

・SQL: 0200のtypo修正、stncpy → strncpy（login.c）

----------------------------------------
//0200 [2007/06/29] by Rayce

・バッファオーバーランが起こる可能性があるので一部のmemcpyをstrncpyに修正
・sscanf時にバッファサイズを超えないように修正
・NPC名が24文字以上に長すぎた場合、strnpcinfo関数等で正しく文字列を取得できなかったバグを修正（npc.c）
・battle.cとpc.cの整形のやり残し

----------------------------------------
//0199 [2007/06/28] by Rayce

・party_foreachsamemap() の引数のtypeをrangeに変更して範囲を指定するように変更（skill.c, pc.c, party.c）
・ギルドスキルの有効チェックの一部を pc_check_guild_skill_effective_range_sub() としてまとめる（pc.c）
・pc_steal_item() と pc_steal_coin() の引数を変更（pc.*, skill.c）
・pc.cの全体的な整形（pc.c）

----------------------------------------
//0198 [2007/06/27] by Rayce

・gccで0197がコンパイルエラーになっていたので修正（battle.h）
・スクリプトにgetargcount関数追加（script.c）
	callfuncまたはcallsub内で呼び出し時の引数の個数を取得することができます

・アイテムボーナスオートスペルのEAS_LONGが正常に機能していなかったバグを修正（skill.c）
・autospell構造体のメンバflagをunsinged long型に変更した際の修正漏れを補完（pc.*, script.c, skill.c）
・コメント修正、所得 → 取得

----------------------------------------
//0197 [2007/06/27] by Rayce

・autospell構造体のメンバflagをlong型からunsigned long型に変更（battle.c, map.h, skill.*）
・map_session_data構造体の中で使用されていない以下のメンバを削除（map.h, status.c）
	autospell_id, autospell_lv, autospell_rate, autospell_flag

・battle_delay_damage_sub() が多重に add_timer_func_list() されないように
　do_init_battle(), do_final_battle() を追加（battle.*, map.c）
・battle.cの全体的な整形（battle.c）
・skill_get_inf() の返り値はビット演算で利用するように統一（battle.c, clif.c, skill.c, status.c, unit.c）

----------------------------------------
//0196 [2007/06/23] by Rayce

・battle_auriga.confの hallucianation_off がyesの時はエフェクトのみを無効化するように修正（skill.c, status.c）
	ダメージ表示の数値がばらつく効果だけは有効化されるようになります。
	/effect でエフェクトをオフにしているのと同じ状態になります。

・一部の距離計算で unit_distance() を使うように（battle.c, mob.c）
・clif_GMmessage() を少し改善（clif.c）
・pc_insert_card() を少し修正（pc.c）

----------------------------------------
//0195 [2007/06/11] by Rayce

・/pvpinfoに対するパケット処理追加 from eApp（clif.c）
　ただしPKポイントを表示するだけで、勝敗の部分は0で埋めています
・PC型MobおよびPetがアイテムをルートするとき、拾いモーションが出るように（mob.c, pet.c）
・DEBUG_RUNでスタックをダンプする際、RETINFOも識別するように修正（script.c）
・doc/client_packet.txt更新

----------------------------------------
//0194 [2007/06/06] by Rayce

・getmapxy関数の引数として渡す変数は数値型/文字列型どちらでも扱えるように修正
・「stack.sp(?) != default(?)」のエラー文が出力されるときに発生するメモリリークを修正
・script.cの細かい整形

----------------------------------------
//0193 [2007/06/01] by Rayce

・atcommand.cの細かい整形
・@changemaptype追加、/changemaptypeを有効化（atcommand.*, clif.c）
	/changemaptypeはクライアントの仕様によりセルタイプ0（移動可能）か1（壁）しか選べません。
	3（水場）や5（遠距離攻撃可能な壁）を設定したい場合は@changemaptypeを使ってください。
	またgatファイルでは壁として定義されているセルを移動可能セルに変更する場合、効果があるのは
	コマンド実行時に同一MAP内に居たプレイヤーのみです。
	セル変更パケット0x192を受け取っていないプレイヤーは依然壁として認識したままとなります。

----------------------------------------
//0192 [2007/05/29] by Rayce

・AthenaProject2301, 2302よりmerge、thanks to ルキさん、orz~さん
	-> mapflagにnocommandを追加（atcommand.c, map.h, npc.c, script.c）
	-> アシッドデモンストレーションがディフェンダーを貫通するように修正（battle.c）
	-> プレッシャーがダメージ1固定属性にも貫通していたのを修正（battle.c）
	-> アルケミストの魂状態でポーションピッチャーの効果が上がるよう修正（skill.c）
	-> 合奏開始判定から混乱状態不可削除（skill.c）

・gmcommand命令で使うダミーsdのfdを0に戻す（script.c）

----------------------------------------
//0191 [2007/05/28] by Rayce

・AthenaProject2300を参考に以下を修正、thanks to orz~さん
	-> MOBの攻撃対象がHOMの場合、HOMをターゲットした場合も動くように（mob.c）
	   判定部分を mob_can_lock() としてまとめる
	-> 合奏スキル発動時に相方が状態異常にかかっている場合は失敗するように修正（skill.c）
	-> 武器を外したときと沈黙時に演奏/ダンスが解除されるように修正（pc.c, status.c）

----------------------------------------
//0190 [2007/05/27] by Rayce

・0189でskill.cがコンパイルエラーになっていたので修正（skill.c）
・buildin_delinventory() を少しだけ最適化（script.c）

・AthenaProject2300より一部をmerge、thanks to orz~さん
	-> skill.cの丸付き数字を修正
	-> グランドクロスが物理DEF無視になっていたので修正（battle.c）
	-> カートターミネーションがオートガード、パリイング、リフレクトシールドを
	   貫通するように修正（battle.c）
	-> エスマを武器属性が乗らないように変更（battle.c, status.*）
	-> カートターミネーション、アシッドデモンストレーションに状態異常カードが
	   乗らないように修正（map/skill.c）
	-> メモライズ対象外スキルに激励と治療を追加（unit.c）

----------------------------------------
//0189 [2007/05/26] by Rayce

・AthenaProject2298より一部をmerge、thanks to Cocoaさん
	フリップザコインの成功率が異なっていた点を修正（skill.c）

・AthenaProject2299よりmerge、thanks to Blazeさん
	-> 取り巻きモンスターの挙動を修正（mob.c）
	-> NPCスキル「取り巻き呼び戻し」の範囲を修正（mob.c）
	-> NPCスキル「メタモルフォース」「トランスフォーメーション」のLv2以上実装（skill.c）

----------------------------------------
//0188 [2007/05/26] by Rayce

・AthenaProject2297よりmerge、thanks to Blazeさん
　　・monsterフォルダを細分化
　　　フィゲルまでの最新データ+ラヘル追加マップのデータ更新（script/monster）
　　・ニブルヘイム、生体工学研究所のMVPボススクリプトを本鯖仕様化
　　　（npc_monster_niflheim.txt、npc_monster_lhzdun.txt）
　　・warpにキル・ハイルクエスト関係などを追加（script/warp）
　　・mapflag細分化（script/mapflag）
　　　mapflag更新
　　・map_auriga.conf更新（conf/map_auriga.conf）
　　・キル・ハイルクエスト実装（npc_quest_kiel.txt）
　　・ターボトラック実装（npc_quest_turbo.txt）
　　・ジュピロス保安区域実装（npc_quest_juperos.txt）
　　・商圏投票実装（npc_misc_zonda.txt）
　　・アリーナPTモード実装（npc_quest_arena.txt）
　　　個人戦のモンスター位置や挙動を本鯖仕様化
　　・飛行船スクリプトが巻き戻っていたのを修正（npc_town_airport.txt）
　　　襲撃イベントの挙動・確率などを本鯖仕様化
　　　ミニゲームのタイピングを本鯖仕様化
　　・アインブロック工場クエスト修正
　　　汚染イベントの発生条件、モンスター発生箇所を本鯖仕様化（npc_town_einbroch.txt）
　　・リヒタルゼン、治安維持イベントのバグを修正、本鯖仕様化（npc_town_lighthalzen.txt）
　　・ウンバラ夫婦喧嘩クエスト実装（npc_town_umbala.txt）
　　　シャーマンがクエスト未進行でも進行される問題を修正
　　　バンジージャンプの各種確率、骸骨門に入れる確率、属性石の個数確率などを本鯖仕様化
　　・アマツ刺身包丁クエスト実装（npc_town_amatsu.txt）
　　　通行手形クエストを本鯖仕様化
　　・コンロンクエストを修正（npc_town_gonryun.txt）
　　　闘技場を本鯖仕様化
　　・龍之城クエスト修正（npc_town_louyang.txt）
　　　展望台修正
　　・コモドの一部NPCの挙動を修正（npc_town_comodo.txt）
　　・初心者修練場、レベルに関係なく経験値を得られてしまうのを修正（npc_job_00novice.txt）
　　　職業適性審査の判断箇所を本鯖仕様化
　　・忍者の手甲作成クエスト実装（npc_job_29ninja.txt）
　　・ほとんどのクエストで得られる報酬経験値を本鯖仕様化

----------------------------------------
//0187 [2007/05/26] by Rayce

・set_reg(), script_read_vars(), script_write_vars() の引数にconstを付けるように修正（script.*）
・delitem命令、delinventory命令に可変引数を追加
	ペットの卵の情報の削除をinterサーバに要請したくないときはフラグを入れます
・getinventorylist命令から取得できる情報に @inventorylist_index を追加
	インベントリのインデックスを正しく取得することができます
	今まではこれがなかったためdelinventory命令が正常に利用できない問題があったため

----------------------------------------
//0186 [2007/05/21] by Rayce

・同一MAPを複数のMAPサーバで読み込ませた場合に発生するメモリリークを修正（map.c）
	読み込んでいたが担当外になったMAPも map_eraseallipport_sub() で削除処理します。

・db_insert() 実行時にdb.cのメモリプールが満杯になったらサーバを落とすように修正（db.c）
	今まではdbnが512×4096個以上になったらバッファオーバーフローになっていました。
	配列のサイズを ROOT_BUCKET として定義して、満杯になった時点で
	「malloc_dbn: dbn memory over ??? !!」の警告を出すようにします。
	dbnが確保できないのは問題があるのでサーバを落とすようにしています。
	もしこの警告が出るほど大量にdbnが必要な場合は ROOT_BUCKET の値を上げてみてください。

・intif.cの細かい整形
・save/auriga.txtのデータコンバート処理を改善（char-converter.c）
	char_namedbをわざわざ用意する必要はないので削除
	バイナリサーチを使って友達リストの名前を補完します

----------------------------------------
//0185 [2007/05/20] by Rayce

・タイリギ移動中に敵を通常攻撃すると止まってしまう問題を解消するため、
　タイリギ移動中は通常攻撃不可に暫定的に変更（clif.c）
・タイリギ移動中はアイテムを拾えないようにanti hacker強化（clif.c）

・addtick_timer() をint型からunsigned int型に修正（timer.*）
・add_timer_sub() を add_timer_real() に改名（timer.*）
・status.c, unit.cの細かい整形

----------------------------------------
//0184 [2007/05/20] by Rayce

・@homlvでホムのLvが最大のときはステータスの再計算やエフェクトの表示をしないように修正（atcommand.c）
・バイオエクスプロージョンの範囲を5x5から11x11に修正（skill.c）
・バイオエクスプロージョンを使ってもダメージが発生しないバグを修正（battle.c, skill.c）
	BF_WEAPONだとbattle_delay_damage_sub() の時点で発動元のホムは消滅しているので
	その後のダメージ処理が行われない状況でした。
	武器スキルである必要はないのでBF_MISCに変更しています。

----------------------------------------
//0183 [2007/05/19] by Rayce

・0175で追加した myhpgtmaxrate, friendhpgtmaxrate が読み込めなかった問題を修正（mob.c）
・status_pretimer() でデータの整合性チェックを強化（status.c）
・pk_murderer_pointの設定が経験値取得と売り値補正に反映されてなかった問題を修正（pc.c）
・battle_calc_damage() を少し修正（battle.c）

・ハンマーフォールを素手では使用不可に修正（db/skill_require_db.txt）
・zlibにあるMakefileの改行コードをCR/LFに変更

---------------------------------------
//0182 [2007/05/11] by Rayce

・取得可能なギルドスキルの最大Lvをdb/skill_db.txtではなく、db/guild_skill_tree.txtの
　MaxLv設定に従うように変更（int_guild.c, map.c, guild.*）
	ギルドスキルツリーの設定をdb/guild_skill_tree.txtに一括します。
	ただしdb/skill_db.txtで設定したMaxLvを越えることはありません。
	また、行をコメントアウトするかMaxLvの値を0にすると取得不可スキルになります。

	-> guild_get_skilltree_max() 追加
	-> guild_check_skill_require() でスキルツリーのidとmaxをチェック
	-> guild_skillup() でスキルツリーを違反してスキルを振れないように不正チェック
	-> guild_read_guildskill_tree_db() で最大Lvをチェック
	-> guild_calcinfo() 修正

・clif_parse_GuildRequestInfo() が不必要に呼ばれないように改善（clif.c, map.h, guild.c）
	この関数はギルドウィンドのタブを切り替える度に呼ばれるので、その都度
	クライアントにパケットを送信していました。
	しかしギルド情報が変更されてないのに更新する必要はありません。
	MAPをロードしても一度受け取った情報は消えないようなので、各項目に
	ついて初回だけ呼び出せば良いことになります。

	-> map_session_data構造体のstateに guild_req_info メンバ追加
	-> clif_parse_GuildRequestInfo() で2回目以降の項目はブロックする
	-> ギルド作成時とギルド加入時に guild_req_info を0に初期化する

----------------------------------------
//0181 [2007/05/11] by Rayce

・AthenaProjectのBTS報告分について修正、thanks to TAKUROさん
	-> MOBにルートされた2個以上のアイテムが床にドロップされると
	   1個に変わってしまうバグを修正（mob.c）
	-> 非PTとガンスリンガーには気功転移を発動できないように修正（skill.c）
	-> マスターでないギルドメンバーがギルドスキル一覧を見るとき
	   未修得のものがグレーで表示されるように修正（clif.c）
	-> ストリップウェポン、速度減少、リバースオーキッシュがリログで
	   治るように修正（db/scdata_db.txt）

----------------------------------------
//0180 [2007/05/10] by Rayce

・NPCファイルの読み込みに使うファイル名のリストを双方向リストに変更して処理を単純化（npc.*）
・exit(1) で強制的にサーバ終了するときにメモリリークが発生するときがあるので修正（map.c, npc.c）
	do_final() 以下に続く処理で、水場リスト（waterlist）と
	NPCファイル名リスト（npc_src_list）がまだ残っていれば解放します

----------------------------------------
//0179 [2007/05/10] by Rayce

・エンペリウムに対して運命のタロットカードが発動しないように修正（skill.c）
・ディボーションの使用条件の一部を以下のように修正（skill.c）
	-> 自分および相手がPT未所属だと失敗
	-> 所属PTが異なる場合は失敗
	-> ギルドの所属は問わない

・倉庫に関する修正（intif.c, storage.*）
	-> 最初に開いたときにアイテムを出し入れすると正常にソートされないバグを修正
	-> interサーバからデータ受信したときの処理を修正
	-> ロスト対策として account2storage() および guild2storage() の利用はデータ受信時のみにする

----------------------------------------
//0178 [2007/05/10] by Rayce

・コンパイルオプションの AC_MAIL をSQLモードでも利用可能に拡張（login.c, char.c）
	処理を集約するために、AC_MAILが無効になっている場合でも必ずloginサーバに
	データを送信するように変更しています

・0176でgccのときにコンパイルエラーになっていたのを修正（mob.h）
・SQL: 0177のコンパイルエラーおよびwarning修正（int_guild.c）

----------------------------------------
//0177 [2007/05/10] by Rayce

・int_guild.cとguild.cを全体的に整形
・ギルド城データベース castle_db をツリーDBから配列に単純化（int_guild.c, guild.c）
・エンブレム変更処理部分をclif.cからguild.cに移動（clif.c, guild.*）

・0115以降、以下のスクリプト命令/関数において、assignされてないMAP名を入れたときに処理が
　実行されなくなっていたバグを修正（script.c）
	getcastlename
	getcastledata
	setcastledata

・guild構造体から使われてないメンバ castle_id を削除（mmo.h, int_guild.c, char-converter.c）
	セーブデータの形式が変更されているのでご注意を

・TXT: JOURNAL_IDENTIFIERをバージョン04に変更しておく（journal.c）
・SQL: main.sql修正、Auriga-0177_changetable.sql添付

----------------------------------------
//0176 [2007/05/09] by Rayce

・mob.cの全体的な整形
・以下の関数の処理を少し改善（mob.c）
	mob_can_reach()
	mobskill_anothertarget()
	mobskill_use()

・0175に引き続き一部の関数および引数にconstを付ける
・0150以降、ギルド城にカプラとガーディアンが設置できなくなっていた問題を修正
　（script/npc/gvg/npc_gvg_steward.txt）

----------------------------------------
//0175 [2007/05/08] by Rayce

・AthenaProject2296を参考に以下を実装、thanks to Sheepさん
	Mobスキルの使用条件に myhpgtmaxrate, friendhpgtmaxrate を追加（mob.c）

・Mobが反撃可能かどうかを判定を行う際、ダメージディレイが消える場合があったので修正（mob.c）
・Mobのスキル使用条件の一部でホムがターゲットとして認識されてなかったので修正（mob.c）
・mob_can_counterattack() の引数を増やしてターゲットを二重に検索しないように改善（mob.c）

・一部の関数および引数にconstを付ける
・skill_timerskill構造体をmap.hからskill.hへ移動
・status_pretimer構造体をmap.hからstatus.hへ移動
・skill.cとstatus.cを少し整理

----------------------------------------
//0174 [2007/04/29] by Rayce

・AthenaProject2295よりmerge、thanks to Blazeさん
　以下Readmeより転載
　　・スクリプトに指定場所にアイテムをドロップするdropitem命令を追加（script.c）
　　・スクリプトに経験値を取得するgetexp命令を追加（script.c）
　　・カードの出血耐性の効果が反映されなかったのを修正（status.c）
　　・ガトリングフィーバー状態の攻撃力・移動速度・Flee値を修正（status.c）
　　・空蝉の回避方向を相手の位置関係から見て後方になるように修正（battle.c）
　　・命令追加による各種スクリプトの修正
	（npc_job_00novice.txt）
	（npc_quest_arena.txt）
	（npc_town_airport.txt）
	（npc_town_ayothaya.txt）
	（npc_town_einbroch.txt）
	（npc_town_hugel.txt）
	（npc_town_lighthalzen.txt）
	（npc_town_louyang.txt）
　　・初心者修練場の職業適性審査修正
	（npc_job_00novice.txt）
　　・ニブルヘイムのロードオブデスを修正
	（npc_town_niflheim.txt）

　　※dropitemの仕様はAthenaProjectをベースに改変しているので注意

----------------------------------------
//0173 [2007/04/27] by Rayce

・PC型Mob/Petに関する処理方法の見直し（clif.c, mob.*, skill.c, status.c, unit.c）
	mob_db構造体のメンバ view_class には pc_calc_class_job() の計算結果を保存しておきます。
	transが不要になるので削除し、代わりに pcview_flag を追加しています。
	view_class の値を使ってPC型であるかどうかを判定することもできますが、煩雑になるので
	実行速度を重視してフラグをstaticに保存しておくようにしました。
	今後は mob_is_pcview() を使って判定してください。

・見かけ取得系の関数 mob_get_* はあまり意味がないので全てマクロに書き換え
・typo修正、buttom → bottom

----------------------------------------
//0172 [2007/04/27] by Rayce

・取得可能なスキルの最大Lvをdb/skill_db.txtではなく、db/skill_tree.txtおよびdb/homun_skill_tree.txtの
　MaxLv設定に従うように拡張
	各職業ごとにスキルの最大Lvを変更できるようになります。
	例えばMagicianはファイヤーウォールをLv5までしか覚えられないが、WizardはLv10まで取得可能など。
	ただしdb/skill_db.txtで設定したMaxLvを越えることはありません。

	-> pc_get_skilltree_max() 追加
	-> homun_get_skilltree_max() 追加
	-> do_init() で do_init_skill() を do_init_pc() よりも優先して実行するように変更
	-> skill_db.txtの読み込み時にMAX_SKILL_LEVELを越えてないかチェックするように強化

　　※ただし @allskill は例外です。
　　　プレイヤーがGMでbattle_auriga.confのgm_allskillが設定されている場合は、skill_tree.txtのMaxLvではなく
　　　skill_db.txtのMaxLvまでスキルを取得します。

・養子職のスキルツリーを独自に設定できるように拡張
	今までは養子のスキルツリーは通常職と同じものを使っており、db/skill_tree.txtのUpperを2にしても
	全く反映されていませんでした。
	battle_auriga.confに追加されたbaby_copy_skilltreeをnoにすると、養子職専用のスキルツリーを作る
	ことができるようになります。

　　※noにした場合はskill_tree.txtに養子用のツリーを追加してください。
　　　デフォルトのままだと一切のスキルが取得ができない状態になります。

・db/skill_tree.txtおよびdb/homun_skill_tree.txtで、同一のスキルIDがある場合は下に書いたもので上書き
　されるように修正
・skill_use_bonus_autospell() の処理を少し最適化
・homun.cおよびhomun.hの整理
・db/skill_tree.txtのMaxLvの値が間違っていた部分を修正
・doc/db_refにスキルツリーに関する説明を追加

----------------------------------------
//0171 [2007/04/25] by Rayce

・試験的に、攻撃開始時に歩行停止を実行するとき座標補正パケットを送信しないようにしてみる（clif.c）
	shift押しで他PCをクリックしたとき、目的地に到着する直前で後方に引き戻されるのを解消するための処置です。
	並んでいるPCに対してshiftクリックすることでPCに重なることができるようになります。
	動きが幾分滑らかになってるはずですが、座標補正しないので見かけ上位置ズレする問題があります。
	これは結果的にAthena mod1468で行われた修正の一部を巻き戻すことになっています。

　　※shiftクリックで移動させる場合、まず clif_parse_Walktoxy() が呼ばれて移動開始します。
　　　クライアント側が目的地の半歩手前に到着した時に clif_parse_ActionRequest() のパケットが飛んできます。
　　　この時点ではまだサーバ側は目的地の１歩手前なので、座標補正すると引き戻されるようです。
　　　クライアントとサーバの擦り合わせがまだまだ不十分なのでこれで当面は保留。

・Mobのワープやスキルユニットの移動において、ブロックを変更する必要がない場合は
　map_delblock(), map_addblock() を実行しないように最適化（map.h, mob.c, skill.c）
	マクロ map_block_is_differ() 追加

・Mobの移動途中において、一歩先にバジリカのセルが設置されているかどうかの判定は
　恐らく不要なので削除してみる（unit.c）
・Auriga0170で添付し忘れた doc/client_packet.txt を同梱

----------------------------------------
//0170 [2007/04/25] by Rayce

・聖体降福に関する修正（skill.c）
	-> 発動条件がアコ系キャラが「周囲1セル内に2人居たら」になっていたので、「X軸方向の両隣に2人居たら」
	   に修正、片側に重なっていても可とする
	-> skill_check_condition_use_sub() でモンクがアコ系に含まれていなかったのを修正
	-> mapforeachinareaの実行は対象となる2人が確定した時点で検索打ち切りにする
	-> アコ系キャラが3人以上居た場合、全員がSPを消費してしまうのを修正
	-> 補助者のSP消費が遅延する問題を修正
	-> 補助者の消費SPは10固定ではなく、術者のSPの半分になるように拡張

・バード/ダンサーの合奏スキルに関する修正（skill.c）
	-> 自分と相方が共にPT未所属でも合奏が発動した問題を修正
	-> 相方が楽器もしくは鞭を装備してないと発動しないように修正
	-> 相方が死亡していたら発動しないように修正
	-> 相方のSPが発動に必要なSPに満たない場合は発動しないように修正
	-> 発動時に相方もSPを消費するように修正

・gmcommand命令で使うダミーsdのfdを-1にするように修正（script.c）

----------------------------------------
//0169 [2007/04/25] by Rayce

・temperタブへのキラー情報表示実装
	自分が最後に殺した相手の名前（Kill）と自分を最後に殺した相手の名前（Killed）を
	temperタブで見ることができます。

	-> charid2nick構造体をmmo.hからmap.hへ移動
	-> map_session_data構造体にメンバ kill_charid, killed_charid を追加
	-> clif_update_temper() 追加

　　※battle_auriga.confの set_pckillerid を save_pckiller_type に改名しています。
　　　また値の使い方が変更されているので確認してください。
　　　デフォルトでは無効になっているので利用したい場合には設定してください。
　　　PvP, GvG, PKで仕分けが可能になっています。

　　※PC_KILLER_IDは廃止されます。
　　　代わりに PC_KILL_CHAR, PC_KILLED_CHAR が用意されます。
　　　今まではアカウントIDでしたが、本実装に伴いキャラクターIDに変更されています。
　　　スクリプトから呼び出す場合には十分注意してください（script/sample/npc_test_pcevent.txt参照）。

　　※PC_KILL_CHAR, PC_KILLED_CHAR は埋め込み変数として登録されています（db/const.txt参照）。
　　　スクリプトや@writevarsから値を書き換えると即座に対象キャラのtemperタブへ反映されます。

・map_reqchariddb() で返信付きキャラ名問い合わせを複数のプレイヤーが同時に行うと、最初の人にしか
　返信されない問題を修正
	charid2nick構造体のメンバ req_id を linkdb_node型の req に変更しています。
	既に名前問い合わせ要求済みでキャラサーバからの返信待ちの場合、返信すべきプレイヤーのアカウントIDを
	リンクリストに保存しておきます。
	map_addchariddb() が呼び出されたときにリストにあるプレイヤー全員に返信します。
	このときtypeに応じて clif_solved_charname() および clif_update_temper() を実行します。

・接続完了時にパートナーの名前をキャラサーバに要求するように変更（clif.c, pc.c）
	「あなたに逢いたい」を使用したとき、パートナーが一度もログインしてなくても
	即座に名前が呼ばれるようになります。
	スキル使用時にキャラ名の問い合わせを行うと map_reqchariddb() や map_addchariddb() がややこしく
	なるからというのが理由。

----------------------------------------
//0168 [2007/04/24] by Rayce

・元職業の算出について最適化
	pc_base_job構造体の宣言をmap.hに移動し、map_session_data構造体のメンバとして追加
	pc_authok() および pc_jobchange() のときだけ pc_calc_base_job() を実行して
	元職業の情報を保存しておきます
	各関数でわざわざ pc_calc_base_job() を呼び出さず直接値を取得できます

----------------------------------------
//0167 [2007/04/24] by Rayce

・pc_calc_base_job() でtypeの判定を行うとき、スパノビならtype=3にするように変更（pc.c）
　今のところtypeは利用されてませんが一応残しておきます
・map_session_data構造体から使われていないメンバ mob_view_class を削除（map.h, pc.c）

・party_member_added() でサーバクラッシュする可能性を修正（party.c）
・Mobが寒いジョークおよびスクリームを使うとき姿が消えないように修正（skill.c）
・clif_displaymessage() と clif_disp_onlyself() を同調させる（clif.*）
　引数の仕様を変更してメッセージにconstを付けるように修正

----------------------------------------
//0166 [2007/04/23] by Rayce

・以下の敵指定型の範囲攻撃スキルで他PCをshift+クリックしても発動するように修正（skill.c）
　例え範囲内に敵が存在していなくてもSPもアイテムも矢も消費します
	グリムトゥース
	ブランディッシュスピア
	シャープシューティング
	スプレッドアタック
	風魔手裏剣投げ
	龍炎陣
	朔風

　これらのスキルは敵関係チェックを skill_castend_id() ではなく skill_castend_damage_id() で行います。
　必要に応じて is_enemy フラグを利用してください。
　また battle_skill_attack() に渡すフラグ値の使用ビットを拡張しています。
　0x01000000を渡したときはスキルエフェクトのみを表示し、ダメージ処理は行いません。

　※今のところは暫定でskill.cに直接ハードコーディングしてますが、いずれはskill_db.txtのinf2
　　あたりを使ってある程度の設定ができるようにしたいとは思ってます

・ベナムスプラッシャーをボス無効に修正
・ベナムスプラッシャーの処理方法を最適化
・風魔手裏剣投げのダメージが分散スプラッシュするように修正
・風魔手裏剣投げの範囲攻撃部分が多段HIT表示されるように修正
・龍炎陣のスキル倍率を修正してみる
	Lv5のとき 900% x 3hit → 300% x 3hit

----------------------------------------
//0165 [2007/04/22] by Rayce

・高速化のため map_charid2sd() を手抜きマクロから関数に変更（map.*）
・map_quit() を少し整理（map.c）
・map_freeblock_timer() を呼び出す間隔を1分から10分にしてみる（map.c）
	エラー自体見たことないのでこの処理を丸ごと削除しても良さそうだが･･･

・pc.c, pc.hの整理
・motdの表示処理を少しだけ改善（pc.c）
・skill_tree構造体のneedメンバの配列が一つ多かったので修正（pc.c）

----------------------------------------
//0164 [2007/04/21] by Rayce

・倉庫に関して
	-> storage_flagがあるときは移動できないようにanti hackerチェック強化（clif.c）
	-> ギルドを解散したときにギルド倉庫のロック解除をinterサーバに要求しないように修正（storage.c）
	-> 倉庫データ受信時に既に倉庫を開いていないかチェックするように強化（intif.c）
	-> 倉庫データを切断待ちのクライアントが受信するとデッドロック状態になる可能性を修正（intif.c）
	-> アイテムをソートするタイミングが間違っていたので修正（storage.c）
	-> 倉庫を開いたままログアウトするとアイテムがソートされないバグを修正（storage.c）
	-> 紛らわしいので関数名の変更（guild.c, intif.c, storage.*）
		guild_storage_delete  → storage_guild_delete
		guild_storage_additem → storage_guild_additem
		guild_storage_delitem → storage_guild_delitem

	-> 試験的に、倉庫を開いている時のみデータをセーブするようにする（pc.c, unit.c）
	   自動セーブの時に個人倉庫のデータを不必要にセーブしなくて済むようになります
	   代わりにギルド倉庫と同様に倉庫を閉じるときや離脱するときにセーブするように変更しています

	-> 倉庫を閉じた瞬間にサーバクラッシュされるとアイテムのデュープが起こる問題の対策
	   battle_auriga.confに save_player_when_storage_closed を追加
	   デフォルトではnoですが負荷が掛かることよりもデータの安全性を優先したい場合はyesにしてください

----------------------------------------
//0163 [2007/04/21] by Rayce

・AthenaProject2294を参考にして以下を修正、thanks to Blazeさん
	-> フェオリチャギを多段HIT表示されるように修正（skill.c）
	-> ピアーシングショットをDEF無視攻撃に修正（battle.c）

・ROメールの添付アイテムを取得する部分を mail_getappend() として切り離す（intif.c, mail.*）
・mail_calctimes() はほとんど意味がないので削除（mail.*）
・unit_movepos() の返り値が間違っていた部分を修正（unit.c）

----------------------------------------
//0162 [2007/04/20] by Rayce

・AthenaProject2293よりmerge、thanks to 名無しさん
	-> 生命保険証のデスペナ軽減回数を設定可能に拡張（pc.c）
	   例えば「sc_start SC_LIFEINSURANCE,1800000,3;」で3回デスペナを軽減します
	-> 武器精錬で精錬不可のものがリストに出てしまうのを修正（clif.c, skill.c）
	   AthenaProject BTS報告Cocoaさん thank's
	-> オシリスカード装備時にリザレクションをするとSP表示が反映されなかったのを修正（skill.c）
	   AthenaProject BTS報告masterさん thank's

----------------------------------------
//0161 [2007/04/20] by Rayce

・ダメージが負のときの属性補正計算が間違っていたので修正（battle.c）
・弓でも三段掌が発動するように修正（battle.c）
・三段掌の判定順をダブルアタックよりも優先するように修正（battle.c）
・ゴスペルはボス属性に対しては無効にしてみる（skill.c）
・ガンバンテインはミストレスカードやウィザードの魂があってもジェムを消費するように修正（skill.c）
・ゴスペル、グラフィティ、温もりのスキルユニットグループが削除されるとき
　状態異常も解除するように修正（skill.c）
・skill.cのプロトタイプ宣言について細かい修正（skill.*）
・SC_GOSPELにReleaseable+4が入っていたのを修正（db/scdata_db.txt）

----------------------------------------
//0160 [2007/04/20] by Rayce

・map_searchrandfreecell() の更なる最適化（map.*）
	呼び出し元で配列変数を用意して、関数内部で空きセルの座標を順に格納します
	あとは呼び出し元で atn_rand() を使って任意のセルを抽出してください
	MAPの範囲チェックは map_getcell() でも行われるのでここでは省略しています
	これに伴い cell_xy 構造体を新しく追加

・緊急召集の修正（skill.c）
	-> 範囲はギルドマスターの周囲7x7セル
	-> battle_auriga.confの emergencycall_point_randam を emergencycall_point_type に改名
	-> emergencycall_point_type が1の場合、出現位置は完全なランダム
	   2の場合も同様にランダムだが「崖越えEMC」を禁止する
	   デフォルトでは本鯖に近いと思われる1に設定

・運命のタロットカードに関する修正（skill.c, status.*）
	-> 出るカードの種類の出現確率に偏りを持たせる
	   統計を取っていたサイトのデータを参考に適当に設定しました
	-> 運命の輪が連続で出続けると理論上無限ループが起こる可能性を修正
	-> 魔術師、力、悪魔、太陽の効果時間はskill_cast_db.txtのupkeep_time2を利用する

・PC以外にも混乱が発揮するように修正（unit.c）
・script_read_vars() でメモリをアロケートしなくて済むように修正（script.c）
・battle_auriga.confの no_emergency_call をデフォルトでnoに変更しておく

----------------------------------------
//0159 [2007/04/19] by Rayce

・path_search_real() に渡す walkpath_data 構造体はNULLでも使えるように改善および処理の最適化（path.c）
	based on eA, thx a lot!!

・0125以降、一部の歩行経路で壁を回り込んでの移動ができなくなっていたバグを修正（unit.c）
・rand() を atn_rand() に変更し忘れ箇所を修正（char.c, httpd.c, journal.c, login.c, path.c）
・unit.cの細かい修正および整形

----------------------------------------
//0158 [2007/04/18] by Rayce

・friend.cを少し修正

・SQL: 見栄えが良くないので、拳聖の感情のセーブデータを memo テーブルから切り離して
       feel_info テーブルに保存するように変更（char.c, char-converter.c）

	memo テーブルで使っていた type フィールドは廃止
	付属のAuriga158-changetable.sqlを実行すると自動的にデータが feel_info テーブル
	にコンバートされます

----------------------------------------
//0157 [2007/04/18] by Rayce

・script.cのbuildinで使われている変数の一部をshort型からint型に変更（script.c, unit.*）
・スクリプトで使える基数として2進数をサポート（script.c）
	0bを頭に付けて記述します。
	ビットフラグを明瞭に表現したいときなどに。

	0b1101 [2進数] = 13 [10進数] = 0xd [16進数] = 015 [8進数]

----------------------------------------
//0156 [2007/04/17] by Rayce

・AthenaProject2292の一部をmerge、thanks to Blazeさん
	-> デスペラードのダメージ発生インターバルを150ms → 100msに変更（skill.c）
	-> 実行範囲を持つNPCの範囲内でhideon→offをした時、スクリプトが再走しなかったのを修正（npc.c）

・クローズコンファインをボス属性無効に修正（skill.c）
・ストーンカースのLv6が以上のとき成功時にジェムが消費されないバグを修正（skill.c）
・skill_check_condition2() を少しだけ書き換え（skill.c）
・usediteminfo関数で製造者のIDを取得するとき、名前入りアイテムでない場合は0が返るように修正（pc.c）

----------------------------------------
//0155 [2007/04/17] by Rayce

・anti hacker、merged from eA（clif.c, map.h）
	-> MAPロード時に認証完了しているかどうかチェックする
	-> エモーション使用時に1秒以上インターバルがあるかどうかチェックする
	   clif_parse_Emotion() のパケットを短時間に連続で送信されると周囲のプレイヤーを
	   サーバキャンセルで落とすことができる穴を防ぎます

----------------------------------------
//0154 [2007/04/17] by Rayce

・アイコンパケットを送信するだけの状態異常を廃止
	以下の5つの状態異常はsc_dataとして実装する必要がありません。
	状況に応じてアイコンパケット0x196を送り付けるだけで良いからです。

	SC_RIDING   : pc_isriding() で状態の取得が可能
	SC_FALCON   : pc_isfalcon() で状態の取得が可能
	SC_WEIGHT50 : pc_50overweight() で状態の取得が可能
	SC_WEIGHT90 : pc_90overweight() で状態の取得が可能
	SC_DEVIL    : SG_DEVILを覚えているかどうかで判断可能

	-> 重量オーバーのアイコンを送信したかどうかの判定のためmap_session_data構造体にicon_weightメンバ追加
	-> pc_checkweighticon() 変更
	-> pc_setoption() 変更

・1プレイヤーにのみアイコンパケットを送りつける clif_status_load() 追加（clif.*）
	merged from eA, thx a lot!!
・カートを外すときにクライアント側で保存されているアイテムデータを消去するように修正（clif.*, pc.c）
	clif_cart_clear() 追加
・チェンジカートを使用したときサーバ側でベースレベルのチェックをするように強化（pc.c）
・clif_status_change() に SI_*** ではなく SC_*** を渡していた箇所を修正（skill.c, status.c）
・タイガーアイのパケット送信に clif_status_load() を使うように改善（pc.c, status.c）

----------------------------------------
//0153 [2007/04/16] by Rayce

・BCCのときも__int64型をatn_bignumber型として使うように変更（utils.h）
	32bitに強制変換されるバグが発生するのは恐らくunsignedのときだけだと思います
	atn_bignumber型はsignedなので問題はないはず
	不具合が起こる人は BIGNUMBER_DOUBLE をdefineしてコンパイルしてください

・eAを参考に clif_parse_LoadEndAck() の書き換え（clif.c）
	一部の処理の順番を変更しました
	またテレポやMAP移動などによる画面の切り替え時にクライアントに送られるパケットの量が削減されます

----------------------------------------
//0152 [2007/04/15] by Rayce

・温もり系の吹き飛び方向およびセル数がおかしくなっていた問題を修正（battle.c）
・skill_blown() の処理順を少し修正（skill.c）
・0136のゴスペルの修正が不完全だったので再度修正（status.c）
・skill.c, status.cの細かい整形

----------------------------------------
//0151 [2007/04/15] by Rayce

・battle_auriga.confの party_join_limit がnoのときに、パーティの機能が誤作動するバグを修正（party.c）
	refered from AthenaProject2291, thanks

----------------------------------------
//0150 [2007/04/15] by Rayce

・AthenaProject2291の一部をmerge、thanks to 暇人さん
　以下Readmeより転載
　　・料理(課金用)、戦闘教範50、生命保険証の効果を実装 (pc.c、status.c、status.h)
　　・上記の効果実装の為、関連dbを更新 (const.txt、item_db.txt、scdata_db.txt)

・Expペナルティ処理を修正してまとめた pc_exp_penalty() を追加（pc.c）
・レディムプティオ使用時、mapflagにnopenaltyが設定されていてもExpペナルティを受けるように修正（pc.c）

・064以降、「レディムプティオ」と「パパ、ママ、大好き」によるデスペナルティ回避効果が
　発動しなくなっていたのを修正（db/scdata_db.txt）
・battle_auriga.confの death_penalty_type を2に変更しておく
・db/const.txtからギルドスキル系の定数を削除
・db/const.txtのオートスペル系の定義を16進数に変更

----------------------------------------
//0149 [2007/04/14] by Rayce

・AthenaProject2290の一部をmerge、thanks to Blazeさん
　以下Readmeより転載
　　・NPCスキル「不死属性付与」効果時の挙動を修正（status.c、status.h)
　　・拳聖スキル「太陽と月と星の奇跡」を暫定実装（battle.c、battle.h)
　　・太陽と月と星の奇跡の発動確率を変更できるように修正（battle_athena.conf）

・SI_NIGHT が SI_MIRACLE に変更されたので@night, @dayのエフェクト表示部分をコメントアウト（atcommand.c）

----------------------------------------
//0148 [2007/04/14] by Rayce

・AthenaProject2289-fixよりmerge、thanks to 暇人さん
　以下Readmeより転載
　　・料理使用時のアイコン(STR〜LUK、HIT、FLEE、CRITICAL)を表示するように修正 (status.c、status.h)
　　　AthenaProject BTS報告chaさん thank's
　　・料理使用時ログアウトしても効果が残るように修正 (scdata_db.txt)

----------------------------------------
//0147 [2007/04/14] by Rayce

・AthenaProject2288よりmerge、thanks to Blazeさん
　以下Readmeより転載
　　・NPCスキルの召喚系の仕様変更。種類 x Lv 匹 -> Lv 匹、召喚範囲の修正（mob.c)
　　・ソウルリンカースキル「エスク、エスウ、エスカ」の状態時、姿を維持しなかったのを修正（status.c)
　　・拳聖スキル「太陽と月と星の融合」状態のときは、移動速度が上がるように修正（status.c)
　　・拳聖スキル「太陽・月・星の温もり」のノックバック方向をMobの向きに依存するように修正（skill.c)
　　・MobスキルDBの召喚を変更に伴い修正（mob_skill_db.txt）

・skill_blown() で吹き飛ばしセル数が0のときは何も処理しないように修正（skill.c）
・mob_summonslave() の引数を一つ増やす（mob.*）

----------------------------------------
//0146 [2007/04/13] by Rayce

・高速化のため skill_get_skilldb_id() をマクロに変更（skill.h）
・db/skill_db.txtの読み込みの際、skill_get_skilldb_id() を使って
　スキルIDの範囲チェックを行うように最適化（skill.c）
・unit_skilluse_id() および unit_skilluse_pos() を最適化（unit.c）
・補正済み射程を返す skill_get_fixed_range() を追加（clif.c, mob.c, skill.*, unit.c）

・ギルドスキル使用時のNULLチェック追加（skill.c）
・skill_check_condition2() からギルドスキルに関するチェックを削除（skill.c）
	チェックが二重になるので skill_check_condition2_pc() だけで良い

----------------------------------------
//0145 [2007/04/13] by Rayce

・clif.cの全面的な修正や整形
	-> バッファオーバーフローする可能性を修正
		clif_GlobalMessage()
		clif_party_message()
	-> 引数の仕様を変更
		clif_clearflooritem()
		clif_dispchat()
		clif_clearchat()
		clif_showvendingboard()
		clif_closevendingboard()
	-> ホムの情報を参照すべきところがPCの情報を参照しているバグを修正
		clif_homskillinfoblock()
		clif_homskillup() 
	-> clif_set009e() を clif_dropflooritem() に吸収
	-> clif_set01e1() の処理を変更
	-> パケット送信用のバッファをunsigned char型に修正
	-> nullpoチェックが抜けてる箇所を修正

----------------------------------------
//0144 [2007/04/13] by Rayce

・0143の温もりに関する修正（battle.c, pc.c, skill.c, status.c, unit.c）
	-> status_change_end() 内でスキルユニットを削除する
	-> skill_unit_group のアドレスの保存先をsc_dataのval3からval4に変更
	-> battle_calc_weapon_attack() の一部を修正

----------------------------------------
//0143 [2007/04/12] by Rayce

・AthenaProject2286-fixよりmerge、thanks to Blazeさん
　以下Readmeより転載
　　・拳聖スキル「太陽・月・星の温もり」実装（skill.c、battle.c、status.c、unit.c、pc.c)
　　・マップを移動した時、拳聖スキル「太陽・月・星の安楽」の効果を削除するように修正（pc.c)
　　・スキルユニットを設置後、ハエやマップ移動で消えてしまうのを修正（pc.c、unit.c)
　　・上記変更に伴うunit_remove_map関数の仕様変更
　　	（unit.c、unit.h、pc.c、mob.c、npc.c、pet.c、script.c、atcommand.c)
　　・テコン系列の各種スキルの使用SPや詠唱時間などが間違っていたのを修正
　　	（skill_require_db.txt、skill_cast_db.txt）
　　・テコン系列の蹴りスキルを3段HITするように修正（skill_db.txt）
　　・ガンスリンガースキル「グラウンドドリフト」の発動時エフェクトを修正（skill.c、skill_unit_db.txt）
　　・モンスターの最低沸き間隔時間を5秒から1秒（本鯖仕様）に修正（mob.c、unit.c）

----------------------------------------
//0142 [2007/04/11] by Rayce

・guild_member構造体から使われないメンバ rsv1, rsv2 を削除
・guild_explusion構造体から使われてないメンバ acc, rsv1, rsv2, rsv3 を削除
	セーブデータの形式が変更されているのでご注意を

・mapif_parse_GuildLeave() を少し修正（int_guild.c）
・一部のmemcpyをstrncpyに修正（chat.c, clif.c, npc.c）

・TXT: JOURNAL_IDENTIFIERをバージョン03に変更しておく（journal.c）
・SQL: main.sql修正、Auriga-0142_changetable.sql添付

----------------------------------------
//0141 [2007/04/10] by Rayce

・家族PTによるLv差を無視した経験値公平機能実装（int_party.c, intif.*, party.c）
　以下の条件が揃ったときに設定可能
	-> 親子の3人だけのPT
	-> 養子キャラがオンライン
	-> 両親のうちどちらかがオンラインで養子キャラと同一MAPに居る
	   （もう一人の親については特に制限しない）
	-> 両親のLvが70以上
　以下は仕様
	-> 誰かがMAP移動やログアウトした時点で公平は解除
	-> 誰かが加入・脱退した時点で公平は解除

・party構造体のメンバ exp, item をunsigned char型に変更（mmo.h, inter.c, party.*）
・doc/inter_server_packet.txt修正

----------------------------------------
//0140 [2007/04/10] by Rayce

・TXT: アカウントデータ（auth_dat）およびキャラデータ（char_dat）の検索を高速化（login.c, char.c）
	バイナリサーチのアルゴリズムを使って検索します
	もしセーブデータのIDが順番に並んでない場合は、ロード時に挿入ソートして補正します

	login_id2idx() 追加
	char_id2idx() 追加

----------------------------------------
//0139 [2007/04/09] by Rayce

・プレイヤーの base_level, job_level を保存する変数をunsigned short型に変更（mmo.h, mob.*, pc.c）
	map.hのMAX_LEVELを増やせば255以上にも対応可能になります

・isspace() に渡す引数をunsigned char型にキャストするように修正（atcommand.c）
・clif_packet_debug() の関数本体を削除し忘れ（clif.c）
・細かい修正や整形（int_homun.*, int_party.c, int_pet.c, homun.c）

・SQL: levelに関連するフィールドの型を変更（main.sql, Auriga139_changetable.sql）

----------------------------------------
//0138 [2007/04/04] by Rayce

・AthenaProject2284よりmergeおよび一部改変、thanks to Blazeさん
　以下Readmeより転載
　　・Mobスキル「エモーション」によるモードチェンジ実装（skill.c)
	　　mob_skill_db.txt、エモーションの値2にmodeを入れるとその値へモードチェンジします。
	　　例）アルギオペ追跡時にノンアクティブ化（移動1+攻撃128=129）
	　　1099,エモーション＠アルギオペ,chase,197,1,100,0,5000,no,self,always,0,19,129,,,,
　　・Mobの複数の同じスキルは使用後ディレイを共有するように修正（mob.c)

・不要なローカルプロトタイプ宣言を削除（mob.c）
・mobskill_use_id() および mobskill_use_pos() を移動（mob.c）
・使われてないプロトタイプ宣言を削除（mob.h）
	mobskill_use_id2()
	mobskill_use_pos2()
	mobskill_use_id_sub_command_to_slave()

----------------------------------------
//0137 [2007/04/04] by Rayce

・AthenaProject2281よりmerge, thanks to 暇人さん
　以下Readmeより転載
　　・スキル「マグヌスエクソシズム」のFlag値をエラーが出ない様に修正 (db/skill_uniti_db.txt)
　　・飛行船NPCの一部修正 (npc_town_airport.txt)

・AthenaProject2282よりmerge, thanks to Paraさん
　以下Readmeより転載
　　・追加された2種類のペット「クリスマスゴブリン」「餅」を実装（db/pet_db.txt）

----------------------------------------
//0136 [2007/04/03] by Rayce

・AthenaProject2280よりmerge, thanks to Blazeさん
　以下Readmeより転載
　　・スキル「火炎陣」のHIT数を修正 (db/skill_db.txt)
　　・アサシン転職クエストのJob50時の処理を修正 (npc_job_12assassin.txt)
　　・混乱発動時の挙動を修正 (src/map/status.c)
　　・ゴスペル効果「全状態異常耐性」を耐性計算している状態異常のみに対して発動するように (status.c)
　　・ジークフリードの状態異常耐性実装 (status.c)

----------------------------------------
//0135 [2007/04/03] by Rayce

・AthenaProject2279よりmerge, thanks to Blazeさん
　以下Readmeより転載
　　・スキル「火炎陣」の仕様を修正 (skill.c)
　　・スキル「一閃」の仕様を修正 (skill.c)
　　・ファイアーボールが多段HITしていたのを修正 (skill.c)
　　・スキル「投擲修練」の効果が風魔手裏剣などに適用されていたのを修正 (battle.c)
　　・スキル「影分身」が影宝珠を消費せずに使用できたのを修正 (db/skill_require_db.txt)
　　・忍者スキル・ガンスリンガースキルの攻撃力・詠唱時間などを修正
　　　(src/map/battle.c、db/skill_db.txt、db/skill_cast_db.txt)
　　・ガンスリンガーのスキルで装備制限の相違を修正 (db/skill_db.txt)
　　・忍者スキル・ガンスリンガースキルで装備制限の相違を修正 (db/skill_db.txt)

----------------------------------------
//0134 [2007/04/03] by Rayce

・太陽と月と星の融合を使ったときに拳聖の魂が解除されるように修正（skill.c）
・死亡している敵プレイヤーがサイトブラスターの効果範囲内に居るとサイトブラスターが
　解除されてしまうバグを修正（status.c）
・不要な関数 clif_parse_debug() を削除（clif.c）

・db/packet_db.txtの一部を修正
・パケット解析結果を doc/client_packet.txt に反映

----------------------------------------
//0133 [2007/03/27] by Rayce

・clif_homskillup() は0x10eではなく0x239のパケットを使うように修正（clif.c）
・ホムの腹減り値に使うパケット0x230のtypeを0x200に修正（homun.c）

・party_share_loot() を party_loot_share() に改名（party.*, pc.c）
・party_member構造体のメンバのサイズ変更（mmo.h, int_party.c, party.*）
	leader : unsigned char
	online : unsigned char
	lv     : unsigned short

----------------------------------------
//0132 [2007/03/25] by Rayce

・battle_auriga.confを少し整形
・typo修正 penaly → penalty（battle.*, status.c）
・スクリプトのsc_end命令でダンス状態とバジリカが正常に解除されるように修正（script.c）

・ゴスペルに関する修正（skill.c, status.c, unit.c）
	-> ゴスペル中にハエの羽などでテレポートすると動けなくなる問題を修正してみる（unit.c）
	-> status_change_end() 内でスキルユニットを削除する
	-> skill_unit_group のアドレスの保存先をsc_dataのval3からval4に変更
	   グラフィティに合わせるため

----------------------------------------
//0131 [2007/03/24] by Rayce

・サーバースナップショット（version.h）
・不要なファイルを削除
	bcc32_consqlmake.bat
・全てにおいて「Athena」の冠を撤去、「Auriga」に変更

----------------------------------------
//0130 [2007/03/24] by Rayce

・使われてない battle_config.unit_movement_type を削除（battle.*）
・char.dspの一部が間違っていたので修正
・db類の更新 thanks to huge cgi

----------------------------------------
//0129 [2007/03/23] by Rayce

・socket_athena.confの socket_ctrl_panel_url の読み込みを少し修正（socket.c）
・httpd_erase_pages() でメモリリークが発生する可能性を修正（httpd.c）

・関数名マクロ __func__ をVCでも使えるように修正（malloc.h, nullpo.h, utils.h）
	malloc.hとnullpo.hでの定義をutils.hにまとめる
	VC7.0以上であればgccと同様にnullpoエラーが出たとき関数名が出力されるようになります

----------------------------------------
//0128 [2007/03/22] by Rayce

・BCCとVCでSQLの設定が容易に出来るようにbatファイル修正（bcc32_clean.bat, bcc32_make.bat, vc_make.bat）
　BCCでのtxt-converter.exeの作成はbcc32_make.batに吸収
　bcc32_consqlmake.batは不要になったので削除予定

・doc/sqllogin.txtの内容を適切なものに編集
・doc/server_build.txtに少し加筆

・SQL: BCCでstrcmp系のエイリアスが重複定義エラーとなる場合があったので修正（utils.h）
・SQL: login-converter.cの read_gm_account() がおかしかったので修正（login-converter.c）

----------------------------------------
//0127 [2007/03/22] by Rayce

・httpd.cで警告が出ていたので修正（httpd.c）
・*.dspのビルドオプションに NO_HTTPD_CGI をデフォルトで入れておく

・SQL: converter.*のinclude関連修正
・SQL: athena.dswにmap_sql.dspを追記し忘れていたので更新

----------------------------------------
//0126 [2007/03/21] by Rayce

・0125の unit_walktoxy() の変更が不完全だったため、アクティブMobが常に2歩後退するように
　なっていたバグを修正（mob.c, pet.c）
・障害物およびバジリカ判定は目的地に到着してないときだけ行うように修正（unit.c）
・unit_movepos() で移動させたときパーティのHP情報通知検査が誤作動する可能性を修正（unit.c）

・アサシンの回避率上昇スキルによる移動速度増加効果が何かしらのステータス異常にかかっていないと
　発現しなかったバグを修正（status.c）
・クローキングの速度増加の計算方法を修正、壁チェックの処理を最適化（skill.c, status.c, unit.c）
・status_calc_pc() 内の速度に関する処理を少し最適化（status.c）

----------------------------------------
//0125 [2007/03/20] by Rayce

・バジリカの条件チェックは詠唱完了時には行わず詠唱開始時のみ行うように修正（skill.c）
・PCが移動要求したとき unit_can_move() が2回呼ばれていた無駄を修正（clif.c）
・歩行中に障害物に当たる際、障害物にめり込まないように変更（unit.c）
・unit_walktoxy() の返り値が間違っていたので修正（unit.c）
　移動出来たら1を、失敗なら0を返すように変更します

・歩行は半歩ずつではなく一歩ずつ行うようにしてみる（map.h, mob.c, path.c, pet.c, unit.c）
	マスの境界では今のところ何も処理しないため
	不要になったpath_halfをwalkpath_data構造体から削除

----------------------------------------
//0124 [2007/03/19] by Rayce

・nextやselectなどで入力待機中のプレイヤーをattachrid関数でアタッチしたとき、元のスタック情報が破棄
　されずスクリプトの誤作動やメモリリークが発生していたので修正（clif.c, script.c）
・npc_checknear() でチェックに引っ掛かったら警告を出力するように（npc.c）
・db/scdata_dbのReleasableの項目にSC_BASILICAを許可した場合、バジリカのセルが解除されるように修正（status.c）

----------------------------------------
//0123 [2007/03/18] by Rayce

・メモライズと緊急召集はメモライズで詠唱短縮できないように修正（unit.c）
・職業定義をmap.hからmmo.hに移動（char.c, clif.c, guild.c, mmo.h, map.h）
・guild_send_memberinfoshort() を少し修正（guild.c）
・db/scdata_dbのReleasableの項目にSC_DANCINGを許可した場合、演奏状態が正常に解除されるように修正（status.c）
　ただし死亡時だけは安全性維持のためdbの設定に関わらず必ず解除されます

・gccでLOCALZLIBを指定しないときはsrc/common/zlibをコンパイルしないように修正

----------------------------------------
//0122 [2007/03/17] by Rayce

・MinGWでのコンパイルに関する修正
	-> LOCALZLIB無しでコンパイル出来るように修正（grfio.c）
	   Win系と同じく動的にdllをロードするので -lz は付けない
	-> 今のところ利用してないが一応 MINGW をdefineしておく
	-> #pragma で警告が出るので -Wno-unknown-pragmas を付ける

・Makefileに関してeAよりmerge
	-> gcc4.X系で大量に出る警告の抑制
	   自動でgccのversionを取得して -Wno-unused-parameter と -Wno-pointer-sign を付ける
	-> -ffast-math をデフォルトで付けておく

・変数の初期化を忘れている箇所を修正（path.c, pc.c）
・0121の警告抑制が不完全だったので修正（core.c）
・パケット0x110と0x223についてeAの情報を追加（clif.c）
・doc/client_packet.txt更新

----------------------------------------
//0121 [2007/03/15] by Rayce

・AthenaProject2278からpacket_db.txtを更新、2007-02-12aSakexeに対応
・skill_unit_move_unit_group() を少し修正（skill.c）
・pid_create() の警告抑制（core.c）

----------------------------------------
//0120 [2007/03/14] by Rayce

・二重ログインをloginサーバで検出できるように修正（login.c, char.c）
　refered from Freya, thanks!!
	login_athena.confでスイッチできるようになっています。デフォルトは本鯖仕様で有効。
	無効にすると従来通りchar, mapサーバで検出を行いますが、同一アカウントで複数のワールドに
	ログイン可能なので##変数が正しく得られる保証がありません。
	有効のままにしておくことをお勧めします。

　※ID,Pass入力後、ワールド選択前にキャンセルして再度ID,Passを入力すると
　　「前の接続情報が残っています」と言われてログインが弾かれますが、これは本鯖に近い仕様です。

・二重ログインを完全に防ぐため、キャラ選択完了後にauth_fifoにある同一アカウントの未認証データを
　全て破棄しておくように修正（char.c）

----------------------------------------
//0119 [2007/03/14] by Rayce

・移動情報パケットに0x86を使う（clif.*, skill.c, unit.c）
　merged from eA, thanks a lot!!
	0x7bよりもサイズが遥かに小さく、また服色パケットを再送信しなくても服色を維持出来るようです。
	これにより通信量の大幅な削減が見込まれます。

	clif_movepc(), clif_movemob(), clif_movepet(), clif_movehom() 削除
	clif_move() 追加

・0111の@modelの修正が間違っていたので修正（atcommand.c）
・doc/client_packet.txt更新

----------------------------------------
//0118 [2007/03/14] by Rayce

・シャープシューティング、朔風の攻撃範囲を本鯖仕様に修正（map.*, skill.c）
	以下の問題点があったため map_foreachinpath() を完全に書き換えて map_foreachinshootpath() としました。
	　- 射線が考慮されておらず壁があっても攻撃が当たる
	　- 斜め方向に打つときの領域が本鯖よりも細くて長い、形が異なる
	　- 射線幅が1なので map_foreachinpath() を3回呼び出さなければならない

	直線方向は矩形になるので map_foreachinarea() に path_search_long() のチェックを入れるだけで済ませます。
	斜め方向の領域チェックは少々厄介ですが、ベクトル座標系に正規化して行います。
	判定に要する計算量が少なくて済む上に射線幅が広くなっても対処できます。

　※壁に対する挙動メモ
　　◎ = 攻撃主, ○ = 発動, × = 不発, ■ = 壁

　　　　　　　　　○○○○××　　　　　　　　　　　　　　○○■×××
　　　　　　　　　◎○○○■× →　　　　　　　　　　　 　◎○○○○○ →
　　　　　　　　　○○○○××　　　　　　　　　　　　　　○○○○○○

　　　射線上に壁があるとそのラインで止まる　　射線上になければ突き抜ける
　　　実質の射程距離が減少する　　　　　　　　壁の後ろ部分は path_search_long() で判定

----------------------------------------
//0117 [2007/03/11] by Rayce

・interサーバへホムの新規作成要求を行うとき、以下の条件でセーブデータが削除されずにゴミが
　残り続けたり他キャラのホムデータを受信するバグを修正（int_homun.c, homun.*, inter.c）
	- 返答が届く前にプレイヤーがログアウトしている
	- 返答が届く前に同じアカウントの別キャラにチェンジしていた
	- コールホムンクルス未取得なキャラが@makehomunを使った

・SQL: mapサーバのMakefileがSQL対応になっていなかったのを修正

----------------------------------------
//0116 [2007/03/11] by Rayce

・イベントデータの検索はcase-sensitiveで行うように修正
	基本的にイベントデータは Test::OnKilled のような形になっていますが、
	前半のNPC名はcase-sensitive、後半のラベル名はcase-insensitiveです。
	今まではラベル名を優先してcase-insensitiveで検索を行うようになっていましたが、
	NPC名にマルチバイト文字を使っている場合には他のNPCのイベントが呼ばれる不具合がありました。
		例）イ::OnEvent と ツ::OnEvent があった場合
		　　donpcevent "イ::OnEvent"; を実行すると ツ::OnEvent も呼ばれてしまう

	そこでNPC名を優先して今後は完全にcase-sensitiveで行います。
	上記の例では イ::OnEvent のみが呼ばれます。
	ただし イ::OnEVENT は別物として扱われるようになるので注意してください。
	また副次的効果として、strdb_search() がそのまま使えるので npc_event_do() の検索能が向上します。

・NPCイベントを呼び出す際、NPC名に : が含まれる場合を考慮するように修正
・npc_event() を少し修正
・「npc file syntax error」となるときの警告文を改良（npc.c）

----------------------------------------
//0115 [2007/03/10] by Rayce

・スクリプト命令/関数に関して全体的に修正（script.c）
　　-> 以下の命令/関数でアイテムが見つからなかったとき、リンゴのIDで補正しないように変更
　　　　　　countitem
　　　　　　countcartitem
　　　　　　checkweight
　　　　　　getitem
　　　　　　getitem2
　　　　　　delitem
　　　　　　getareadropitem
　-> 以下の命令/関数においてMAP名の "this" 指定に対応
　　　　　　getcastlename
　　　　　　getcastledata
　　　　　　setcastledata
　-> getequipid関数で何も装備してない場合は-1ではなく0を返すように修正
　-> getwaitingroomstate関数で文字列を取得する際、特定の状況でサーバクラッシュするバグを修正
　-> 細かい整形

----------------------------------------
//0114 [2007/03/10] by Rayce

・0113のmonster定義について修正（npc.c）
	イベント名が数字1文字だけの場合はイベント指定無しと同じ扱いにします。
	現状の npc_monster.txt にはダミーイベントとして0または1が書かれている
	ことを忘れていました･･･。

・トルリョチャギ使用時、敵の周囲3x3にいる他のMobを1セル吹き飛ばしながらスタンにかかるように修正（battle.c, skill.c）
	吹き飛ばし距離は skill_db.txt のblow_count、スタン時間は skill_cast_db.txt のupkeep_time2

----------------------------------------
//0113 [2007/03/09] by Rayce

・NPC定義でmonsterを指定する場合（定期沸き設定のもの）について変更（npc.c）
	-> イベントが23文字までしか指定できなかった問題を修正
	   今後はscriptのmosnter命令と同様に49文字まで指定できます
	-> イベント名が4文字以下の場合はイベントとして設定されなかった問題を修正
	-> ギルドIDを設定する際の引数の位置を変更
	   Athena1228から続く仕様を変更してギルドIDが最末尾になります！
	   詳細はdoc/script_ref.txtを参考にしてください
	-> 引数の個数チェックを強化

・スクリプトのmonster命令の仕様変更（script.c）
	上記のNPC定義monsterと同様にギルドIDを指定する引数の位置を変更します！

----------------------------------------
//0112 [2007/03/09] by Rayce

・scriptlabel_dbへの登録はOnで始まるイベントラベルに限定するように修正（script.c）
	通常のラベルはエクスポートされず最終的には全く利用されなくなるためです。
	function構文で使う関数名もエクスポート対象外になりますので、他スクリプトから
	完全に遮蔽されて安全性がさらに高まります。

・scriptlabel_dbへの登録前にラベル名をチェックするように強化（npc.c, script.c）
	npc_convertlabel_db() でラベル名を正しく取得するため、以下の条件をエラーとして扱います。
	ただしOnで始まるイベントラベルだけであり、通常のラベルには適用されません。
		- ラベル名に余計な文字が含まれている
		- ラベル名が24文字以上である

・NPC名に : が一文字だけ含まれているとき無限ループに陥るバグを修正 from eA（npc.c）
・npc.cおよびnpc.hの細かい整形
・gccでの警告潰し（int_guild.c, atcommand.c）
・0111で更新し忘れていたconf/help.txtを添付

----------------------------------------
//0111 [2007/03/09] by Rayce

・atcommand.cについて
	-> @kamib, @kamic, @monstermapが大文字で使えなかった問題を修正
	-> @modelで服色を変更するとき、テコン系職も服色未実装判定に加えるように修正
		ついでに引数に-1を指定できるように拡張, thanks to as on AthenaProject
		-1指定の箇所は変更しません
	-> @produceで製造できるアイテムが特定IDの範囲に縛られていた問題を修正
	-> @str, @agi, @vit, @int, @dex, @lukの最適化
	-> @night, @dayをeAライクに変更
		暗闇状態だと視野が狭すぎるのとログアウトできない問題があったので、アイコン番号160を
		SI_NIGHTとして定義して利用することにします
		パケットを送り付けるだけなのでeAのような高い機能はありません
	-> @giveitemも@itemと同様にIDを負の値にするとランダム系アイテムを取得できるように拡張
	-> @usersで利用するデータベースをstrdbからnumdbに変更
	-> MAX_SIZE_FIX, RCT_MAXがデフォルトよりも大きな値に設定していた場合、@mobinfoでサーバクラッシュ
	   する可能性を修正
	-> 細かい整形

----------------------------------------
//0110 [2007/03/08] by Rayce

・map.cについて
	-> map_foreachinmovearea() の処理を少し改善
	-> map_check_dir() を書き換え
	-> 細かい整形

----------------------------------------
//0109 [2007/03/06] by Rayce

・コンパイルオプションからNO_CSVDBを削除（db.*, script.c）
	db.cの関数そのものに問題があるわけではないので、スイッチを設けて機能抑制する意味はない
・Makefileから -Wno-sign-compare を削除

・SQL: スクリプト経由でのSQLクエリ発行はセーブデータのデータベースと別に出来るように修正（map.*, script.*）
	sqlquery関数の危険性を軽減するための処置です。
	map_athena.confにさらにスクリプト専用の設定項目を追加しています。
	デフォルトはセーブデータと同じですが、別途変更すれば異なるデータベースに保存することが可能です。
	セーブデータで使うIDとは別に専用のIDを用意して適切なアクセス権限を与えることで、sqlquery関数による
	操作を重要なセーブデータから隔離することができます。

・SQL: map_athena.confに sql_script_enable の項目を追加
	sqlquery関数を利用可能にするかどうかのスイッチです。
	デフォルトでは0（無効）にしておきます。

----------------------------------------
//0108 [2007/03/06] by Rayce

・スクリプトにおける構文もcase-insensitiveに変更
	大文字と小文字が区別なしになります。eA互換。
	ifとIF、switchとSWITCHはそれぞれ同等です。

・CSVアクセス命令でデータを書き込む際に指定するファイル名の規制緩和
	/（スラッシュ）_（アンダーバー）の使用を許可します。
	ディレクトリの指定ができるのでカレントディレクトリに置かなければならない縛りがなくなります。

・script_athena.confでimportすると最初に設定したデータが初期化されるバグを修正
・script_athena.confのcheck_gotocountを16384に上げておく（128*128）

----------------------------------------
//0107 [2007/03/05] by Rayce

・SQL: スクリプトにsqlquery関数、strescape関数追加 based on eA（script.c）
	CSVアクセス命令/関数と同等の動作を可能にします。
	ただしCSV系のような安全性やセキュリティ面のための利用規制は一切設けていません。
	危険な動作（セーブデータの破壊、インジェクション攻撃など）が容易に可能ですが、全て利用者の
	責任に委ねられますので注意してください。
	GRANTさえあれば如何なるSQL文も発行できます。

	CSV系とは異なりデータのキャッシュは作りません。
	データのやり取りを行う際は常にクエリがSQLサーバに飛んでいます。
	また一度に発行するクエリは64kB以内にしてください（長い場合は無視されます）。

　※利便性を高めるために一部eAとは異なる仕様にしています。
　　（SELECT以外の場合の返り値や、SELECTは二次元配列にデータ格納する点など）
　　詳細は doc/script_ref.txt や sample/npc_test_sqlquery.txt を参照。

----------------------------------------
//0106 [2007/03/04] by Rayce

・BCC, VCでstrncasecmpが使えるようにdefineを書き換え（utils.*）
　utils.cにあった自作のstrcasecmpは不要になったので削除
・@helpの一部のコードをstrncasecmpに最適化（atcommand.c）
・map_searchrandfreecell() の処理を最適化（map.c）

----------------------------------------
//0105 [2007/03/04] by Rayce

・MAPサーバが正常に終了するときのみOnFinalラベルを実行するように変更
　（core.*, login.c, char.c, converter.c, map.c）
	do_pre_final() 追加
・@mapexitの clif_GM_kick() は不要なのでいきなり exit(1) で落とすように修正（atcommand.c）

・スクリプトに関する追加機能（script.c）
	-> 制御コードをサポート
	   改行 "\n" は内部の処理で \r\n に置換されています
	-> 文字列の連結をサポート
		mes "aaa"
		    "bbb";　は mes "aaabbb"; と同等になります

----------------------------------------
//0104 [2007/03/04] by Rayce

・098のOnFinalラベル実装において致命的なバグがあったので修正（map.c, script.c）
	do_final_script() のあとに do_final_npc() が実行されるようになっていたので
	do_final_npc() 内で script_free_code() が呼ばれるときには既に str_buf, str_data が
	解放されているという最悪の状態になっていました。
	do_final_script() からOnFinalイベントの実行処理を切り離し、do_final_npc() の
	後に呼び出すように修正しました。

・map_addflooritem() のミスを修正（map.c）
・guild_recv_memberinfoshort() を少し修正（guild.c）

・SQL: char_set_online() と char_set_offline() の処理をまとめる（char.c）

----------------------------------------
//0103 [2007/03/03] by Rayce

・親密度が0になってペットが消えるとき intif_delete_petdata() が二重に呼ばれていたため
　「pet data delete failure」が出力されるバグを修正（pc.c, pet.c）

・ペットがアイテムをルートするときのAIを少し最適化（pet.c）
・battle_athena.confに pet_loot_type を追加（battle.*）
・MOB, PETがアイテム個数上限のときにルートを行う処理において、memcpyをmemmoveに最適化（mob.c, pet.c）

----------------------------------------
//0102 [2007/03/03] by Rayce

・ペットの卵のデータが削除されずセーブデータにゴミが残り続ける問題の修正、残り全て
	-> サーバ停止時に床アイテムを消すとき（map.c）
	-> map_addflooritem() でアイテム設置失敗したとき（map.c）
	-> サーバ停止する時点でMOBがペットの卵をルートしていたとき（npc.c）
	-> ペットが消える際にペットの卵をルートしていたとき（pet.*, unit.c）

・ペットがルートアイテムを所持する設定のとき、リスタートおよび他MAPサーバへの移動で
　ルートアイテムが消失してしまうバグを修正（clif.c, pc.c）

----------------------------------------
//0101 [2007/03/03] by Rayce

・ペットの卵のデータが削除されずセーブデータにゴミが残り続ける問題の修正、続き（map.*, mob.c, pet.c）
	MOBとPETのルートアイテムが地面に落ちるまでのディレイタイムの間にサーバが停止する場合について。
	do_final_timer() からは intif_delete_petdata() が実行できないので、delay_item_drop2構造体にnext
	メンバを追加しペットの卵をドロップするときはリンクリストのキューを作って管理することにしました。
	0100のタイマーヒープの変更はこのための布石です。
	登録した順にタイマーが実行されるのでキューの順番が狂うことはないはずです。

	map_push_delayitem_que()
	map_pop_delayitem_que()
	map_clear_delayitem_que() 追加

----------------------------------------
//0100 [2007/03/03] by Rayce

・タイマーヒープの優先順位を変更（timer.c）
	タイマーヒープへデータをpushする際の二分挿入ソートで、tickが等しい場合は大の方へ
	挿入されるように変更します。
	つまり先に登録されていた方が優先的にpopされることになります。

・上記の変更に伴う不具合を修正（char.c, chrif.c）
	charサーバがloginサーバへ、mapサーバがcharサーバへそれぞれ接続するとき認証が完了する前に
	send_users_tologin() を実行するようになっていました。
	check_connect_login_server() に対する実行順序の依存性を断ち切るために、セッションのauthがある
	かどうかを判定するように修正しています。

・タイマー関数リストに登録し忘れている関数をリストに追加（socket.c, pet.c, script.c）

・SQL: 099におけるinterサーバのペットデータの削除について、本来は成功として扱われるべき
　     ものが失敗として扱われるようになっていたので修正（int_pet.c）

----------------------------------------
//099 [2007/03/02] by Rayce

・@itemでアイテムIDに負の値を入れたとき、対応する番号のランダム系アイテム（青箱やカード帖など）
　を取得できるように拡張（atcommand.c）
・mob.cとpet.cにある delay_item_drop, delay_item_drop2構造体はほぼ同じなので
　まとめてmap.hで定義するように移動
・猛虎硬爬山のスキル発動タイミングを1sec遅らせるように修正 from eAthena（skill.c）

・SQL: interサーバでペット情報をdeleteする際、ペットIDが見つからなかった場合はTXTと同じように
       失敗flagを返すように修正（int_pet.c）

----------------------------------------
//098 [2007/02/28] by Rayce

・MAPサーバ終了時にchar,interサーバへデータを送信できるように修正
　　今まではキャラがMAPサーバ内に残っている状態でいきなりサーバを停止すると、キャラデータやギルドExpのキャッシュなどが
　　セーブされず巻き戻り等の不具合が発生するという仕様でした。
　　今回の修正によりMAPサーバ停止時に必要なデータをchar,interサーバに送信するようになったので、わざわざ@kickallで
　　キャラを全員kickしてからサーバを止めるといった一連の手間をかけることなく安全に停止出来ます。
　　map.c::do_final() で行う処理の順番が非常に重要になっていますので、今後何かしら修正を加えるときは注意してください。

	1. まず最初に do_final_script() を実行する
	   OnFinalイベント（詳細は後述）で実行されるスクリプトが如何なる制約も受けないようにするため、一番最初に
	   この関数を呼び出す必要があります

	2. ギルドExpのキャッシュをinterサーバにフラッシュする
	   guild_payexp_timer_sub() でギルドに関する情報を取得する必要があるため、必ずキャラ切断の前に実行する
	   必要があります

	3. chrif_disconnect_sub() で全キャラを切断します
	   今までは do_final_chrif() 内で行っていましたが、do_final_chrif() は char_fd を -1 にしてしまうので
	   char,interサーバのパケットバッファにデータを保存することができません
	   そこで切断処理だけを先に行うようにしています

	4. 残りの do_final関数群を実行します
	   これまでと同様に各ファイルで必要な後始末をします
	   ただし do_final_storage() は少し修正を加えて、numdb_final() したあとに倉庫dbをNULLにしています

	5. 床アイテムを消去します
	   必ず全キャラを切断したあとに処理を行う必要があります
	   キャラ切断時には map_quit() が呼ばれますが、ペットが居るときで且つペット自身がルートアイテムを保持する
	   設定になっていて、飼い主が重量オーバーでペットからアイテムを受け取れない状況であればアイテムは床に
	   ドロップされるからです
	   今まではこの事例が発生するとメモリリークになっていましたが修正されます

	6. 最後に do_final_chrif() を実行する
	   内部で flush_fifo() を呼び出します
	   do_final() は既に core.c のwhileループを抜けた後なのでパケットの送受信は行えません
	   そこでこの関数を明示的に呼び出すことで、do_final() 内で溜めたパケットデータをchar,interサーバへ送信する
	   ことが可能になります
	   続いて chrif_disconnect() が呼ばれますが、キャラのセッションは全て閉じた後なので chrif_disconnect_sub()
	   は実行されません
	   また倉庫のキャッシュを消す処理は専用の関数 storage_clear_cache() を用意しています
	   4. で倉庫dbはNULLにしてあるので実質何もしないことになります

	※ storage_clear_cache() はcharサーバだけが停止して socket.c のデストラクタから chrif_disconnect() が呼ばれた
	   ときに意味を持ちます
	   numdb_final() / numdb_init() を使わずに numdb_clear() だけで済むようになります
	   また上記の 6. で numdb_init() されると後始末処理をさらに入れる必要が出てくるから、という理由もあります

	-> flush_fifo() 追加、from eAthena（socket.*）
	-> chrif_disconnect() 修正（chrif.c）
	-> chrif_disconnect_sub() をグローバルに変更（chrif.h）
	-> guild_flush_expcache() 追加（guild.*）
	-> do_final() 修正（map.c）
	-> storage_clear_cache() 追加（storage.*）
	-> do_final_storage() 修正（storage.c）

・スクリプトにOnFinalラベルを追加
	MAPサーバ停止直前に実行されます。OnInitラベルなどと同様の使い方です。
	キャラのデータへアクセスしたり変数を書き換えたりなど、全ての処理が通常通り作動することを保証します。
	ただしsleepやNPCタイマーなどで遅延処理させることはできません。
	例えば以下のような使い方が想定されます。

	// 他の全MAPサーバへアナウンスする
	izlude.gat,130,115,4	script	Announcer	113,{
		end;
	OnFinal:
		announce "マップサーバ01が停止しました",0;
		end;
	}

----------------------------------------
//097 [2007/02/27] by Rayce

・atcommand.cを全体的に修正（atcommand.c）
・古いPACKETVERでもコンパイルできるように修正（clif.c）

・以下の項目でアイテムを削除するとき、ペットの卵のデータが削除されずセーブデータにゴミが残り続ける問題を修正
	@itemreset
	@charitemreset
	extra system
	clearitem命令
	pc_checkitem()

----------------------------------------
//096 [2007/02/26] by Rayce

・ギルド名およびパーティ名の検索をcase-sensitiveに修正（int_guild.c, int_party.c, guild.c, party.c）
	本鯖の仕様に従って半角英字は大文字/小文字が区別されるようになります。
	ついでに guild_searchname(), party_searchname() を最適化。

・SQL: アカウントIDの検索をcase-sensitiveに修正（login.c）
・SQL: キャラ名の検索をcase-sensitiveに修正（char.c）

----------------------------------------
//095 [2007/02/26] by Rayce

・ワープポータルがSP消費なしになっていたバグを修正、thanks to hugeさん（skill.c）
・ホールドウェブの効果が切れるときエフェクトが消滅するように修正（skill.c, status.*）
	パケットキャプチャにより SI_HOLDWEB が判明
	アスムなどと同じく clif_skill_nodamage() の前に0x196を送る必要があります

・ターゲット自動選択型のスキル（コンボ系スキルや飛び蹴り等）が距離を無視して発動できていたバグを修正（unit.c）
	ターゲットを補正するタイミングを変更しています。
	また unit_skilluse_id2() の処理内での処理の順番を少し修正しています。

----------------------------------------
//094 [2007/02/26] by Rayce

・新規作成キャラの##変数にデータがコピーされず、全ての##変数をクリアしてしまうバグを修正（char.c）
	get_account_reg2() 追加

----------------------------------------
//093 [2007/02/25] by Rayce

・パケット0xf4の上位版0x1c4を追加（clif.c）
	ペットの装備品やIDが13000以上のアイテムを倉庫に預けると、即座に装備欄に表示されなかった
	問題が修正されます。
	恐らく本鯖はかなり昔に上位版に移行していたと考えられますので、PACKETVERが7以上のときに
	0x1c4をサポートするようにしています。

・gccでコンパイル時にpc.cで警告が出るので修正（pc.c）
・doc/client_packet.txt更新

----------------------------------------
//092 [2007/02/25] by Rayce

・アイテムトグルが固定化されるように修正
	取得したアイテムはインベントリの最後尾に格納される必要がありますが、現在の仕様では配列内で空いている場所
	に格納されるようになっています。
	従って clif_parse_LoadEndAck() でアイテムリストを再送信したときに以前と並びが異なるアイテムリストが
	クライアントに渡されてしまい、トグルが固定化されない原因となっていました。
	そこでアイテムを取得した順に番号を付け、pc_checkitem() でこの番号順にソートするように変更しました。
	item構造体のidメンバがほとんど使われてなかったので、この番号を保存する変数として利用しています。
	pc_checkitem() で行っていたアイテムの空き詰め処理の代わりにqsortを行う形になっていますが、インベントリに
	関してはソート後にアイテムデータベースへのポインタを再設定しないといけないので、以前に比べて若干処理は
	増えていることになります。

	-> item構造体の id メンバを unsigned int型に変更
	-> map_session_data構造体内、state構造体に inventory_dirty, cart_dirty 追加
	   （qsortすべきかどうかを判定するフラグ）
	-> map_session_data構造体に inventory_sortkey, cart_sortkey 追加
	-> pc_setinventorydata() の処理を pc_checkitem() 内に吸収

・倉庫内アイテムの並び換えを修正および拡張
	上記のアイテムトグルと同様に倉庫内アイテムについても格納順に並ぶようにソートするように修正しました。
	battle_athena.confでソート方法を選択することができます。
	ただし今までの storagesort_by_itemid は削除されて personal_storage_sort, guild_storage_sort という項目に
	変更されているので注意してください。

	0のときはソートしません。速度重視。
	1のときはitem構造体のidを使って格納順にソートします。本鯖準拠。
	2のときはアイテムIDでソートします。091以前のバージョンの方法です。
	3のときは種類でソートします。まずtypeでソートし、次に武器・防具ならLoc（装備箇所）でソートし、
	最後にアイテムIDでソートします。これにより同じタイプのアイテムが近くに集まるようになります。

	-> storage構造体、guild_storage構造体に sortkey 追加
	-> storage_comp_item_by_key(), storage_comp_item_by_nameid(), storage_comp_item_by_type() 追加
	-> sortage_gsortitem() を削除し storage_sortitem() で一括処理できるように変更

・SQL: sql-filesにAuriga092_changetable.sql追加、main.sql更新
       `id` フィールドの使い方が変更されているので注意してください
・SQL: item構造体のidメンバが正しくコンバートされるように修正（char-converter.c）

----------------------------------------
//091 [2007/02/23] by Rayce

・login鯖で0x2712を受け取ったとき、auth_fifoに該当データが見つからなかった場合に
　バッファオーバーフローが生じるバグを修正
　ついでに見つからなかったときは "auth_fifo search error!" が出力されるように（login.c）

・サイズの種類を MAX_SIZE_FIX として定義（map.h, status.c）
	デフォルトでは3です。
	値を増やすことにより小/中/大以外のサイズを定義することが可能です。
	その場合はdb/size_fix.txtで新しく行を追記してください。

----------------------------------------
//090 [2007/02/21] by Rayce

・属性Lvの最大値を MAX_ELE_LEVEL として定義、デフォルトは4（map.h）
・attr_fix_tableの実体をbattle.cからpc.cへ移動（battle.*, pc.*）
・attr_fix_tableに ELE_MAX を使うように修正
	MAX_ELE_LEVEL を増やせば属性Lvが5以上を定義することができます。
	属性は20種類までしか指定できませんが、属性Lvは無制限です。
	属性を拡張する場合はdb/attr_fix_table.txtでテーブルを適切に設定してください。

・076以降ハンマーフォールでスタンが発生しなくなっていた問題を修正（db/skill_cast_db.txt）
・あまり意味がないので BASE_TICK, LIFETIME_FLOORITEM を削除（timer.h, map.h）
・088で混入したゴミコードを除去（skill.c）

----------------------------------------
//089 [2007/02/19] by Rayce

・死亡カウンタをキャラ永続変数ではなくmmo_charstatus構造体としてセーブするように変更 from Freya
　（char.c, mmo.h, map.h, pc.c, status.c）
	死亡カウンタは全職で利用される上、比較的頻繁に更新されるデータなので
	キャラデータの一つとしてまとめることにしました。
	キャラ永続変数は先頭から線形検索するため、PC_DIE_COUNTERが後方に登録されていた場合は
	速度的に不利になるという問題があったためです。

	PC_DIE_COUNTERはdb/const.txtから削除されています。
	死亡カウンタは今後は単なるパラメータとして扱われるので、スクリプトからはDieCounterという
	名前でアクセスしてください。

	セーブデータが変更されているので特にTXTの場合は注意してください。
	PC_DIE_COUNTERの値はセーブデータに変換されないので、各自で移行してください。
	TXTならmannerの次の項、SQLならcharテーブルに追加されたdie_counterです。
	移行完了したらPC_DIE_COUNTERは削除しておくと良いかもしれません。

　※以下のスクリプトを使って各プレイヤーにデータをコンバートさせることも可能です。
　　ただしbattle_athena.confでOnPCLoginラベルが利用できるように設定しておく必要があります。

	-	script	Conv_DieCounter	-1,{
	OnPCLogin:
		if(PC_DIE_COUNTER) {
			set DieCounter,PC_DIE_COUNTER;
			set PC_DIE_COUNTER,0;
		}
		end;
	}

・db/const.txtに記載されているパラメータの内、updatestatus出来ないものの値を変更しようとすると
　警告メッセージが出るのを抑制（pc.c）
	例えば「set Class,0;」を実行すると clif_updatestatus() でエラー扱いになっていました。
	今後はエラーが出なくなりますが、あくまで警告抑制であって実質何もしないコードになります。
・細かい修正（status.c）

・TXT: JOURNAL_IDENTIFIERをバージョン02に変更しておく（journal.c）
・SQL: main.sql更新、Auriga089_changetable.sql追加
・SQL: converter.exe対応、ただし089より古いバージョンは読み込み非対応なので
       必ず一度089以降のTXTモードでデータをセーブしてからコンバートしてください
・SQL: login-converter.cの細かい修正

----------------------------------------
//088 [2007/02/18] by Rayce

・@allskillの修正（atcommand.c, pc,*）
	-> battle_athena.confのplayer_skillup_limitがyesのとき全てのスキルが表示されなかった問題を解消
	-> 引数を一つ取れるように拡張
	   「@allskill 1」とするとbattle_athena.confのquest_skill_learnの設定に関わらず
	   クエストスキルも取得できるようになります

・クローンスキル関連の細かい修正（atcommand.c, skill.c）
・DEBUG_MEMMGRがオンのとき、メモリ消費削減のためタイムスタンプを最適化（malloc.c）

----------------------------------------
//087 [2007/02/17] by Rayce

・MakefileのPACKETVERが 8 になっていなかったのを修正
・script.cの DEBUG_VARS の定義をコンパイルオプションにする
	Makefile, bcc32_make.bat, vc_make.bat参照
・AthenaProjectからのmerge漏れを補完
	-> vc_make.batにCPU最適化スイッチ NOOPTIMIZE を追加
	-> doc/server_build.txt追加、内容を少し加筆および修正
・item_db.txtにtypoがあったので更新, thanks to huge cgi

----------------------------------------
//086 [2007/02/16] by Rayce

・ギルドメンバーの一覧でガンスリンガーと忍者が1_ETCと表示される問題を修正（clif.c）
・DYNAMIC_SC_DATAがオンのとき、ストームガストの凍結挙動がおかしかったバグを修正（skill.c, status.c）

・緊急回避とディフェンスの後にbreakが多分抜けていたので修正（skill.c）
・skill_castend_nodamage_id() を少し修正
・使われていない定数 CLASSCHANGE_BOSS_NUM を削除（mob.c）
・mobdb_searchname() でmemcmpしないように変更（mob.c）
・mob.cを少し整理
・doc/client_packet.txt更新

----------------------------------------
//085 [2007/02/16] by Rayce

・キャラ名を赤文字にするパケット0x220が見つかったので実装（battle.*, clif.*, status.c）
	-> clif_send_murderer() 追加
	-> battle_athena.confでマーダラーに必要なキラーポイントを設定できるように拡張
	   デフォルトは100で、この値以上になるとマーダラーとなり文字が赤くなります
	-> マーダラーシステム（ステータスボーナスなど）を無効にしたい場合には、
	   pk_murderer_pointの値を0に設定してください
	   また、PKモードを全く利用しない場合は0にしておくと良いかもしれません
	-> ステータスボーナスがAll+5になるのはキラーポイントがpk_murderer_pointの4倍以上のときです
	   個別設定できないので注意してください

・ログアウトするときはテレポートのようなエフェクト（clrtype=2）が出るように修正（clif.c, map.c）
・doc/client_packet.txt更新

----------------------------------------
//084 [2007/02/15] by Rayce

・サーバースナップショット（version.h）
・不要なファイルを削除
　　doc/
	mysql.txt
　　sql-files/
	****_changetable.sql
　　script/sample/
	npc_custom_extendshop.txt
	npc_debug_questskill2.txt
	npc_debug_sample.txt
	npc_test_arena.txt
	npc_test_bank.txt
	npc_test_skill.txt
・ファイルの改行コードをCR/LFに統一（29files）
　ただしUNIX環境用のものはLFにしています

----------------------------------------
//083 [2007/02/14] by Rayce

・treedbの全要素を削除する db_clear() を追加（db.*）
	今までは全要素を削除したい場合以下の2通りの方法がありましたが、いずれの方法も無駄な処理が発生します。
	　１．db_foreach() 内で 一つずつ db_erase()
	　２．db_final() したあと再度 db_init()
	db_clear() の利用法は基本的に db_final() とほぼ同じです。
	ただしfree_listとtableは解放しないので再利用が効率的に行えます。
	また巡回は db_foreach() の処理を用いているので db_final() よりも若干高速に作動します。

・以下の関数において numdb_clear() を使うように最適化
	guild_payexp_timer_sub()
	pc_read_gm_account()
	parse_script()

・script_csvreload_sub() でファイル名を検索する際、見つかったらそこで検索終了するように修正（script.c）
・doc/client_packet.txtにパケット0x12bの情報を追加 from eA
　ただし現状では無くても問題なさそうなので使っていません

----------------------------------------
//082 [2007/02/14] by Rayce

・AthenaProject2274よりmerge, thanks to Blazeさん
　以下Readmeより転載
	・飛行船クエスト第2部実装
	・スロットエンチャント実装
	・新春イベント2007年版実装
	・クリスマスイベント2006年版実装
	・2次職クエストスキル習得クエスト一部実装
	・アマツ属性石交換修正
	・アマツ通行手形クエスト修正
	・アマツモモタロ体験クエスト修正
	・ジュノー錬金術修正
	・リヒタルゼン友情クエスト修正
	・ナイト転職クエスト修正
	・ブラックスミス転職クエスト修正
	・ハンター転職クエスト修正
	・アルケミスト転職クエスト修正
	・衝突している変数名を一部変更
	・全ての街スクリプトの手直し
	・jawaiiのモンスターをnpc_monster.txtに移動

----------------------------------------
//081 [2007/02/14] by Rayce

・script/sample内のスクリプトの改修
　推奨される記述を浸透させるためサンプルも書き換えることに決めました
	npc_custom_branch.txt
	npc_custom_cardremover.txt
	npc_custom_gldcheck.txt
	npc_custom_jobchange.txt
	npc_custom_produce.txt
	npc_debug_arrow.txt
	npc_debug_convertvar.txt
	npc_debug_pota.txt
	npc_debug_questskill2.txt
	npc_debug_reset.txt
	npc_debug_revive.txt
	npc_test_bank.txt
	npc_test_chat.txt
	npc_test_chkoption.txt
	npc_test_func.txt
	npc_test_getequip.txt
	npc_test_gettime.txt
	npc_test_gstorage.txt
	npc_test_npctimer.txt

・以下のスクリプトは削除
	npc_custom_extendshop.txt（npc_debug_shop.txtと同じため）
	npc_test_arena.txt（イベントでタイマーを使う場合はNPCタイマーを推奨しているため）
	npc_test_skill.txt（npc_debug_questskill.txtと同じため）

・npc_test_bank.txtをnpc_custom_bank.txtに改名
・npc_debug_questskill2.txtをnpc_debug_questskill.txtに改名
・npc_debug_sample.txtは削除、一部の解説はdoc/script_ref.txtに補完

・getitem2命令を使っているスクリプトを少し修正
	npc_event_xmas.txt
	npc_quest_hat3.txt
	npc_quest_hat4.txt

----------------------------------------
//080 [2007/02/13] by Rayce

・itemdb.cの整理
	-> random_item_data構造体を変更
	-> 新しくMAX_RANDTYPEを定義、ランダム系アイテムの種類を示す
	-> ランダム系アイテムの読み込みおよび検索の処理を最適化
	-> デバッグコードを itemdb_debug_txt() に改名して整理し直し
	-> アイテム名でデータベースを検索する際、見つかった時点で検索終了にする
	   また余計な処理を省くためmemcmpは行わないようにする

　※新しくランダム系アイテムを増やしたい場合は、MAX_RANDTYPEの値を増やし
　　itemdb_read_randomitem() 内でfilenameを追加するだけでよくなりました

・MOBがランダム系アイテムをドロップする場合、該当アイテムIDが取得できなかったときに
　IDが0のアイテムをドロップしてしまう問題を修正（mob.c）

・successremovecards命令およびfailedremovecards命令の修正（script.c）
	-> エフェクトが出るように修正
	   clif_misceffect() だと「精錬成功/失敗しました」のメッセージが出力されてしまうので
	   clif_misceffect2() を使っています
	-> failedremovecards命令でfailtypeが3のときは失敗エフェクトを出すだけで何もしないように修正
	-> successremovecards命令は武具とカードを返却して成功エフェクトを出す必要があるので
	   removecards_sub() ではfailtype = 4として処理します

・ランダム系アイテムdbにおいて、デフォルト設定のアイテムの確率が間違っているものを修正
	db/item_bluebox.txt
	db/item_cardalbum.txt
	db/item_violetbox.txt
・鉱石発見dbのデフォルトアイテムのIDが間違っていたので修正
	db/item_findingore.txt

----------------------------------------
//079 [2007/02/12] by Rayce

・hugeさん作成のdebugパッチを部分的にmerge, thx a lot!!
	-> clif_parse_CloseKafra() を少し修正（clif.c）
	-> MobがドロップするアイテムIDが負のとき、箱系ランダムアイテムにならなかった問題を修正（mob.c）
	-> スティールの確率補正を少し修正（pc.c）
	-> 暖かい風の発動元の引数を少し変更（skill.c）
	-> 移動不可モードなMobをペットにした場合でも移動できるように改善（unit.c）

・一部の rand() を atn_rand() に変更（login.c, clif.c, party.c, pet.c）
・doc/packet_db.txtに解析できた範囲での情報を追記

----------------------------------------
//078 [2007/02/12] by Rayce

・map_athena.confにベインズ系のMAPを追加
・2007-02-05aSakexeを解析したパケット長を追加（db/packet_db.txt）
・db群の更新 thanks to huge cgi

----------------------------------------
//077 [2007/02/11] by Rayce

・AthenaProject2272, 2273とhugeさんの作成されたdebugパッチをベースにmerge
　thanks to KIAさん、Mizukiさん、hugeさん

　　・2006-10-23aSakexe以降のキャラセレパケットに対応（char.c）
　　　PACKERVERが8になっているので、これより古いクライアントの場合は7に変更してください
　　・2007-01-08aSakexeのパケットに対応（db/packet_db.txt）
　　・doc/client_packet.txt更新

----------------------------------------
//076 [2007/02/11] by Rayce

・AthenaProject2271よりmerge, thanks to 名無し＠さん

　　・スタン状態の時間が異常に長いスキルを修正(db/skill_cast_db.txt)
　　・スキルユニットを本鯖に合わせて修正(db/skill_unit_db.txt)
　　	マグヌスエクソシズムを重ね置き禁止
　　・以前追加した遠距離フラグの修正と本鯖に合わせた修正(src/map/battle.c)
　　・サプライズアタックのスタン時間だけ強制3秒になるように修正(src/map/skill.c)
　　	暗闇の時間だけをskill_cast_db.txtから読み込みます
　　・シールドチェインのヒット補正修正
　　・トリプルアクション、トラッキングのダメージ倍率修正
　　・トラッキングにヒット補正追加
　　・ブルズアイにカード補正が乗らないように修正

----------------------------------------
//075 [2007/02/11] by Rayce

・ギルドExpのキャッシュ guild_expcache_db をtreedbに戻す（guild.c）
・numdb_final() および strdb_final() を呼ぶ際、各ノードに対して実行すべき関数がない場合は
　引数にNULLを入れるだけにする
　（friend.c, map.c, npc.c, script.c）
・npc_buylist() および npc_selllist() で使っている itemdb_search() を itemdb_exists() に修正（npc.c）
・double型へキャストしている部分をatn_bignumber型に変更（script.c, status.c）
・script.cを少し整形

----------------------------------------
//074 [2007/02/11] by Rayce

・スクリプト命令のsetusescript, setequipscriptの廃止
	実行中のアイテムスクリプトから自身のスクリプトを変更するとサーバクラッシュしたり、
	sleepと相性が極めて悪いなどの不安定要素があるので思い切って削除することにします

・命令の後に引数が必要な場合、必ずスペースを入れることを強制する
	以下のようにスペースがないコードは今後エラーとして扱われます

	input(@val);
	mes@val;

----------------------------------------
//073 [2007/02/10] by Rayce

・PTのアイテム分配実装 from eA（int_party.c, clif.c, intif.*, party.*, pc.c）
	完全にランダムで取得者を選定します
・battle_athena.confにparty_item_share_type, party_item_share_showを追加（battle.*）
・パーティ設定を変更するコマンド@partyoption追加（atcommand.*）
	通常クライアントからは変更できないアイテム収集方式・分配に関する設定を
	変更するためのコマンドで、PTリーダーのみ効果があります

・あまり意味がないので MIN_ATTRIBUTE, MAX_ATTRIBUTE, ATTRIBUTE_NORMAL, MIN_STAR, MAX_STAR
　のdefineを削除（mmo.h, atcommand.c）

----------------------------------------
//072 [2007/02/09] by Rayce

・PC型Mobが死亡して消滅するときの挙動をbattle_athena.confで決定できるように追加（battle.*, clif.*, unit.c）
	デフォルトは1で、従来通りの方法です。
	しかし1の場合、消滅するまでの間に画面外に移動するとMobの残像が残り続けてしまいます。
	0に設定することでこの問題は解消されますが、ALL_SAMEMAPでパケットを送り付けるので
	関係の無い人にまでパケットを送られることになります。
	2は最も無駄がない設定ですが、Mobがすぐに消滅してしまいます。
	環境に合わせて好きな設定を選択してください。

・パーティメイン情報パケット0x1e9追加 from eA（clif.*, party.c）
	clif_party_option() にはアイテム分配に関する情報は含まれていませんでした。
	クライアントは経験値分配フラグをDWORDで読み取るようです。
	アイテム分配フラグは clif_party_main_info() が受け持ちます。

・課金アイテム販売リスト用のパケット0x287を用意（clif.*）
　ただし動作未確認
	clif_pointshop_list() 追加

・恐らくAthena2240以降、服色を0に変更すると見た目がノービスになる問題を修正（pc.c）
・重量50/90%オーバーは死亡時に解除されないようにdb/scdata_db.txtを修正
・doc/client_packet.txt更新

----------------------------------------
//071 [2007/02/07] by Rayce

・パーティのアイテム分配フラグをinterサーバに渡すための修正
　clif_parse_CreateParty2() でitem, item2の読み取りを有効化
　（int_party.c, inter.c, atcommand.c, intif.*, party.*）
・clif.cの細かい修正

・getelementofarray関数の一次元目の配列において、参照する要素が中途半端な相対位置になっていたので
　絶対位置を参照するように修正（script.c）

　※以下のコードは今までは4が返ってきましたが、2が返るようになります

	function Test {
		mes getelementofarray(getarg(0),1);
		return;
	}
	setarray '@data,1,2,3,4,5,6,7;
	Test '@data[2];
	close;

----------------------------------------
//070 [2007/02/01] by Rayce

・スクリプトの DEBUG_DISASM および DEBUG_RUN で出力される書式を少し修正（script.c）
・使われていない関数 mob_change_summon_monster_data() を削除（mob.*）
・VC++で警告レベルを /W4 にした際に得られた結果の中で気になった箇所を修正
　（char.c, int_guild.c, int_party.c, login.c, mob.c, npc.c）
・関数内で参照されない不要な引数を削除
	clif_quitsave()
	clif_refine()
	clif_devotion()
	clif_guild_explusion()
	clif_guild_message()
	clif_onlymessage()
	intif_announce()
	skill_devotion()

----------------------------------------
//069 [2007/01/30] by Rayce

・scriptに関して全体的な細かい修正（script.c）
	-> infinity loopになったとき、gotocountとcmdcountのどちらが原因かわかるように表示する
	-> 引数として変数が必要な命令/関数で、C_NAMEかどうか必ずチェックするように強化
	　 他の変数を参照したり最悪の場合サーバクラッシュするのを防ぐために、C_NAMEのチェック後に変数名を取得する
	-> 配列の上限128を越えてデータを格納しないようにチェック強化
	-> input命令、divorce関数は引数省略不可に変更
	-> deletearray命令の第二引数を省略不可に変更
	-> getcharname関数の省略可能な第二引数は意味がないので削除
	-> delitem命令でペットの卵を複数個削除すると、ペット情報が1個しか削除されずセーブデータに
	　 ゴミが残り続ける問題を修正
	-> delitem命令の処理を改善
	-> guildskill命令で第三引数を省略したときは、skill命令と同じく値に1を入れるように変更
	-> gettimestr関数でmaxlenの値が小さすぎた場合は警告文を出力するように強化
	-> getequipcardcnt関数、successremovecards命令、failedremovecards命令、checkequipedcard関数で
	　 名前入り装備品もカードとしてみなされる可能性を修正
	-> recovery命令を実行したときにPCにメッセージを表示しないように変更
	-> getpetinfo関数、gethomuninfo関数において名前を返すタイプのもので取得失敗したときは
	　 0ではなく "" （空文字）を返すように変更
	-> checkequipedcard関数がカート内のアイテムを検索しないように変更

・イベントタイマーの残り時間を返すgettimerdiff関数を追加（pc.*, script.c）
・文字列長を返すgetstrlen関数を追加
・strcutを廃止して、より柔軟に文字列を取得できるsubstr関数を追加

・strcut関数を利用していたNPCスクリプトを全てsubstr関数に書き換え
　特にnpc_test_library.txtは根本的に書き直し
	script/npc/event/npc_event_xmas.txt
	script/npc/misc/npc_misc_guide.txt
	script/sample/npc_test_library.txt
	script/sample/npc_test_pcevent.txt

----------------------------------------
//068 [2007/01/29] by Rayce

・return命令で文字列型の '@変数 を返すときダングリングポインタになるバグを修正（script.c）
	return命令が終わった時点で '@変数 は全て解放されてしまうため、文字列型の場合は
	get_val() を実行しただけでは完全な値渡しになりません。
	文字列のコピーを渡す必要があります。

・ステータス異常をセーブデータからロードする際、効果時間が0以下の場合は status_change_start() を
　実行しないように修正（intif.c）
・@npctalkやglobalmes命令でNPCに発言させるとき、NPC名に含まれる#以下の文字列は表示しないように修正（npc.c）

----------------------------------------
//067 [2007/01/26] by Rayce

・共闘をbl.idではなくchar_idで管理するように修正（battle.c, mob.c）
	PCの場合はキャラIDをそのまま使います。
	ホムの場合はブロックIDを負に反転させて使います。
	苦肉の策であることに変わりありませんが、一応PCとホムの区別は出来ています。

----------------------------------------
//066 [2007/01/25] by Rayce

・aStrdupをキャストするように修正（script.c）
・map.dspを少し修正、map_sql.dsp追加

・SQL: マップ永続変数のconvert対応（converter.*, map-converter.*）
	converter_athena.confに map_server_tag を設定する項目を追加しているので、
	複数のデータがある場合にはタグ名を変更して読み込ませてください。
・SQL: 049の最適化が不完全だった部分を修正および巻き戻し等（char.c, inter.c）

----------------------------------------
//065 [2007/01/25] by Rayce

・MAPサーバからSQLを発行できるように追加（map.c）
	map.cでSQLサーバの設定読み込み/connect/closeを行います。
	map_athena.confにMySQL用の設定項目を追加していますので、SQLユーザは自身の環境に合わせて適宜変更してください。

	do_init_map() 追加
	do_final_map() 追加
	map_config_read_sub() 追加

・マップ永続変数をSQLへセーブできるように追加（map.*, script.c）
	`mapreg` テーブルに保存されます。
	`server_tag` フィールドはMAPサーバのタグ名で、map_athena.confの map_server_tag で設定します。
	マップ永続変数は他のマップサーバと干渉しない独立な変数であるため、SQL内で一括管理するために
	このタグ名を使ってサーバを識別します。
	サーバ分割する場合はタグ名を全てのマップサーバで別々のものに設定してください。
	同一に設定することも可能ですが、変数の値が正しく得られる保証がないので推奨されません。
	詳細はdoc/conf_ref.txtおよびdoc/distribute_servers.txtを参照してください。

　※これでようやくsaveフォルダ内の全てのファイルをSQLに移行できました。
　　txt-converter.exeは次回対応予定です。

・マップ永続変数が変更されたときだけmapreg_dirtyを1にするように最適化（script.c）
	セーブの必要がないマップ一時変数が変更されたときもmapreg_dirtyが1になっていたため、
	自動セーブのタイミングで無駄にセーブ処理が行われていました。
	mapreg_setreg(), mapreg_setregstr() に引数を一つ増やし、マップ永続変数であるかどうかを判定しています。

・map.cから read_grf_files_txt が完全に削除されてなかったので修正（map.c）
・064のskill.cで警告が出ていたので修正（skill.c）

----------------------------------------
//064 [2007/01/24] by Rayce

・特定条件でステータス異常が解除可能かどうか、また特定条件下でステータス異常開始を無効にするか、を
　db/scdata_db.txtで設定できるように拡張（battle.c, pc.c, skill.c, status.*）
	詳細はdoc/db_ref.txtを参照。
	基本的には今までソースコードに記述されていた部分をtxtに追い出しただけです。
	設定はあくまでも適当暫定なので修正できる方に任せます。

　※死亡時は落法、PKペナルティ、赤エモだけ解除されません。
　　ディスペルは一部wikiを参考にして解除可否を修正しています。
　　ゴスペルの全状態異常解除はeAを参考に設定しました。

	scdata_db構造体にメンバ releasable, disable を追加
	status_is_disable() 追加
	status_change_release() 追加
	status_change_end_by_jumpkick() 削除
	status_support_magic_skill_end() 削除

・battle_athena.confの cancel_race は不要になったので削除（battle.*, skill.c）

----------------------------------------
//063 [2007/01/22] by Rayce

・ランキングの処理方法を修正
	各ランキングのデータはcharサーバで管理するように修正。
	これによりキャラがログインするまでランキングに登録されない問題や、サーバ分割をしている状況でサーバ移動
	するとランキングが変動する問題などが解決されます。

	追加
		char_build_ranking()
		char_set_ranking_send()
		char_ranking_update()
		char_ranking_delete()
		chrif_ranking_request()
		chrif_ranking_update()
		chrif_ranking_recv()
		ranking_set_data()
		パケット 0x2b2e, 0x2b2f, 0x2b30
	移動
		MAX_RANKING, MAX_RANKER の定義をmmo.hへ
		struct Ranking_Data の宣言をmmo.hへ
		compare_ranking_data() をchar.cへ
	削除
		ranking_sort()
		ranking_update_all()
		ranking_init_data()

　　※charサーバ起動時に char_build_ranking() を実行し、ランキングデータを作成します。
　　　TXTの場合はchar_datを全走査しながらキャラ永続変数を参照するので、かなり頭の悪い方法になっています。
　　　SQLの場合は ORDER BY でソートしたデータを取得できるので一見簡潔に見えますが、`value` には
　　　KEYが設定されていないため結局は Using filesort となりパフォーマンスが低下する可能性があります。

　　※mapサーバがcharサーバに接続完了した時点でcharサーバにランキングデータを要求します。
　　　そのため OnCharIfInit, OnInterIfInit でランキングに関するデータを操作することはできません。
　　　sleepなどを使ってウェイトを置く必要があります。

　　※mapサーバが持っているランキングデータはmapサーバ内の処理で直接変更されることはありません。
　　　データの参照や、データを更新する必要があるかどうかの判定に利用するだけです。
　　　元となるデータはcharサーバにあり、更新処理もcharサーバで行います。
　　　データが更新されたときにはそのデータを全サーバにフラッシュします。

　　※サーバ分割をしている場合、複数のmapサーバから同時にデータが更新される可能性がありますが、考慮した
　　　つもりなので問題ないと思います。

　　※キャラクター削除した場合、もしランカーであればデータの削除を行います。
　　　ただしデータの再構築はしないので、10位にUnknownというキャラ名が0ポイントでランクされる状態になります。
　　　これは仕様ということにしておきます。

　　※ランキングデータはMAX_RANKER（デフォルトは10）位までしか保持していません。
　　　従ってランカーのポイントが減少し11位以下になるような場合であっても10位のままです。
　　　PKランキングは減少する機会が有り得ますが、現状ではこれを仕様としておきます。

　　※ランキングデータへの登録は職業を考慮しません。
　　　例えば職業がBSであっても PC_ALCHEMIST_POINT さえ持っていればアルケミストランキングに掲載されます。
　　　これを回避したいのであれば、転職を行うスクリプトでランキング変数を0にする処理を入れてください。

　　※いくつかの問題点はFreya方式（mmo_charstatusにfame_pointを用意する）を採用すると改善される可能性があります。
　　　しかし一長一短なので、現状はこのままキャラ永続変数を利用する方式です。

・MAX_RANKERが10より小さいとき、ランキングを参照するとバッファオーバーフローが起こる問題を修正（ranking.c）
	ranking_clif_display() 修正

・SQL: `global_reg_value` テーブルの `value` フィールドが文字列型なっていたのでint型に修正
       sql-files/Auriga063_changetable.sql追加
・SQL: 054で不要なフィールドを削除した影響のため、account.txtデータのconvert時にサーバクラッシュした問題を修正
       login-converter.cから既に削除されたフィールドを参照しないように変更、およびクラッシュ対策

----------------------------------------
//062 [2007/01/20] by Rayce

・057でcase構文を変更して以後、const.txtに記載されている定数をcaseラベルに指定できなくなった問題を修正（script.c）
　以下の例は正常なコードとして扱われます。
	thanks for indication and fix, Skotlex in eAthena

	switch(Class) {
		case Job_Knight: ...
		case Job_Monk: ...
	}

----------------------------------------
//061 [2007/01/19] by Rayce

・種族を示す定数を RCT_*** として定義（map.h）
　種極に関連する値を気付いた範囲で置き換え
	eAと同じく RC_*** にしても良かったんですが、ユニークなものにし易いよう3文字（RaCeType）にしました。
	また人間は DEMIHUMAN ではなく単に HUMAN にしています。
・bWeaponAtk, bWeaponAtkRateに銃、手裏剣、両手武器が指定できるように拡張（map.h, pc.h）
　元々は指貫用として実装されてたみたいだけど使われてない？
　WT_*** のenumをpc.hからmap.hへ移動

・battle_calc_magic_attack() と battle_calc_misc_attack() を battle_calc_weapon_attack() と同様の書式に統一（battle.c）
	Damage構造体のポインタ *md は mob_data と混同しやすいので別の名前に変更しています

・doc/item_bonus.txtに bCriticalRaceRate の説明が欠けてたので追記
・ガンスリンガーと忍者のスキル名をjROの呼び名に統一

・HOM_SKILLID と HM_SKILLBASE は同じなので、全て HOM_SKILLID に統一して HM_SKILLBASE を削除（skill.c, skill.h）
・int_guild.cが GD_SKILLBASE を参照するために skill.h をincludeするという悲惨な状態だったので
　mmo.hに GUILD_SKILLID を定義、さらにギルドスキルのenumはmmo.hに移動
　（mmo.h, int_guild.c, clif.c, guild.c, skill.c, skill.h）
	guild_checkskill() でギルド拡張以外のギルドスキルも参照できる可能性を作るための処置です

----------------------------------------
//060 [2007/01/18] by Rayce

・mmo_auth() で認証OKだった場合は100ではなく-1を返すように変更（login.c）
	ログイン時のエラーメッセージ0x6aを詳細に調べた結果、100もエラー番号の一部として使われていました。
	混乱を避けるため、OKだった場合はeAやFreyaと同様に-1を返します。

・パケット0x1dd, 0x27c, 0x277のログインタイプの位置が間違っていたので修正（login.c）
　login_athena.confで "login_type" を指定していたのに正常にブロックできなかった不具合が解消されます
・doc/client_packet.txtに情報追記

----------------------------------------
//059 [2007/01/17] by Rayce

・マヤパープルカードの効果によるハイド見破りを本鯖仕様に修正（clif.c, pc.c, status.*）
　SI_TIGEREYE追加
	merged from eA, thanks to HelloKitty2

・status_check_attackable_by_tigereye() と status_check_tigereye() は本当に不要なので抹消

----------------------------------------
//058 [2007/01/16] by Rayce

・ギルド倉庫に関する処理の変更
　（int_storage.c, inter.c, atcommand.c, intif.*, map.h, script.c, storage.c）

　　ギルド倉庫はデュープの危険性を避けるために利用者は常に一人という制約があります。
　　しかしMAPサーバを分割している場合はこの制約が効かず、容易にデュープが可能となっていました。
　　そこでMAPサーバではなくInterサーバで排他制御を行うように変更しました。

　　1. inter_trylock_guild_storageを呼び出す
　　　　　　まず初めにInterサーバにロック権が取得できるか問い合わせます。
　　　　　　いきなりstorage_guild_storageopenを呼んではいけません！
　　2. sd->state.gstorage_lockreqに値を入れる
　　　　　　ロック要求中を示すフラグ。
　　　　　　1ならscriptのguildopenstorage経由、2ならatcommandの@gstorage経由。
　　3. mapif_parse_TrylockGuildStorageで処理する
　　　　　　誰も利用してなければロックをかけて成功フラグをMAPサーバに返す。
　　　　　　既にロック中ならば失敗フラグをMAPサーバに返す。
　　4. intif_parse_TrylockGuildStorageAckで確認
　　　　　　gstorage_lockreqの値で処理が異なります。
　　　　　　script経由なら成功/失敗フラグをnpc_menuに入れてスクリプトを再開します。
　　　　　　atcommand経由なら成功時のみ倉庫を開きます。

　　最初に必ずInterサーバに問い合わせる必要があるため、guildopenstorage関数の処理を変更しています。
　　この関数は呼び出されたらInterサーバにロック権の取得を要求し、一時停止します。
　　返答があったときにスクリプトは再開し、成功ならギルド倉庫が開かれます。
　　この一連の処理は自動的に行われるのでロックの取得/解放を明示する必要はありません。
　　（今まで通りの書き方で問題ないということです）

　　またギルド倉庫を閉じるときにinter_unlock_guild_storageを呼び出してロックの解放を行います。
　　lock/unlockが全て対応していると仮定しているのでデッドロックのチェック機構は今のところ実装されていません。

・カプラ倉庫を開くとき、既にカプラ倉庫を開いている状態なら開けないように修正（storage.c）
・057のスクリプトエンジンの修正に対して、case構文を少し最適化

----------------------------------------
//057 [2007/01/13] by Rayce

・スクリプトエンジンの構文関連についてチェック機能強化（script.c）

　　１．syntaxとして誤認されるバグを修正
　　　　strncmpだけで文字列のマッチングを行っていたのでユーザー定義関数が区別されない等の問題がありました。
　　　　以下の例文は今後正常なコードとして扱われます。
		function do_func {
			mes "string";
			return;
		}
		do_func;	// do構文として解釈しようとするのでエラーだった

　　２．default: の直後に命令が連結していると解析エラーとなるバグを修正
　　　　skip_word() が一つ多くdefaultの終了位置がおかしくなってました。
　　　　以下の例文は今後正常なコードとして扱われます。
		switch('@num) {
			default:mes "string";	// スペースを入れずいきなり命令があるとアウトだった
		}

　　３．break, continue の後は必ず ; を付けることを要求する
　　　　; のチェックが全くなかったので奇妙な記述が平然と許可されていました。
　　　　以下の例文は今後エラーとして扱われます。
		while('@num < 3) {
			if('@num == 1)
				continue%	// continueの後に何があってもOKだった
			set '@num,'@num+rand(4);
		}

　　４．caseラベルに指定できるのは数値型定数のみに規定
　　　　変数やラベルが指定出来るのは気持ち悪いのでC言語の形式に従います。
　　　　「'case' label not integer」の警告が出る場合はこのチェックに引っ掛かっています。
　　　　以下の例文は今後エラーとして扱われます。
		switch('@num) {
			case $@MapVal: mes "match"; break;	// 数値定数以外でも場合によってはOKだった
			default: mes "misimatch"; break;
		}

　　５．caseラベルに負の値を指定出来るように修正
　　　　'-' が skip_word() できないため上手く解釈できなかったのが原因でした。
　　　　以下の例文は今後正常なコードとして扱われます。
		switch(-rand(2)) {
			case  0: mes "zero"; break;
			case -1: mes "minus"; break;	// '-' の部分でエラーだった
		}

　　６．caseラベルが重複するときはエラーとなるように修正
　　　　syntax構造体内のcurly構造体に struct linkdb_node *case_label メンバを追加しました。
　　　　case構文がparseされたときはその値をリストに書き込み、同じ値があるかどうかチェックを行います。
　　　　switchが閉じたときにこのリストは解放されます。
	「dup 'case'」の警告が出る場合はこのチェックに引っ掛かっています。
　　　　以下の例文は今後エラーとして扱われます。
		switch('@num) {
			case 0: mes "first"; break;
			case 0: mes "second"; break;	// case 0 が重複していても警告されなかった
		}

・上記変更によってエラーが検出されるスクリプトの修正
	script/npc/job/npc_job_14crusader.txt

----------------------------------------
//056 [2007/01/11] by Rayce

・取引直後にサーバクラッシュすると稀にアイテムがデュープされる危険性を修正（trade.c）
	露店と同様に取引完了時には双方のプレイヤーのデータをセーブします

・AthenaProject2270-fixよりmerge, thanks to Cocoaさん
　以下Readmeをそのまま転載
	・ガンスリンガー、忍者のJob補正修正(db/job_db2.txt)
	・マグナムブレイクの表示ダメージが5分の1になっていたのを修正(skill_db.txt)
	・聖体降福の属性を聖属性に修正(skill_db.txt)
	・ハリネズミの針から岩石の矢が作成されなかったのを修正(create_arrow_db.txt)

----------------------------------------
//055 [2007/01/11] by Rayce

・ROメールシステムのバグ修正（int_mail.c, inter.c, clif.c, intif.*, mail.*）
　　-> clif_parse_SendMail() 内で送信処理が行われているのは良くないので、mail.cに移動
　　-> 本文に何も記入されてない状態で送信を試みると、それ以後メール送信が出来なくなる不具合を修正
　　　 　　失敗時には必ず返答パケット0x245を送らなければならないようです。
　　　 　　clif_res_sendmail() のflagに2を入れてやるとメッセージを出さずにこの問題を解決できる模様。

　　-> メール送信失敗時には必ず mail_removeitem() を呼ぶようにする
　　　 zenyもリセットされるように修正
　　　 　　アイテムを添付した状態で一度送信を試みて失敗し、次にアイテムは添付せずに正しく入力し直して
　　　 　　送信すると、失敗したときに置いたアイテムが勝手に添付される不具合が解消されます。

　　-> 受信者名の欄に存在しないキャラ名を指定してしまうと添付したアイテム/Zenyが消失する致命的なバグを修正
　　　 　　これはInter鯖から成功可否判定が返ってくる前にアイテム/Zenyを減らす処理を行っていたためでした。
　　　 　　安全性を確保するために処理の流れを変更しました。
　　　 　　キャラクターがそのMAP鯖に登録されてない場合は一旦Inter鯖にキャラクターの存在確認を要求し、
　　　 　　OKなら再度メールを送信する形式となります。
　　　 　　手抜きによりInter鯖から返ってきたキャラクター名はcharid_dbに登録されません！

　※変更後の処理の流れ
	1. clif_parse_SendMail
　　　  2. mail_checkmail (キャラが居れば7にジャンプ)
　　　  3. intif_mail_checkmail
　　　  4. mapif_parse_CheckMail
　　　  5. mapif_mail_checkok
　　　  6. intif_parse_MailCheckOK
　　　  7. mail_sendmail
　　　  8. mail_checkappend
　　　  9. intif_sendmail

・ROメール関連でInter鯖とMAP鯖間でやり取りするパケット番号を整理し直し（int_mail.c, intif.c）
　送信と受信がきちんと正しく対応するように変更、詳細は doc/inter_server_packet.txt
・mail_data構造体のメンバ receive_id は使われてないので削除（mmo.h）

・char鯖にキャラクター名の検索を要求したが見つからずに0x2b09が返ってくる場合、map_addchariddb() で
　charid_dbに登録しないように修正（map.c）

・SQL: char_sql_load() でキャラが見つからないときに「char - failed」が出力されないように修正（char.c）
　     例えば以下のようなスクリプトはエラーとして扱われるべきではないからです

		// ID 150000を持つキャラは既に削除されてると仮定
		set '@dummy$,getcharname(150000);
		if(sleep2(2000))
			mes getcharname(150000);	// Unknownが返る、このときfailedが出力されていた

----------------------------------------
//054 [2007/01/11] by Rayce

・オプション系の型をパケットの仕様に正しく合わせる
	option : short → unsigned int
	opt1   : short → unsigned short
	opt2   : short → unsigned short
	opt3   : short → unsigned int
・上記変更により浮遊とサンタ服が混ざる問題が解決したので、
　太陽と月と星の融合を使用時に浮遊するよう修正（status.c）
・オプション系についてhelp.txtに追記

・map_session_data構造体内のstate構造体のメンバ pass_through は使用されてないので削除（map.h）
・path_search_long_real() の引数がcell_t型になっていなかった部分を修正（mob.c）
・@charoptionも@optionと同様にopt3を指定できるように（atcommand.c）
・自動セーブ処理を少し最適化（pc.c）
・clif_changeoption() で使われていたループを展開（pc.c）
　clif_changelook() を少し修正

・SQL: charテーブルの `option` を unsigned int型に変更
・SQL: 使われていないフィールドを削除
・SQL: セキュリティ向上のため、標準で提供されるサーバアカウントを15個からTXTと同じ5個に変更
		Auriga054_changetable.sql追加、mail.sql更新

----------------------------------------
//053 [2007/01/10] by Rayce

・pc_makesavestatus() が二重に呼ばれていた無駄を修正（atcommand.c, homun.c, pc.c pet.c）
・ギルドメンバーの情報を参照しようとすると0x157のパケットが飛んで来るので、clif_parse_GuildMemberInfo()
　を追加、ただしパケットがダンプされるのを抑制するためだけであり、関数自体は何もしません（clif.c）

・map_athena.confに「autosave_gvg_rate」を追加（map.*, pc.c）
		merged from Freya, thx a lot!!
	GvG中に限り、自動セーブのインターバルを長く取ることでラグを緩和することを目的とします。
	デフォルトでは150（1.5倍）に設定されています。
	GvG中のラグが酷い場合には倍率を上げてみるといいかもしれません。
	尚、値は100以上しか設定できません（短くすることは不可）。

----------------------------------------
//052 [2007/01/09] by Rayce

・SQL: charasetにSJISを利用する環境下において、MySQL側のバグを回避できるようにスイッチを用意（utils.c）
	MySQLに付き纏う「文字コード問題」をAurigaサーバ側で補正するものです。
	SJISで0x5c（バックスラッシュ \）を含む2バイト文字があると、mysql_real_escape_string() によって
	\ が付加されますが、以下のような状況ではこの処理が災いしてクエリを発行できなくなります。

	例）'表'（0x955C）→　'表\'（0x955C5C）→ '?\'（0x955C）
		\\ が \ となり、続いて \' となるので、SQLの構文上 ' は文字列の一部として認識されます。
		そのため ' が閉じられてないと判定され、エラーとなります。

	これを強制的に解消するための暫定措置として、文字列の最後に「表・能・申」などの文字がある場合は
	mysql_real_escape_string() でサニタイズした後にさらに末端の余計なエスケープシーケンスを除去
	する機能を追加しました。

	utils.c の strecpy() にある #define TRIM_ESCAPE_AS_SJIS のコメントアウトを外してください。
	SJISの環境下において、上記の文字で終わるキャラクターやギルドが作成できなかったり、TXTセーブデータ
	からSQLへconvertできなかった問題を解決できるようになります。
	ただしMySQLがマルチバイト文字を正常に扱えるようになるまでの暫定処置です。
	（現在最新である 5.1.14 betaでも未解決でした･･･というか色々と迷走中？）
	また、あまり正しい方法ではないので何かしらの危険性を生み出す可能性を孕んでいます。
	SJIS以外の環境下ではこのスイッチを有効にしないで下さい。動作保証外です。

・SQL: save/account.txtからconvertする際、`loginlog` で警告が出るので修正（login-converter.c）
・doc/mysql.txtの内容をdoc/sqllogin.txtに吸収合併

----------------------------------------
//051 [2007/01/09] by Rayce

・converter_athena.conf, msg_athena.conf, script_athena.conf のimportをデフォルトでサポートする
　conf/importに対応するファイルを3つ追加

・TXT: ROメールのデータを読み込む際に、復帰コード \r が考慮されてなかったので修正（int_mail.c）
　     ついでにコメントを少し追加

・SQL: ROメールのセーブデータをTXTからSQLにconvert対応化（converter.*, inter-converter.c）
・SQL: save/castle.txtがconvert出来なかったので対応化（converter.*, char-converter.c）
・SQL: 048で同梱したsql-files/drop_table.sqlの書式が間違っていたので修正

----------------------------------------
//050 [2007/01/07] by Rayce

・utils.cを少し整理
・SQL: SQLで使う変数（mysql_handle, tmp_sql）と strecpy() を utils.c, utils.h にまとめる
       login鯖、char鯖、converterで必要となるので共通化しておくべきだと考えました

----------------------------------------
//049 [2007/01/06] by Rayce

・キャラ削除時に保存してあるROメールを削除するように修正（char.c, int_mail.*）
	mail_delete() 追加

・SQL: char_athena.confの start_weapon, start_armor が反映されてなかった問題を修正（char.c）
・SQL: status_sql_load() でステータス異常のデータをロードするとき、ゼロクリアやmysql_free_result()
       を呼び忘れてた箇所を修正（int_status.c）
・SQL: accreg_sql_save() において文字列エスケープ用のバッファサイズが小さかったので修正
       ついでに処理方法を少し改善（inter.c）
・SQL: converter_athena.confで account.txt と athena.txt を指定出来るように追加
       （char-converter.c, converter.*, login-converter.c）

・SQL: クエリ発行時にエラーが発生したとき、正しいテーブル名が出力されなかった問題を修正
・SQL: 「void*型から型変換する際にキャストを明示する」が抜けていた部分を修正

----------------------------------------
//048 [2007/01/05] by Rayce

・ROメールに関する変更および修正（mmo.h, inter.c, int_mail.c, clif.c, intif.c）
　　-> mail構造体のメンバ rates を unsigned int型に変更
　　-> mail_data構造体のメンバ mail_num を unsigned int型に変更
　　-> ROメールのデータ保存場所をinter_athena.confから設定出来るように追加
　　　 mail_txtにはメール全体のデータを保存するファイル名、mail_dirはメール本体のデータを格納する
　　　 ディレクトリを指定します
		mail_config_read_sub() 追加
　　-> メールの削除時にfreeし忘れる可能性を修正
		mail_txt_deletemail() 修正
　　-> メールを削除すると最後にあるデータが消去されずに残るバグを修正
		mail_txt_save_mail() 修正
　　-> 受信メールがBOXにある状態でキャラチェンジをすると、チェンジ後のキャラでもそのメールを閲覧
　　　 および添付アイテム/Zenyの取得が出来たバグを修正
		clif_send_mailbox()
		intif_parse_MailBoxLoad()

　※clif_send_mailbox() で mail_num に0を入れて送信すると画面がクリアできるようです
　　0だとエラーというコメントが気になりましたが、とりあえず問題なさそうなので0を許可しています

・ROメールの保存をSQLに対応（int_mail.*）
	`mail` にはメール全体の情報、`mail_data` には個人のメール本体の情報が格納されます
	残念ながら、文字化け対策のためメール本文（body）はTXTと同じくバイナリデータに変換されます

・mail_save_mail() の引数を一つ増やす
	この関数が呼ばれるのは、メール既読もしくは添付アイテム/Zenyの取得時にデータを書き換える時だけです
	SQLではTXTとは違い対象データをUPDATEするだけで済むので、mail_dataのindexを渡せるようにして
	無駄な処理を行わないようにしています
	TXTではこの引数は使われません

・SQL: sql-files/Auriga048_changetable.sqlを追加、main.sqlおよびdrop_table.sqlの更新
・SQL: 使われてないテーブル login_error, ragsrvinfo, sstatus を作成しないように削除（sql_files/mail.sql）

----------------------------------------
//047 [2007/01/02] by Rayce

・path_search_real(), path_search_long_real() で参照する引数の型をcell_t型に修正（map.h, path.c）
　path_search2() 用に CHK_NONE を追加
・細かい修正および整形
	battle_calc_damage()
	battle_calc_magic_attack()
	clif_skill_nodamage()
	clif_guild_message()
	pc_payzeny()
	pc_getzeny()
	pc_steal_item()

----------------------------------------
//046 [2007/01/01] by Rayce

・白羽取り中に連打掌を使うと鯖落ちするバグを修正（unit.c）
	reported by 16な人 in Athena Project

・bcc32_make.batで「zlib.dllをコンパイルする」を有効にしてもコンパイルされなかったのを修正
	有効にすればzlib.dllがなくても正常に起動するようになります
・vc_make.batにzlib.dllを読み込むかどうかのスイッチを追加
	BCCと同じくデフォルトでは無効にしておくのでコンパイルされません
	有効に変更しない限りはVCでもzlib.dllが必要になります
・BCCのとき、crc32.cとdeflate.cで「条件が常に真」と誤認されて警告が出るので強制的に抑制
	__warning__ に -w-8008 を追加

----------------------------------------
//045 [2006/12/30] by Rayce

・@mesでさらにオープンGM会話（黄色）が設定できるように拡張（clif.c, pc.*）
　ただしconf/GM_account.txtでGMを一人も設定していない場合は通常発言になります
・clif_onlymessage() でメモリリークが発生する可能性を修正（clif.c）

・スクリプトエンジンに関して、038をさらに改善
	merged from eA, thanks to FlavioJS
	-> add_str() で search_str() を呼ぶ必要はないので修正
	-> ハッシュのアルゴリズムを変更、SDBMを採用
	　 分散性が向上することが確認できたのでより高速に処理されるはず
	-> SCRIPT_HASH_SIZEを素数521に変更
	-> hash_dump.txtに吐き出す情報の追加、および整理

----------------------------------------
//044 [2006/12/28] by Rayce

・grfファイルの読み込みに関する大幅な変更と拡張（grfio.*, map.c）
　基本的にはeAを参考にしました、thx a lot!!

　　今まではgrfファイルを読み込む際に、grf内に格納されているファイル全てに対してデコード情報を保存していました。
　　しかしサーバ側はgatとtxtファイルしか必要としないので、他のファイルに関しては情報を保存しないように変更しました。
　　これによりメモリ使用量が約5MB近く削減されます（約40000 files × 132 = 5,280,000 byte）。

	GRF version: 0x0200. Number of files: 29977. Entered files: 462.
	               ↑                      ↑                    ↑
	      [grfファイルのversion]           ｜                    ｜
	                        [grf内に存在するファイルの総数]      ｜
	                                          [実際にエントリーされたgat,txtのファイル数]

　　conf/grf-files.txtの記述方式を変更し、10個までしか読み込めなかった制限を取り払います（上限127個）。
　　詳細はconf/grf-files.txtに直接記載しているので参考のこと。
　　またdataフォルダに置いてあるresnametable.txtを読み込んでduplicateするmapを指定できるように拡張しました。

	datadir:                   → data\resnametable.txt
		指定なしなのでgrfファイルを展開した後のファイルを自動で参照する
	datadir: C:\Program Files\ → C:\Program Files\data\resnametable.txt
		指定されたパスにあるresnametable.txtを読み込む

　　resnametable.txtをgrfファイルから抽出し、例えば
	dummy.gat#prontera.gat#
　　のように記述するとdummy.gatという名前のプロンテラを作ることができるのは周知の事実ですが、
　　これをdataフォルダに置いてパスを指定することで、grfファイルを作成することなく簡便にmapのduplicateを
　　行うことが可能になります。

　　今回の変更によりconf/grf-files.txtの機能性が向上したため、map_athena.confにある
　　read_grf_files_txt, data_grf, sdata_grf, adata_grfキーは廃止します。
　　今後はgrfファイルの読み込みはconf/grf-files.txtに一任されますので注意してください。

　　補足事項は以下の通り
	-> エントリテーブルを作成せずに直接 grfio_add() を呼び出して読み込み開始する
	-> MAX_GRF_FILES, data_file構造体を削除
	-> リソースチェックは全てのgrfファイルを解析し終えた後に行う
	　 grfio_resourcecheck() は対象ファイル名を引数に取るように変更
	-> filelist_adjust() は最後だけでよい
	-> grfio_setdatafile() は不要になったので削除

・上記のresnametable.txtの指定対応に伴い、012で実装したavailmapシステムは廃止（char.*, chrif.c, map.*, pc.c）
　　availmapは全てサーバ側で制御できるため、ユーザーにパッチを配布することなくmapのコピーを作成できるという利点
　　がありました。
　　しかし、例えば別のMAPへワープする際に現在のMAPとduplicateされたMAPの参照元が同じだった場合、ミニMAPに表示
　　されるPTメンバーのドットが消えずに残ったりするという気持ち悪さがありました。
　　もちろん修正することは可能でしたが、resnametable.txtを利用する方が遥かにスマート（/whereも正常に働くし）だと
　　判断したため、システムそのものを白紙に戻すことに決めました。
　　今後はresnametable.txtに必要な情報を追加し、ユーザーに配布する形式を取ってください。

----------------------------------------
//043 [2006/12/27] by Rayce

・042のキャストの明示が抜けている箇所を修正
・storage, guild_storage構造体のメンバ storage を store_item に名称変更（mmo.h）
・アイテムが製造武器、名前入り、ペット情報埋め込み済みかどうかを判定するマクロ itemdb_isspecial() を追加
	merged from eA

・せっかく作ったので、ハッシュの計算結果をダンプするコードを追加しておく（script.c）
	script.cにある DEBUG_HASH のコメントアウトを外すと、サーバ終了時にstr_dataに関する情報を
	hash_dump.txtに書き出すようになります。
	これは元々038で行ったスクリプトの解析速度の高速化を検証するために作ったデバッグ用のコード
	でしたが、もし利用者が自分の環境に合わせて速度を改善したい場合にはこれを用いて SCRIPT_HASH_SIZE
	の最適値を見積もることができます。
	特に独自に作ったスクリプトがかなり巨大で多くの変数/ラベルを使っている場合は、このサイズを
	大きくすることで読み込み速度が向上する可能性があります。

----------------------------------------
//042 [2006/12/27] by Rayce

・void*型から型変換する際はキャストを明示するように修正
・C++の予約語である classやnew キーワードを別の名称に変更
・login-converter.cで malloc.h のインクルードがなくてエラーを起こしていた問題を修正

----------------------------------------
//041 [2006/12/26] by Rayce

・各職に設定可能なスキルツリーのサイズを MAX_SKILL_TREE として定義、デフォルトは100（pc.h）
・ホムのスキルツリーのサイズを MAX_HOMSKILL_TREE として定義、デフォルトは16（homun.h）
・スキルツリー関連でバッファオーバーフローを起こす可能性を修正（homun.c, pc.c）

・属性を示す定数を ELE_*** として定義（map.h）
　属性に関連する値を気付いた範囲で置き換え
　現在は無(0)〜不死(9)までしかありませんが、拡張要素でさらに種類を（19まで）増やしてもある程度
　正常に作動することを考慮して部分的に修正

・全体的に細かい修正
・doc/db_ref.txtのhomun_db.txtに関する記述が古いままだったので追記

----------------------------------------
//040 [2006/12/26] by Rayce

・malloc, calloc, realloc, strdup, free を全て aMalloc, aCalloc, aRealloc, aStrdup, aFree に置換
　#define による置き換えはそのままですが、出来る限りこれらのマクロを利用すること

・「unsigned と signed の比較」で警告が出る部分を修正
	BCC: -w-7035 を bcc32_make.batより削除
	VC : /wd4018 を vc_make.batより削除

----------------------------------------
//039 [2006/12/25] by Rayce

・gccでコンパイルする際、038においてscript.hで警告が出力されるので修正（atcommand.c, script.*）
	script_read_vars(), script_write_vars() の引数変更

・scriptのdo-while構文を少しだけ修正
・038でコメントアウトした aRealloc を有効に戻す（サイズ縮小される可能性を考慮して）

----------------------------------------
//038 [2006/12/25] by Rayce

・スクリプトの解析速度を高速化（script.c）
　　SCRIPT_HASH_SIZEを定義し、文字列のハッシュサイズを16から512に拡張
　　parse_script() の script_buf を aCalloc → aMalloc に置き換え
　　parse完了時の aRealloc をコメントアウト（サイズ縮小されないので意味がない）
　　search_str() と add_str() の改善
	-> 今までは小文字で検索し、見つからなかったらそのままの文字で検索し直すという手法だったため
	　 小文字で登録されてないものは検索時間が無駄に必要となる状態でした。
	　 そこで小文字としてハッシュ計算し、strcmpiで文字列の照合を行うようにしました。

　※デフォルトで付属のscript全てを読み込ませた場合、現時点でstr_dataは約3300くらいあります。
　　ハッシュサイズが16だとcollisionが多すぎなので拡張することにしました。
　　512だと外部ハッシュリストに繋がるのが多くても20程度なのでresonableな値だと判断しました。

　※今までは @Buf, @BUF のみがスクリプトに記述されていた場合（全部小文字の @buf は書かれていない時）、
　　@Bufと@BUFが別の変数として扱われるという奇妙な現象が起こっていました。
　　今後はスクリプトの仕様に完全に従う形で、全ての変数/定数/関数/ラベルを小文字として扱うようにします。

　※簡単で非常に荒い実験ですが、読み込み速度が40%近く高速化されていることを確認しました。
　　初期化時だけでなく add_str() を呼び出すスクリプト命令/関数においても高速化されていることが見込まれます。

・@readvars, @writevarsの修正（atcommand.c, script.*）
	-> データ取得と保存部分のみscript.cに記述し、文字列解析部分はatcommand.cに記述する
	-> 変数が登録されているかどうかのチェックは search_str() を利用するように高速化
	-> C_PARAMとC_INTは配列指定 [] があるときは参照できないように修正
	-> 書き込み時に定数を書き換えてしまう危険性を修正
	-> typeの書き換えを行わないように巻き戻し（C_NOPのままで問題ない）

　※atcommand_vars_sub(), script_check_variable(), script_read_vars(), script_write_vars() 追加
　※script_operate_vars() の削除

----------------------------------------
//037 [2006/12/24] by Rayce

・NPCファイルの読み込み時に、MAP名のチェックを強化する（npc.c）
・スクリプトエンジンの改善（script.c）
	-> スクリプトのparse時にエラーが発生した場合、エラー箇所を正しく出力するように修正
	-> check_script_buf() を expand_script_buf() に改名し、バッファサイズの拡張を行うだけの関数に変更
	-> 不要なコメントアウト部分を抹消
	-> getelementofarray関数の処理改善
	　 頻繁に使われる可能性の高い1次元の配列に関しては、多次元配列をサポートしたAthena2099より前の方法
	　 に近い形にして高速化を図っています
	-> getcharid関数で引数の値の範囲チェックが抜けていたので修正
	-> if, else-if, switch, while, do-whileの後には必ず () を付けることを強制する

　※以下のようなコードは今後エラーとして扱われます
	if Sex mes "true"; close;
　　C言語ライクなスクリプトを指向するため、必ず if(Sex) のように () を付けなければなりません

・上記変更に伴ってエラーが出るNPCスクリプトの修正
	script/npc/town/npc_lighthalzen.txt

・pvp_nopenaltyという存在しないmapflagを削除（script/mapflag/mapflag.txt）
	022でmapflag系の整理を行った際に存在しないmapflagを指定した場合には警告を出すように強化
	してましたが、mapflagファイル自体の修正が抜けてました
・kh_dun02.gatのmapflagからnoteleportが欠けてたので修正
・conf/map_athena.confに035で追加されたnpc_event_halloween.txtの記述が抜けてたので追記

----------------------------------------
//036 [2006/12/20] by Rayce

・定数の追加と精錬に関する拡張（map.h, pc.h）
	MAX_WEAPON_LEVEL : 武器Lvの最大値でデフォルトは4
	MAX_REFINE : 最大精錬値でデフォルトは10
	WT_MAX : 武器タイプの最大値、自動的に設定される

　※Lv5以上の武器を追加したい場合はMAX_WEAPON_LEVELの値を増やし、refine_dbの行を書き加えてください
　　+11以上の精錬を設定したい場合はMAX_REFINEの値を増やし、refine_dbのLv10の成功確率の次の列に確率を書き加えてください

・status.cでデータベースを読み込む変数の見通しをよくするための変更
	-> refine_db.txtに利用する変数（refinebonusとpercentrefinery）をまとめてrefine_db構造体とする
	-> job_db1.txt, job_db2.txt, job_db2-2.txtで利用する変数群をまとめてjob_db構造体とする
	-> status_getrefinebonus() を status_get_overrefine_bonus() に改名して、過剰精錬ボーナスを返す
	　 ためだけの関数に変更
	-> status_calc_pc() で最大HP,SPを計算する部分を少し整理

・+10装備に対してスクリプトのgetequippercentrefinery関数を実行すると、バッファオーバーフロー
　（最悪の場合サーバクラッシュ）が発生するバグを修正
・@reloadstatusdbを実行した際に、job_db1.txtのHP係数の値を変更しても最大HPが正しく再計算されない問題を
　修正するために、status_calc_sigma() を status_readdb() 内に取り込み
・スパノビの魂で装備可能になる武器LvをLv4以上に拡張（pc.c）

----------------------------------------
//035 [2006/12/19] by Rayce

・AthenaProject2266よりmerge, thanks to Blazeさん
　以下Readmeをそのまま転載
	・忍者・ガンスリンガーのJOBEXPテーブルLv49〜更新（exp.txt）
	・テコン系列のHP・SP係数など修正（job_db1.txt）
	・item_fabox.txt、item_arrowtype.txt、mob_boss.txt更新
	・ハンター転職員の座標を修正（npc_job_11hunter.txt）
	・ジョンダ職員からカートを借りられない不具合を修正（npc_misc_zonda.txt）
	・コモドクエスト修正（npc_town_comodo.txt）
	・アインブロッククエスト修正と料理人クエスト追加（npc_town_einbroch.txt）
	・2006ハロウィンイベント新規追加（npc_event_halloween.txt）
	・神器、TheSign、タナトスクエスト関連マップのmapflagを追加（mapflag.txt）

・AthenaProject2267より部分的にmerge, thanks to Cocoaさん
　以下変更箇所のみそのまま転載
	・リザレクションホムンクルスの詠唱を中断可能に変更(skil_db.txt)
	・アシッドテラー、デモンストレーション、ケミカルチャージのディレイ追加(skill_cast_db.txt)

----------------------------------------
//034 [2006/12/19] by Rayce

・ホムがunit_free() されるときにも status_change_clear() を呼ぶように修正（unit.c）
・unit.cを少しだけ整理
・SI_BREAKARMOR, SI_BREAKWEAPON, SI_MAGNUM を追加（status.h）
・マグナムブレイク中ならSI_MAGNUMを送信するように修正（status.c）

・status_change_clear() の修正
	-> コメントアウト部分はもはや必要すらないので抹消
	-> type=0のときにのみSC_BABYとSC_REDEMPTIOのスキップ判定を行うように変更
	　 つまりtype=1（PC, HOMのunit_free）とtype=2（MOBのunit_remove_map）のときは全ステータス異常
	　 を強制的に解除するということになります
	-> sc_countを0にしないように修正

・Himmel氏発案のGMハイドの改造をmerge, thx a lot!!（atcommand.c, battle.*, clif.c）
	battle_athena.confにgm_perfect_hideを追加しました。デフォルトはno。
	yesにすると@hideが完全なインビジブルモードとなり、ツールによって姿が検出されなくなります。
	@hideでハイドした際は一旦キャラクターを消滅させ、解除時に再度出現パケットを送信しています。
	これによりハイドの瞬間に位置を悟られることを防止し、また出現の際に座標がズレるのを解消しています。

----------------------------------------
//033 [2006/12/17] by Rayce

・グラウンドドリフトをファイアスフィアで設置した場合、吹き飛ばすときにSAB_NODAMAGEを入れるように修正
	skill_additional_effect() が呼ばれるのはダメージ発生後なので、clif_blown() で飛ばすと位置ズレ
	を引き起こす可能性があるためです

・デスペラード修正
	5x5の範囲にランダムでオブジェクトが10回発生する、オブジェクトの攻撃範囲は3x3
	ウォーターボールとメテオストームのロジックを組み合わせてやってます

・アローシャワー、デスペラード、グラウンドドリフトは発動時に矢/弾を消費するように修正（battle.c, skill.c）
	敵が範囲内に居なくても消費されるようになります
	特にグラウンドドリフトは敵がヒットしたときに弾が減るという奇妙な現象が解消されます
	battle_skill_attack() ではなく自前で battle_delarrow() を呼び出すことで処理するように変更しています

----------------------------------------
//032 [2006/12/16] by Rayce

・status.cでコンパイル時に警告が出てたので修正（status.c）
・スキルユニットが罠かどうかを判定する skill_unit_istrap() を用意（skill.h）
・アンクルに敵が乗った状態で自動鷹が発動するとダメージが分散してしまう問題を修正（skill.c）
・battle_athena.confにtrap_is_invisibleを追加（battle.*, clif.c）
	yesにすると設置した罠が見えないようになります、merged from eA

----------------------------------------
//031 [2006/12/16] by Rayce

・凍結、石化、睡眠を解除する処理をまとめた status_change_attacked_end() を用意（battle.c, skill.c, status.*）
・ハイド状態を解除する処理をまとめた status_change_hidden_end() を用意（homun.c, mob.c, pc.c, status.*）
・スキルユニットのIDを定数 UNT_*** として定義する（skill.*）
	merged from eA

・グラウンドドリフトの暫定修正（battle.c, clif.c, skill.c）
	-> clif.cで弾薬の種類に応じて見かけを変えるのではなく、実際にスキルユニットIDを変えるように修正
	-> 足元置き、重ね置き可能にしてみる
	-> BF_WEAPONではくBF_MISCとして扱うようにしてみる
	　 スキルユニットからの攻撃を武器スキルとして扱うとダメージディレイが異常に遅れたり
	　 矢のATKが加算されたりするなど不可思議なことが起こり得るので罠と同じ扱いにしておきます
	-> battle_calc_attack() および skill_additional_effect() に引数を渡すとき、グラウンドドリフトだけは
	　 スキルユニットのIDが必要になるのでsrcの代わりにdsrcを渡すようにする
	-> 100%ダメージを属性込みで計算したあと、固定部分を加算してさらに無属性で属性補正するように修正
	-> ウィンドスフィアならスタン、ダークスフィアなら盲目、ポイズンスフィアなら毒、アイススフィアなら凍結
	　 の効果が追加されるように修正、確率は不明なので基本50%で設定
	-> ファイアスフィアなら必ず3セル吹き飛ぶように修正

---------------------------------------
//030 [2006/12/13] by Rayce

・@mesで従来のギルド会話、オープン会話に加えてパーティ会話が選択できるように拡張（clif.c）
・Athena1881以前の古い形式のキャラクターセーブデータは今後サポートしないようにする
・conf/char_athena.confで、キャラ作成時に持たせる武器と防具を任意に設定できるように拡張（merged from Freya）
	デフォルトではナイフとコットンシャツですが、start_weaponとstart_armorの値を変えることで
	違うものを持たせることが可能です
	また0にすることで初期装備を無しに設定できます。

・httpd.cでAURIGA_MOD_VERSIONではなくAURIGA_REVISIONを参照するように変更
・atn_bignumber型の定義とRETCODEをmmo.hからutils.hへ移動
・VCの警告関連
	pragma(disable : 4996) は削除、core.cのunlinkをremoveに置換
	エンコード問題があるので 4819 の警告をvc_make.batで抑制するように追加
	ついでに 4018 もvc_make.batで定義する

----------------------------------------
//029 [2006/12/13] by Rayce

・Athena Projectに投稿されたRohypnolさんのパッチから、独自修正項目についてmerge, thx a lot!!
	-> モンクの魂状態なら猛龍拳が5×5の範囲攻撃になるように修正
	-> ビーストストレイピングはダブルストレイピング使用後2sec以内でしか使えないように修正
	-> ビーストストレイピングが動物だけでなく昆虫種族にも使えるように修正
	-> 以下のスキル使用時に共闘ボーナスが付くように修正、battle_join_struggle() 追加
	　 （プロボック、気奪、マインドブレイカー、スティールコイン）

・カートレボリューションの吹き飛び方向を修正
　ターゲット以外の周囲の相手は、発動者ではなくターゲットとの位置関係で飛ぶ方向を決める

----------------------------------------
//028 [2006/12/12] by Rayce

・武器修理についてeAを参考して修正（clif.c, skill.*）
	-> メニュー選択後に射程内に対象が居ない場合は失敗するように修正
	-> 成功したときのみエフェクトを出すように修正
	-> clif.cでは判定を行わず、全てskill_repair_weapon() 内で処理するように変更
	-> skill_can_repair() は skill_repair_weapon() に吸収したので削除
	-> 処理方法の改善

・向き判定用の配列 dirx[], diry[] をmap.cに集める（homun.c, map.*, pc.c, pet.c, skill.c, unit.c）
・unit_skillcastcancel() に詠唱妨害可能かどうかの判定を取り込む
　引数に2を指定すれば、関数内部でフェンカードやGvGマップかなどを調べます

----------------------------------------
//027 [2006/12/11] by Rayce

・conf/grf-files.txtでdata, sdata, adataの制限を取り払うように拡張（grfio.*, map.c）
	-> MAX_GRF_FILES（デフォルトでは10個）まで読み込み可能
	-> : の前の名前は15文字以内で任意に指定することができます
	　 同じ名前がある場合は下に記述されたもので上書きされます
	-> 行頭に // を入れるとコメントアウトとして扱われます
	-> map_athena.confの方はdata, sdata, adata固定のままです
	　 grf-files.txtを利用することを推奨します

----------------------------------------
//026 [2006/12/11] by Rayce

・db/produce_db.txtの拡張をAthena Projectの投稿分からmerge, thanks to Rohypnolさん（skill.*）
	-> dbに新しくFixPerの項目を挿入
	　 基本成功確率にこの値を加算することで確率の補正を個別に設定します
	-> skill_produce_db構造体から使われてないメンバ trigger を削除し、perを追加
	-> skill.hに製造グループ定数 PRD_*** を追加
	　 製造の種別はスキルIDではなくこのグループ定数で分類する
	-> battle_athena.confの以下3項目が全く利用されてなかったので修正
		scroll_produce_rate, making_rate, scroll_item_name_input
	-> クリエイトコンバーターは100%成功にしておく
	　 db/produce_db.txtのFixPerを10000に設定しただけで、計算式自体はskill.cに残してます
	-> オリデオコン/エルニウム作成は本鯖にはない機能なので、ItemLvを1003に変更しておく
	-> 説明についてはdoc/db_ref.txtに記載

・012のMAPコピー機能の追加以後、担当MAPを決める処理が誤作動を起こしそうな気がしたので少し修正（map.h）
・login.cから使われてない変数 m_start, gm_last を削除（login.c）

----------------------------------------
//025 [2006/12/09] by Rayce

・製造系の修正をAthena2262-fix4よりmerge、thanks to T.Nさん（clif.c, skill.*）
	-> skill_produce_mix() から確率計算部分を切り離して skill_calc_produce_rate() とする
	-> 同様にファーマシー成功時のランキング計算部分を切り離して skill_am_ranking_point() とする
	-> skill_can_produce_mix() はnameidではなくインデックスを直接受け取るように変更し、検索の無駄を省く
	-> トワイライトファーマシーで成功個数/ランキングを一度に獲得するように修正
	-> トワイライトファーマシー成功後、重量オーバーになってしまう場合は地面に落ちずに消滅するように

----------------------------------------
//024 [2006/12/08] by Rayce

・pc_dead() でのデスペナルティ処理を最適化（pc.c）
・カオティックベネディクションのスキルLvが11以上のときサーバクラッシュする問題を修正（skill.c）
・battle_athena.confでresurrection_expを設定していたとき、JobExpの計算が間違っていたバグを修正（skill.c）
・レデムプティオで取得できる経験値の計算において、battle_athena.confのdeath_penalty_typeの設定が
　正しく反映されてなかったバグを修正（skill.c）
・経験値計算処理は出来るだけdouble型ではなくatn_bignumber型を利用するように修正
・skill_castend_nodamage_id() を少し整形

----------------------------------------
//023 [2006/12/08] by Rayce

・setmapflag命令の機能拡張
	const.txtに記載されているマップフラグ全てをこの命令で設定できます。
	mf_nosave, mf_baseexp_rate, mf_jobexp_rate, mf_pvp_nightmaredrop, mf_gvg_nightmaredrop, mf_pk_nightmaredrop
	については更に引数を指定することで必要な情報を設定します。
・setmapflag命令でナイトメアモード用の設定を行うために npc_set_mapflag_sub() を利用するので
　staticを外してnpc.hで宣言するように変更
・setmapflagnosave命令は不要になったので抹消

・removemapflag命令の機能拡張
	ナイトメアモード系を削除する場合には該当マップのドロップリストを削除し、
	空き詰め処理を行います。

・checkmapflag関数の追加
	指定マップに該当のmapflagが設定されているかどうかを調べます。
	mf_baseexp_rate, mf_jobexp_rateの場合には設定した経験値取得倍率が返ってきます。
	ナイトメアモード系のドロップリストに関する情報は取得できません。

・上記を実装するに当たり、処理を一括でまとめたかったので変数にビットフィールドを使わないように変更
	全てint型にして、script_conv_mapflag() でアドレスを取得できるようにしています。
	base_exp_rateとjob_exp_rateをflag構造体のメンバとして取り込み。

　※checkmapflag関数はgetpkflag関数の上位互換版です。
　　if(getpkflag("this")) は if(checkmapflag("this",mf_pvp) || checkmapflag("this",mf_gvg))
　　と等価ということになります。。
　　マップフラグに応じてスクリプトの挙動やアイテムの効果を変化させたいときなどに。

----------------------------------------
//022 [2006/12/07] by Rayce

・mapflag関連の最適化や機能追加
　（atcommand.c, map.*, mob.c, npc.*, pc.c, script.c, skill.c）
	-> mapflagを設定する処理をまとめて npc_set_mapflag() を用意
	　 スクリプトからの読み込みと@mapflagからの読み込みで共用します
	-> base_exp_rateとjob_exp_rateで負の値を設定しても取得経験値倍率が0にならなかった問題を修正
	-> MF_***系定数をscript.cからmap.hへ移動
	-> map_data構造体内のdrop_list構造体に drop_flag メンバを追加
	　 Pv, Gv, PK でドロップリストを共存させるためのものです
	-> ナイトメアモードの場合のアイテムドロップ処理をまとめて pc_nightmare_drop() を用意
	　 処理がゴチャゴチャしてたので書き直し
	-> MAX_DROP_PER_MAP の値が大きすぎるので、48 → 8 に縮める
	　 越えてしまった場合は「drop list is full」が出力されます
	　 ナイトメアモードで多くのアイテムIDを設定したい場合にはこの値を大きくしてください
	-> PKフィールドをナイトメアモードに一括変更するとき（map_athena.confのmap_pk_nightmaredrop有効時）
	　 drop_listに空きがない場合はモード設定しないように変更
	-> 存在しないマップフラグをスクリプトに書いていた場合は警報が鳴るように
	-> 利用価値が低いので map_check_normalmap() を削除
	-> 以下の4つのマップフラグをスクリプトから設定できるように
		fireworks, cloud1, cloud2, cloud3
	-> ついでなので新しく gvg_nightmaredrop を追加
	　 シーズモードで且つアイテムをドロップする特殊なMAPを作ることができます
	-> db/const.txtを変更
	-> doc/script_ref.txt更新

・pc_damage() から死亡処理を切り離して pc_dead() を用意（pc.c）
・ALT+Gをしたときギルドエンブレムが時々表示されないバグを多分修正（clif.c）
	merged from eAthena, thx a lot!!

----------------------------------------
//021 [2006/12/06] by Rayce

・キャラIDは出来るだけsd->char_idではなくsd->status.char_idを参照するように修正
　sd->char_idは認証用に使うだけに留める
・スクリプト解析エンジンについてeAthenaより一部merge（script.c）

・doc/script_ref.txt更新
・db群の更新
	thanks to huge cgi

----------------------------------------
//020 [2006/12/06] by Rayce

・ブロックIDの定義が各ファイルに散らばってて把握しずらいのでmmo.hに集める
	-> MIN_FLOORITEM を追加、MAX_FLOORITEM をmap.hから移動
	-> START_ACCOUNT_NUM, END_ACCOUNT_NUM をlogin.hから移動
	-> START_NPC_NUM, END_NPC_NUM をnpc.hから移動

・clif_parse_WantToConnection() における不正パケットのチェックを強化（chrif.c, clif.c）
	-> 送られてきたアカウントIDが不正な値でないかチェックする
	　 （例えばIDの値がMAX_FLOORITEM以内だと、存在しているのに map_id2sd() で検索されないキャラが出来る）
	-> Sexの不正チェックを chrif_authreq() から移動
	-> session_dataをcallocする前に判定は行う、不正だった場合はタイムアウトで落とす
	-> 「invalid Account ID !!」および「invalid Sex !!」が出力された場合は、
	　 不正なアクセスが行われたことを意味します

・一部の weapontype1, weapontype2 変数への代入について、0を WT_FIST に置換（pc.c）
・map.cを少しだけ整形

・scriptのchangebase命令で、職業IDが22（ウェディング）および26（拳聖2）のときは武器を外す処理が含まれていたが
　この部分をコメントアウト（script.c）
	装備を外すとHPやSPが減少する効果（bSPPenaltyUnrig等）を持つ装備品を装備している状態（三葉蟲カード等）で、
	EquipScriptに changebase 22; が記述された装備品（ウェディングドレス等）を装備すると
	HPとSPが共に0になり死亡してしまう現象を修正するための処置です。
	武器を外す処理を省いてもウェディング状態のときは clif_changelook() で武器の表示をしないように処置される
	ためクライアントエラーにはなりません。

　※詳細
	上記の例の場合、呼び出される主な関数は以下の通り。
	pc_equipitem() → status_calc_pc() → run_script() → buildin_changebase() → pc_unequip() → pc_heal()
	bSPPenaltyUnrigの効果により装備の解除時に pc_heal() が呼ばれますが、status_calc_pc() ではmax_hpの値は
	まだ計算されていない状態なので max_hp = 0 です。
	従って pc_heal() で最初に呼ばれる pc_checkoverhp() によってHPが0にされてしまいます。

----------------------------------------
//019 [2006/12/05] by Rayce

・mob_dead() の処理改善および整形
・ホムがMVPを取ったときのMVP経験値に対しても battle_athena.conf の master_get_homun_base_exp
　の倍率を適用するように修正（mob.c）

・一部のスキルの倍率計算において、double型ではなくatn_bignumber型を使うように変更（battle.c）
　少しオーバーフローしやすくなってる可能性はあります…
・battle_calc_weapon_attack() で利用するマクロ名が紛らわしいので
　ATK_FIX → DMG_FIX, ATK_ADD → DMG_ADD に変更、新たに DMG_SET 追加（ダメージ値の置換用）

・atn_bignumber型の変換指定子を統一して使えるようにマクロ BIGNUMCODE を用意（mmo.h）
　基本的にprintf用で10進数のみ対応です。
　用意しただけで実際のコードには今のところ出現してませんが、数値をダンプしたいとき等に利用してください。
	printf("i = %"BIGNUMCODE, i);

----------------------------------------
//018 [2006/12/04] by Rayce

・被弾共闘が入らないのを修正（pc.c）
　応急処置的にbl.idで管理するようにはしてますが、本来ならPCの場合はキャラIDを利用すべきなので
　いずれ修正する必要はあります
	merged from Athena-2262, thanks to T.Nさん

・doc/script_ref.txtにおいてmapflagの base_exp_rate, job_exp_rate に関して追記
・一閃を必中に修正（battle.c）
・mob_damage() から死亡処理の部分を切り離して mob_dead() を用意、および少し整理（mob.c）
・mob_damage() にあるテコンミッションのターゲット選定でも無限ループに陥る可能性があったので修正（mob.c）

・経験値取得系の関数において、引数をint型からatn_bignumber型に変更
　および無駄なキャストを排除して整理し直し
	guild_payexp(), homun_gainexp(), party_exp_share(), pc_gainexp()
・ホムの取得経験値がオーバーフローする可能性を修正（homun.c）
・ホムが取得した経験値を主人へ渡すときの倍率をbattle_athena.confで指定できるように変更/拡張（battle.c, homun.c）
	master_get_homun_base_exp はデフォルトで100（%）です
	master_get_homun_job_exp  はデフォルトで0（%）です

----------------------------------------
//017 [2006/12/01] by Rayce

・battle_calc_weapon_attack() の修繕その８
	-> 回避判定を先に行い、回避できなかったときだけ必要なダメージ計算を行うように改善
	　 基本ダメージ計算 battle_calc_base_damage() などの処理が省略されますので、回避時の計算は
	　 かなり改善されているものと期待します
	-> ヒット・属性・レンジの補正は回避判定の前に集める
	　 これら3つの要素は最終ダメージ計算 battle_calc_damage() に必要です
	　 battle_calc_damage() は回避出来たときにも呼び出されるので、回避判定前に補正しておかなければなりません

　※クリティカル時の処理をさらに改善する余地はありますが、長らく続いた修繕関連はこれでひとまず終了とします。

----------------------------------------
//016 [2006/11/29] by Rayce

・ヒールと治療の助けをカイトで反射した際にもエフェクトを付ける（skill.c）
・ローグの魂効果中はディスペル無効に修正（skill.c）

・battle_calc_weapon_attack() の修繕その７
	-> 「カードによるダメージ追加処理」「カードによる左手ダメージ追加処理」「カードによるダメージ減衰処理」
	　 「対象にステータス異常がある場合のダメージ減算処理」の4項目は、ダメージがあるときだけ計算する
	　 これらはダメージ倍率を計算する部分ですが、ダメージが0の場合は積を取っても結局0になるのは確定しているので
	　 計算を行う必要はありません
	-> スパイラルピアースのスキル倍率が間違っていたので修正、break抜け？
	-> 細かい整形

----------------------------------------
//015 [2006/11/21] by Rayce

・サーバースナップショット（version.h）
・不要なファイルを削除
　　conf/
	help1.txt, help2.txt, help3.txt, help4.txt
　　src/common/
	zconf_win32.h, zlib_win32.h

----------------------------------------
//014 [2006/11/28] by Rayce

・mmo.hに定義されていて実体がcore.cにある状況が気持ち悪いので、eAのようにutils.c, utils.hを追加
　共通で汎用的に使う関数をここに集めることにします
・各ファイルにおけるincludeの整理と整形

・version.hの ATHENA_*** を AURIGA_*** に改名しておく（httpd.c, version.h, login.c, char.c, clif.c, map.c）
・AurigaはModではないので、AURIGA_MOD_VERSION は未定義にする予定です
　パッチ番号はRevisionに合わせるつもりです
　つまり現在のversionは「Auriga-0.0.14」になります
　今のところAURIGA_MOD_VERSIONに関しては改名してmodを0にしただけであり、正式に修正されていません

・既に廃止されている zlib_win32.h, zconf_win32.h を削除するためにdspファイルの修正
・ジャーナルをオンにしてVCでコンパイルすると unlink() で警告が出るので remove() に変更しておく（journal.c）

----------------------------------------
//013 [2006/11/27] by Rayce

・battle_calc_weapon_attack() の修繕その６
	-> 「防御無視判定および錐効果ダメージ計算」の項目において、左手がある場合にのみ
	　 battle_athena.confのleft_cardfix_to_rightを適用するように修正
	-> 「対象の防御力によるダメージ減少」の項目において、左手用の防御無視フラグ calc_flag.idef_ が
	　 判定に全く関与していなかった問題を修正
	-> 「カードによる左手ダメージ追加処理」の項目は左手があるときだけ行うように改善

・clif_party_xy() と clif_party_hp() の引数 *p は未使用なので削除（clif.*, party.c, pc.c）
・cp_setpos() でOnPCMapMoveを実行するかどうかの判定処理を少し修正（pc.c）

----------------------------------------
//012 [2006/11/26] by Rayce

・マップのduplicateシステムとしてmap_athena.confのキーに availmap を追加（char.*, chrif.c, map.*, pc.c）
	例えばpronteraを常設のイベントMAPとして利用したいと考えた場合、元々のpronteraは使えなくなってしまいます。
	そのためgrf内のpronteraのMAPファイルをコピーし、別の名前に変更してユーザーにパッチとして配布する必要がありました。
	このシステムはパッチ配布という煩わしさを解消し、手軽にMAPのコピーを作成できるようにサーバ側で「すり替え」を行うためのものです。
	map_athena.confに例として以下のように記述。
		availmap: duplicate.gat,prontera.gat
	サーバ側ではduplicate.gatとして読み込みますが、クライアント側にはprontera.gatとして認識させます。
	要するにitem_avail.txtやmob_avail.txtのすり替えと同じもので、pronteraが擬似的にコピーされます。
	詳細はdoc/conf_ref.txtを参照のこと。

・@whereを少し仕様変更（atcommand.c）
　　@where [キャラ名] のようにキャラ名の部分は可変にします。
　　キャラ名が指定されない場合は自分自身のMAP情報が出力されます。
　　これは上記のコピーマップに対応するためのもので、自分が居る実際のMAP名を得ることができます。
　　（ /whereだとpronteraとして表示されてしまいますが、@whereだと正常にduplicateとして表示されます ）

・map_athena.confで指定したMAP名が不正な場合、mapデータベースから削除されなかった問題を修正（map.c）
　MAP名の判定は map_readallmap() ではなく map_addmap() で行うようにします
　参照元のMAP名は記述が間違っていても map_readmap() 内部で弾かれますが、コピーのMAP名はそれがないので厳密にMAP名のチェックを行います
　また不正な名前であった場合には "invalid map name!! (???)" が出力されます

・doc周りの更新
	conf/help.txt, doc/client_packet.txt, doc/conf_ref.txt

----------------------------------------
//011 [2006/11/25] by Rayce

・battle_calc_weapon_attack() の修繕その５
	-> 左手判定があるときだけwd.damage2を計算するようにする
	　 計算用のマクロ ATK_FIX, ATK_ADD を追加
	-> ブランディッシュスピアの攻撃力計算式がおかしかったので修正（Lv上昇に伴う倍率加算がなくなってた）
	-> 細かい整形
・010において警告が出るので修正（script.c）
・カイトで反射時にエフェクトを表示するように修正（battle.c）
	reported by rei in Athena Project Forum and refered to eAthena, thx

----------------------------------------
//010 [2006/11/24] by Rayce

・スクリプトのcsvアクセス命令/関数において、ファイル名のチェック処理をまとめた script_csvfilename_check() を追加
	merged from Athena-2262, thanks to T.Nさん
・doc/client_packet.txtを更新

・battle_calc_weapon_attack() の修繕その４
	-> battle_calc_base_damage() の引数を変更
	　 右手だけのときは左手の分の計算を行わないように改善
	　 また左手判定がある場合にはこの関数を2回呼び出してそれぞれ計算を行うことにします

　※右手だけのときは左手の計算をしないので高速化されますが、左手があるときは2回演算するので逆に遅くなります
　　しかし戦闘の大部分を占めるのは右手だけのときなので、全体的には高速化されているはずです
　※右手素手で左手武器の場合本来ならば右手の計算は不要ですが、左手のみという状況は限りなく少ないので
　　高速化のために右手は必ず計算します

----------------------------------------
//009 [2006/11/24] by Rayce

・battle_calc_weapon_attack() の修繕その３
	-> 各計算項目をナンバリングし、計算手順を明確化する
	-> ダメージ計算を始める前に左手武器があるかどうかを判定する
	　 スキル攻撃の場合は左手のダメージは反映されないので、左手武器が必要と判定されるのは通常攻撃だけ
	-> 既にDEF無視フラグが立っているときは「対象の防御力によるダメージの減少」の項目内の計算そのもの
	　 を行わないように処理改善
	-> 全体的に細かい整形

・battle_calc_damage() を少し修正し直し
・新ログインパケット？0x277をサポート（login.c）
	merged from Athena-debug2264, thanks to KADP

----------------------------------------
//008 [2006/11/24] by Rayce

・battle_calc_weapon_attack() の修繕その２
	-> クリティカル攻撃にならないと事前に確定しているものはクリティカル計算そのものを行わない
	-> テコンの蹴り構えを複数同時使用した状態のとき、アプチャオルリギの発動優先順位を最低にする
	-> 連撃判定部分の整形
・MAP鯖のコンソールにもversion表記を出力させる（map.c）
・bcc32_clean.batでmapファイルとtdsファイルも消去するように追加

----------------------------------------
//007 [2006/11/23] by Rayce

・battle_calc_weapon_attack() の修繕
	-> この関数内で全般的に参照する必要あるフラグ変数をまとめた calc_flag 構造体を用意
	　 変数名を変更しただけで基本的な構造は変えてません、rh, lhは準備だけ
	-> ソウルブレイカーのランダム追加ダメージの計算方法を修正

----------------------------------------
//006 [2006/11/23] by Rayce

・005でatcommand_athena.confの変更を忘れてたので同梱
・スタック破壊を修正（int_homun.c）
	merged from Athena-2262, thanks to T.Nさん

・スクリプト命令/関数のバグ修正（script.c）
	-> 以下のスクリプト関数のおいて、スタックに返り値がプッシュされずサーバクラッシュを引き起こすため修正
	　 またこのようなクラッシュを応急処置的に防止するために run_func() を少し修正
	　 　getarraysize, getequipid, getnpctimer, sc_ison, getguildcastle, getrepairableitemcount,
	　 　countitem, countcartitem, checkoption
	-> menu/selectでキャラクターがアタッチされてないときはキャンセル扱いにして終了させる
	-> sc_ison関数で状態異常のtypeが不正な値かどうかをチェックするよう強化

----------------------------------------
//005 [2006/11/22] by Rayce

・battle_skill_attack() で「何もしない」判定されたときは矢を消費しないようにしてみる
・battle_calc_weapon_attack() で最初にターゲットのクラスを得るように変更
・battle_calc_weapon_attack() で魅惑のウィンクや強制移動状態であるかどうかの判定を行わないように変更
	この関数はダメージ計算を行うだけに留め、状態によって判定するかどうかは呼び出し元で行うべきなので
	battle_weapon_attack() と battle_skill_attack() でそれぞれ判定をするようにしています

・@help系統の仕様変更（atcommand.*）
	conf/help1.txt（同様に2,3,4）に追記し忘れることが多いので、@help1,2,3,4は廃止
	代替方式として@helpを「@help [開始行] [終了行]」のように引数を可変にします
	行指定しない場合は全てのヘルプを表示します
	指定した場合は開始行〜終了行のヘルプだけを表示します
	ただし0は指定なしを意味します
	また行頭に // を付けるとコメントアウトと見なされ、その行は表示されません
	　　例）@help 0 20  -> 最初の行〜20行目まで表示
	　　　　@help 10 0  -> 10行目〜最後の行まで表示
・conf/help.txtの整理

----------------------------------------
//004 [2006/11/22] by Rayce

・battle_attr_fix() を少し改善
・battle_calc_damage() の処理改善
　特にダメージが発生する場合で、アジトの情報が不要な場合でも情報を検索していた無駄が省かれます

・MAP名に "this" 指定可能なスクリプト命令/関数を考慮して、MAP番号を取得する処理をまとめた関数
　script_mapname2mapid() を用意（script.c）
・以下のスクリプト命令/関数においてMAP名の "this" 指定に対応
	mapannounce, areaannounce, getareadropitem, setmapflagnosave, setmapflag, removemapflag,
	pvpon, pvpoff, gvgon, gvgoff, maprespawnguildid
・MAP非配置型のNPCからmap_foreachinarea() を呼び出す命令/関数を実行されるとアクセス違反が生じる可能性があるので
　map_foreachinarea() でindexの値のチェックを入れるように修正（map.c）

----------------------------------------
//003 [2006/11/22] by Rayce

・battle_calc_weapon_attack() の構造変更によって、001の時点で矢のATKが計算されない
　可能性が生じていたので修正（battle.c）
・battle_calc_weapon_attack() を全体的に整形
・battle_delarrow() の引数を増やして battle_skill_attack() からでも使えるように共通化（battle.*）

・item_arrowtype.txtとitem_group_db.txtで存在しないアイテムIDだった場合は読み飛ばすように修正（itemdb.c）
・item_db.txtでアイテムIDが20000までしか使えない制限を取り払う（atcommand.c, itemdb.*）
	-> 読み込まれたデータの中で最大のID値をmax_itemidに保存しておくように変更
	-> itemdb_getmaxid() を追加
	-> 上記変更に伴って @idsearch を少し修正

・チェイサーのスキル名と混同するので、スキルの使用条件を示す ST_CLOAKING 等の名称を ST_*** → SST_*** に変更（skill.*）
　ST_CHASEWALKというstateは存在せず誤っているので、新しくSST_CHASEWALKINGを定義
　skill_require_db.txtのstateの項目にchasewalkingを追加

----------------------------------------
//002 [2006/11/21] by Rayce

・囲まれ判定用の定数 ATK_LUCKY, ATK_FLEE, ATK_DEF をmap.hからbattle.hに移動
・使われていない定数 MS_IDLE, MS_WALK, MS_ATTACK, MS_DEAD, MS_DELAY をmap.hから削除
　（mob.hの MSS_*** に変更されている）
・使われていない定数 SAB_NORMAL, SAB_SKIDTRAP をskill.hから削除
・ほとんど意味がないので AS_ATTACK, AS_REVENGE をskill.hとbattle.cから削除
・ほとんど意味がないので MAX_STATUS_TYPE をmmo.hとatcommand.cから削除

・pc.cとskill.cの distance() を削除し unit_distance() に置き換え
・一部のdouble型へのキャストをatn_bignumber型に置き換え
・homun_data構造体の変数名を atackable → attackable に変更（clif.c, homun.c, map.h）
・unit.cを少しだけ整理

----------------------------------------
//001 [2006/11/21] by Rayce

・Auriga始動
・サーバースナップショット
・ATHENA_MOD_VERSIONを1に変更（version.h）
・不要なファイルを削除
　　doc/sc_start.txt, bin/tool/convert.c

　※上記以外には変更を加えてないので、実質Athena-dev-2.1.1-mod2261までを集約したSSに相当します
　　このversionを以ってAurigaのスタートとします
　　細かい部分は「Athena」のままですが、今後変更していく予定です

----------------------------------------

    Athena Dev. v2.1.1       Released: Middle July, 2003
    (c) 2003 Athena Project.
     http://project-yare.de/

1. Athena(アテナ)について
2. このリリースについて
3. 必要な物
4. 使い方
5. 現在の仕様
6. 祝辞
7. 免責事項
8. 募集
9. English


1. アテナについて
    アテナとは2003年1月半ばにでた0052.lzhをベースとして作られているエミュレータの一つです。
    基本的なライセンスはオリジナルがGPLの下に配布されている為、
    これに従いGPLの下配布を許可します。
    /*
        改良版を配布する場合は必ずこのREADMEを書き換えてください。
        何処を改良したのか報告(athena@project-yare.deまで)して貰えると助かります。
        バイナリのみの配布はGPL違反ですので"必ず"ソースも添付してください。
     */
    動作の確認は以下の通りのみ行っています。
    // ただし完璧に動く事を保証するものでありません
    対象CPU: Intel Pentium系   // PentiumII以上で確認.
        FreeBSD 4.8R, 4.6.2R
        Linux RedHat 7.3
        cygwin + gcc 3.2 20020927 (prerelease)
    開発元URL: http://project-yare.de/


2. このリリースについて
    今回のリリースは前回(V2.1)同様開発版のリリースのみです。
    2.1に比べ下記の点が修正されています。
        mapのデフォルト設定が韓国data.grfのみ正常に動作するようになっていた点
        common/timer.cやmap/script.cの幾つかのバグ

    迅速にUpdateを強く推奨するものではありませんが各自の判断で行って下さい。


3. 必要な物
    data.grf      //sdata.grfは必要に応じて
    account.txt   //存在しない場合athena.shが自動生成します
    conf/*.cnf    //Map用とChar用の二種類あります
    conf/npc*.txt //npc設定用ファイルです。複数のファイルに分けることが可能です。
    db/*.txt      //アイテム、job情報など


4. 使い方
    > tar xvfz athena-d?.?.tar.gz
    > cd athena-d?.?.tar.gz
    > make
    > vi conf/char_athena.cnf       //IP(127.0.0.1)の部分を環境に合わせて変更してください
    > vi conf/map_athena.cnf        //同上、またmap設定などは、このファイルで行います。
    > ./athena.sh
    上記を行えば"たぶん"起動します。

    補足:
    conf/npc_sampleJ.txtにはスクリプトの書き方について色々な説明が記載されています。
    もし、独自のMap設定を行ってみたい人や、スクリプトを弄りたい方は参考にしてください。
    ただし、開発中のためスクリプトの仕様が変更される可能性が高いです。
    command.txtには実装済みの特殊コマンドについての説明を記載しています。


5. 現在の仕様
    本鯖と比べておかしい(例えばプバが歩く、ポリンがアイテムを拾わないなど)点は、
    全て現在開発中に因るものです。
    現状としてキャラクタ系及びモンスター系のバグ報告は無視される可能性が高いです。

    バグ報告について必ず発生条件をお書き下さい。
    下にある報告用テンプレートを使って報告して頂くと助かります。
    報告先はエミュ板の開発スレにでも。
    ---- Athena v 2.0 (stable or develop) ----
    【gcc ver】gcc -vを実行時に表示される内容
    【動作システム】FreeBSD, Linux(ディストリビュージョンも), cygwinなど
    【発生内容】mapが落ちてしまった時の表示されていたデバッグ情報など具体的に書いてください。
    【操作内容】具体的にどんな操作を行ったかを書いてください。
    ------------------ END -------------------
    理想はテンプレに加えてmap.coreなどcoreファイルをUploaderにアップして頂くことですが
    問題のMapだけの状態にしcoreの吐く容量に注意してください。
    /*
        確認した限りでは324個ほどmapデータを読み込ませると、
         40MB近いcoreファイルを吐き出します @FreeBSD
         cygwinの場合はstackdumpというファイルになるそうです。
        しかし、coreファイルなどをgzip圧縮などすれば大幅に小さくなります。
         大凡30MBのcoreファイルが2.9MBほどになるようです。
        ですので、もしアップロードする場合はgzip圧縮など各自行ってください。
     */

    今回のリリースだけでなくHISTORYを作成すると大量に記述が必要な為省略しています。
    // 多い日だと本当に結構ありますので‥‥。


6. 祝辞
    今回このAthena開発版を出すに当たって感謝したい方々(順番不同)
        Lemming氏 (Project YARE)
        0052氏 (Uploader)
        35氏 (エミュ開発スレ)
        Johan Lindh氏(Author of memwatch)
        YARE forumのNPC情報を作成した方々
        weiss研究会BBSの様々な情報ファイルを作成した方々
        最後に、.coreファイル達


7. 免責事項
    Athena Projectは一切Athenaの動作に関する保証等は行いません。
    つまり、Athenaは無保証です。
    athena@project-yare.deに動作・操作等に関する質問などを送られても一切お答えできません。
    又Athenaを用いたことにより生じた被害・問題等の責任は一切Athena Projectは負いません。


8. 募集
    athenaの開発に参加したい//興味があるという方ご連絡下さい。
    我々は貴方の参加をお待ちしています。
    // 最新版が欲しいだけで何ら協力して頂けないという方はお断りです;-)
    [募集要項: プログラマ(2-3人)]
        年齢: 不問
        性別: 不問
        言語: 日本語が理解可能
        内容: C言語もしくはC++による開発。(特にネットワークやDBの経験が有る方大募集!)
    [募集要項: 翻訳(?人)]
        年齢: 不問
        性別: 不問
        言語: 日本語、英語が理解可能
        内容: 仏蘭西語、独逸語、西班牙語、伊太利亜語、泰(タイ)語、朝鮮語、中国語へ文献、サイトなどの翻訳
    連絡先: athena@project-yare.de 雑務担当まで。


9. English
     This release is just fixed some bugs in timer.c, script.c and map_athena1.conf.


(c) 2003 Athena Project.
