----------------------------------------
//0108 [2007/03/06] by Rayce

・スクリプトにおける構文もcase-insensitiveに変更
	大文字と小文字が区別なしになります。eA互換。
	ifとIF、switchとSWITCHはそれぞれ同等です。

・CSVアクセス命令でデータを書き込む際に指定するファイル名の規制緩和
	/（スラッシュ）_（アンダーバー）の使用を許可します。
	ディレクトリの指定ができるのでカレントディレクトリに置かなければならない縛りがなくなります。

・script_athena.confでimportすると最初に設定したデータが初期化されるバグを修正
・script_athena.confのcheck_gotocountを16384に上げておく（128*128）

----------------------------------------
//0107 [2007/03/05] by Rayce

・SQL: スクリプトにsqlquery関数、strescape関数追加 based on eA（script.c）
	CSVアクセス命令/関数と同等の動作を可能にします。
	ただしCSV系のような安全性やセキュリティ面のための利用規制は一切設けていません。
	危険な動作（セーブデータの破壊、インジェクション攻撃など）が容易に可能ですが、全て利用者の
	責任に委ねられますので注意してください。
	GRANTさえあれば如何なるSQL文も発行できます。

	CSV系とは異なりデータのキャッシュは作りません。
	データのやり取りを行う際は常にクエリがSQLサーバに飛んでいます。
	また一度に発行するクエリは64kB以内にしてください（長い場合は無視されます）。

　※利便性を高めるために一部eAとは異なる仕様にしています。
　　（SELECT以外の場合の返り値や、SELECTは二次元配列にデータ格納する点など）
　　詳細は doc/script_ref.txt や sample/npc_test_sqlquery.txt を参照。

----------------------------------------
//0106 [2007/03/04] by Rayce

・BCC, VCでstrncasecmpが使えるようにdefineを書き換え（utils.*）
　utils.cにあった自作のstrcasecmpは不要になったので削除
・@helpの一部のコードをstrncasecmpに最適化（atcommand.c）
・map_searchrandfreecell() の処理を最適化（map.c）

----------------------------------------
//0105 [2007/03/04] by Rayce

・MAPサーバが正常に終了するときのみOnFinalラベルを実行するように変更
　（core.*, login.c, char.c, converter.c, map.c）
	do_pre_final() 追加
・@mapexitの clif_GM_kick() は不要なのでいきなり exit(1) で落とすように修正（atcommand.c）

・スクリプトに関する追加機能（script.c）
	-> 制御コードをサポート
	   改行 "\n" は内部の処理で \r\n に置換されています
	-> 文字列の連結をサポート
		mes "aaa"
		    "bbb";　は mes "aaabbb"; と同等になります

----------------------------------------
//0104 [2007/03/04] by Rayce

・098のOnFinalラベル実装において致命的なバグがあったので修正（map.c, script.c）
	do_final_script() のあとに do_final_npc() が実行されるようになっていたので
	do_final_npc() 内で script_free_code() が呼ばれるときには既に str_buf, str_data が
	解放されているという最悪の状態になっていました。
	do_final_script() からOnFinalイベントの実行処理を切り離し、do_final_npc() の
	後に呼び出すように修正しました。

・map_addflooritem() のミスを修正（map.c）
・guild_recv_memberinfoshort() を少し修正（guild.c）

・SQL: char_set_online() と char_set_offline() の処理をまとめる（char.c）

----------------------------------------
//0103 [2007/03/03] by Rayce

・親密度が0になってペットが消えるとき intif_delete_petdata() が二重に呼ばれていたため
　「pet data delete failure」が出力されるバグを修正（pc.c, pet.c）

・ペットがアイテムをルートするときのAIを少し最適化（pet.c）
・battle_athena.confに pet_loot_type を追加（battle.*）
・MOB, PETがアイテム個数上限のときにルートを行う処理において、memcpyをmemmoveに最適化（mob.c, pet.c）

----------------------------------------
//0102 [2007/03/03] by Rayce

・ペットの卵のデータが削除されずセーブデータにゴミが残り続ける問題の修正、残り全て
	-> サーバ停止時に床アイテムを消すとき（map.c）
	-> map_addflooritem() でアイテム設置失敗したとき（map.c）
	-> サーバ停止する時点でMOBがペットの卵をルートしていたとき（npc.c）
	-> ペットが消える際にペットの卵をルートしていたとき（pet.*, unit.c）

・ペットがルートアイテムを所持する設定のとき、リスタートおよび他MAPサーバへの移動で
　ルートアイテムが消失してしまうバグを修正（clif.c, pc.c）

----------------------------------------
//0101 [2007/03/03] by Rayce

・ペットの卵のデータが削除されずセーブデータにゴミが残り続ける問題の修正、続き（map.*, mob.c, pet.c）
	MOBとPETのルートアイテムが地面に落ちるまでのディレイタイムの間にサーバが停止する場合について。
	do_final_timer() からは intif_delete_petdata() が実行できないので、delay_item_drop2構造体にnext
	メンバを追加しペットの卵をドロップするときはリンクリストのキューを作って管理することにしました。
	0100のタイマーヒープの変更はこのための布石です。
	登録した順にタイマーが実行されるのでキューの順番が狂うことはないはずです。

	map_push_delayitem_que()
	map_pop_delayitem_que()
	map_clear_delayitem_que() 追加

----------------------------------------
//0100 [2007/03/03] by Rayce

・タイマーヒープの優先順位を変更（timer.c）
	タイマーヒープへデータをpushする際の二分挿入ソートで、tickが等しい場合は大の方へ
	挿入されるように変更します。
	つまり先に登録されていた方が優先的にpopされることになります。

・上記の変更に伴う不具合を修正（char.c, chrif.c）
	charサーバがloginサーバへ、mapサーバがcharサーバへそれぞれ接続するとき認証が完了する前に
	send_users_tologin() を実行するようになっていました。
	check_connect_login_server() に対する実行順序の依存性を断ち切るために、セッションのauthがある
	かどうかを判定するように修正しています。

・タイマー関数リストに登録し忘れている関数をリストに追加（socket.c, pet.c, script.c）

・SQL: 099におけるinterサーバのペットデータの削除について、本来は成功として扱われるべき
　     ものが失敗として扱われるようになっていたので修正（int_pet.c）

----------------------------------------
//099 [2007/03/02] by Rayce

・@itemでアイテムIDに負の値を入れたとき、対応する番号のランダム系アイテム（青箱やカード帖など）
　を取得できるように拡張（atcommand.c）
・mob.cとpet.cにある delay_item_drop, delay_item_drop2構造体はほぼ同じなので
　まとめてmap.hで定義するように移動
・猛虎硬爬山のスキル発動タイミングを1sec遅らせるように修正 from eAthena（skill.c）

・SQL: interサーバでペット情報をdeleteする際、ペットIDが見つからなかった場合はTXTと同じように
       失敗flagを返すように修正（int_pet.c）

----------------------------------------
//098 [2007/02/28] by Rayce

・MAPサーバ終了時にchar,interサーバへデータを送信できるように修正
　　今まではキャラがMAPサーバ内に残っている状態でいきなりサーバを停止すると、キャラデータやギルドExpのキャッシュなどが
　　セーブされず巻き戻り等の不具合が発生するという仕様でした。
　　今回の修正によりMAPサーバ停止時に必要なデータをchar,interサーバに送信するようになったので、わざわざ@kickallで
　　キャラを全員kickしてからサーバを止めるといった一連の手間をかけることなく安全に停止出来ます。
　　map.c::do_final() で行う処理の順番が非常に重要になっていますので、今後何かしら修正を加えるときは注意してください。

	1. まず最初に do_final_script() を実行する
	   OnFinalイベント（詳細は後述）で実行されるスクリプトが如何なる制約も受けないようにするため、一番最初に
	   この関数を呼び出す必要があります

	2. ギルドExpのキャッシュをinterサーバにフラッシュする
	   guild_payexp_timer_sub() でギルドに関する情報を取得する必要があるため、必ずキャラ切断の前に実行する
	   必要があります

	3. chrif_disconnect_sub() で全キャラを切断します
	   今までは do_final_chrif() 内で行っていましたが、do_final_chrif() は char_fd を -1 にしてしまうので
	   char,interサーバのパケットバッファにデータを保存することができません
	   そこで切断処理だけを先に行うようにしています

	4. 残りの do_final関数群を実行します
	   これまでと同様に各ファイルで必要な後始末をします
	   ただし do_final_storage() は少し修正を加えて、numdb_final() したあとに倉庫dbをNULLにしています

	5. 床アイテムを消去します
	   必ず全キャラを切断したあとに処理を行う必要があります
	   キャラ切断時には map_quit() が呼ばれますが、ペットが居るときで且つペット自身がルートアイテムを保持する
	   設定になっていて、飼い主が重量オーバーでペットからアイテムを受け取れない状況であればアイテムは床に
	   ドロップされるからです
	   今まではこの事例が発生するとメモリリークになっていましたが修正されます

	6. 最後に do_final_chrif() を実行する
	   内部で flush_fifo() を呼び出します
	   do_final() は既に core.c のwhileループを抜けた後なのでパケットの送受信は行えません
	   そこでこの関数を明示的に呼び出すことで、do_final() 内で溜めたパケットデータをchar,interサーバへ送信する
	   ことが可能になります
	   続いて chrif_disconnect() が呼ばれますが、キャラのセッションは全て閉じた後なので chrif_disconnect_sub()
	   は実行されません
	   また倉庫のキャッシュを消す処理は専用の関数 storage_clear_cache() を用意しています
	   4. で倉庫dbはNULLにしてあるので実質何もしないことになります

	※ storage_clear_cache() はcharサーバだけが停止して socket.c のデストラクタから chrif_disconnect() が呼ばれた
	   ときに意味を持ちます
	   numdb_final() / numdb_init() を使わずに numdb_clear() だけで済むようになります
	   また上記の 6. で numdb_init() されると後始末処理をさらに入れる必要が出てくるから、という理由もあります

	-> flush_fifo() 追加、from eAthena（socket.*）
	-> chrif_disconnect() 修正（chrif.c）
	-> chrif_disconnect_sub() をグローバルに変更（chrif.h）
	-> guild_flush_expcache() 追加（guild.*）
	-> do_final() 修正（map.c）
	-> storage_clear_cache() 追加（storage.*）
	-> do_final_storage() 修正（storage.c）

・スクリプトにOnFinalラベルを追加
	MAPサーバ停止直前に実行されます。OnInitラベルなどと同様の使い方です。
	キャラのデータへアクセスしたり変数を書き換えたりなど、全ての処理が通常通り作動することを保証します。
	ただしsleepやNPCタイマーなどで遅延処理させることはできません。
	例えば以下のような使い方が想定されます。

	// 他の全MAPサーバへアナウンスする
	izlude.gat,130,115,4	script	Announcer	113,{
		end;
	OnFinal:
		announce "マップサーバ01が停止しました",0;
		end;
	}

----------------------------------------
//097 [2007/02/27] by Rayce

・atcommand.cを全体的に修正（atcommand.c）
・古いPACKETVERでもコンパイルできるように修正（clif.c）

・以下の項目でアイテムを削除するとき、ペットの卵のデータが削除されずセーブデータにゴミが残り続ける問題を修正
	@itemreset
	@charitemreset
	extra system
	clearitem命令
	pc_checkitem()

----------------------------------------
//096 [2007/02/26] by Rayce

・ギルド名およびパーティ名の検索をcase-sensitiveに修正（int_guild.c, int_party.c, guild.c, party.c）
	本鯖の仕様に従って半角英字は大文字/小文字が区別されるようになります。
	ついでに guild_searchname(), party_searchname() を最適化。

・SQL: アカウントIDの検索をcase-sensitiveに修正（login.c）
・SQL: キャラ名の検索をcase-sensitiveに修正（char.c）

----------------------------------------
//095 [2007/02/26] by Rayce

・ワープポータルがSP消費なしになっていたバグを修正、thanks to hugeさん（skill.c）
・ホールドウェブの効果が切れるときエフェクトが消滅するように修正（skill.c, status.*）
	パケットキャプチャにより SI_HOLDWEB が判明
	アスムなどと同じく clif_skill_nodamage() の前に0x196を送る必要があります

・ターゲット自動選択型のスキル（コンボ系スキルや飛び蹴り等）が距離を無視して発動できていたバグを修正（unit.c）
	ターゲットを補正するタイミングを変更しています。
	また unit_skilluse_id2() の処理内での処理の順番を少し修正しています。

----------------------------------------
//094 [2007/02/26] by Rayce

・新規作成キャラの##変数にデータがコピーされず、全ての##変数をクリアしてしまうバグを修正（char.c）
	get_account_reg2() 追加

----------------------------------------
//093 [2007/02/25] by Rayce

・パケット0xf4の上位版0x1c4を追加（clif.c）
	ペットの装備品やIDが13000以上のアイテムを倉庫に預けると、即座に装備欄に表示されなかった
	問題が修正されます。
	恐らく本鯖はかなり昔に上位版に移行していたと考えられますので、PACKETVERが7以上のときに
	0x1c4をサポートするようにしています。

・gccでコンパイル時にpc.cで警告が出るので修正（pc.c）
・doc/client_packet.txt更新

----------------------------------------
//092 [2007/02/25] by Rayce

・アイテムトグルが固定化されるように修正
	取得したアイテムはインベントリの最後尾に格納される必要がありますが、現在の仕様では配列内で空いている場所
	に格納されるようになっています。
	従って clif_parse_LoadEndAck() でアイテムリストを再送信したときに以前と並びが異なるアイテムリストが
	クライアントに渡されてしまい、トグルが固定化されない原因となっていました。
	そこでアイテムを取得した順に番号を付け、pc_checkitem() でこの番号順にソートするように変更しました。
	item構造体のidメンバがほとんど使われてなかったので、この番号を保存する変数として利用しています。
	pc_checkitem() で行っていたアイテムの空き詰め処理の代わりにqsortを行う形になっていますが、インベントリに
	関してはソート後にアイテムデータベースへのポインタを再設定しないといけないので、以前に比べて若干処理は
	増えていることになります。

	-> item構造体の id メンバを unsigned int型に変更
	-> map_session_data構造体内、state構造体に inventory_dirty, cart_dirty 追加
	   （qsortすべきかどうかを判定するフラグ）
	-> map_session_data構造体に inventory_sortkey, cart_sortkey 追加
	-> pc_setinventorydata() の処理を pc_checkitem() 内に吸収

・倉庫内アイテムの並び換えを修正および拡張
	上記のアイテムトグルと同様に倉庫内アイテムについても格納順に並ぶようにソートするように修正しました。
	battle_athena.confでソート方法を選択することができます。
	ただし今までの storagesort_by_itemid は削除されて personal_storage_sort, guild_storage_sort という項目に
	変更されているので注意してください。

	0のときはソートしません。速度重視。
	1のときはitem構造体のidを使って格納順にソートします。本鯖準拠。
	2のときはアイテムIDでソートします。091以前のバージョンの方法です。
	3のときは種類でソートします。まずtypeでソートし、次に武器・防具ならLoc（装備箇所）でソートし、
	最後にアイテムIDでソートします。これにより同じタイプのアイテムが近くに集まるようになります。

	-> storage構造体、guild_storage構造体に sortkey 追加
	-> storage_comp_item_by_key(), storage_comp_item_by_nameid(), storage_comp_item_by_type() 追加
	-> sortage_gsortitem() を削除し storage_sortitem() で一括処理できるように変更

・SQL: sql-filesにAuriga092_changetable.sql追加、main.sql更新
       `id` フィールドの使い方が変更されているので注意してください
・SQL: item構造体のidメンバが正しくコンバートされるように修正（char-converter.c）

----------------------------------------
//091 [2007/02/23] by Rayce

・login鯖で0x2712を受け取ったとき、auth_fifoに該当データが見つからなかった場合に
　バッファオーバーフローが生じるバグを修正
　ついでに見つからなかったときは "auth_fifo search error!" が出力されるように（login.c）

・サイズの種類を MAX_SIZE_FIX として定義（map.h, status.c）
	デフォルトでは3です。
	値を増やすことにより小/中/大以外のサイズを定義することが可能です。
	その場合はdb/size_fix.txtで新しく行を追記してください。

----------------------------------------
//090 [2007/02/21] by Rayce

・属性Lvの最大値を MAX_ELE_LEVEL として定義、デフォルトは4（map.h）
・attr_fix_tableの実体をbattle.cからpc.cへ移動（battle.*, pc.*）
・attr_fix_tableに ELE_MAX を使うように修正
	MAX_ELE_LEVEL を増やせば属性Lvが5以上を定義することができます。
	属性は20種類までしか指定できませんが、属性Lvは無制限です。
	属性を拡張する場合はdb/attr_fix_table.txtでテーブルを適切に設定してください。

・076以降ハンマーフォールでスタンが発生しなくなっていた問題を修正（db/skill_cast_db.txt）
・あまり意味がないので BASE_TICK, LIFETIME_FLOORITEM を削除（timer.h, map.h）
・088で混入したゴミコードを除去（skill.c）

----------------------------------------
//089 [2007/02/19] by Rayce

・死亡カウンタをキャラ永続変数ではなくmmo_charstatus構造体としてセーブするように変更 from Freya
　（char.c, mmo.h, map.h, pc.c, status.c）
	死亡カウンタは全職で利用される上、比較的頻繁に更新されるデータなので
	キャラデータの一つとしてまとめることにしました。
	キャラ永続変数は先頭から線形検索するため、PC_DIE_COUNTERが後方に登録されていた場合は
	速度的に不利になるという問題があったためです。

	PC_DIE_COUNTERはdb/const.txtから削除されています。
	死亡カウンタは今後は単なるパラメータとして扱われるので、スクリプトからはDieCounterという
	名前でアクセスしてください。

	セーブデータが変更されているので特にTXTの場合は注意してください。
	PC_DIE_COUNTERの値はセーブデータに変換されないので、各自で移行してください。
	TXTならmannerの次の項、SQLならcharテーブルに追加されたdie_counterです。
	移行完了したらPC_DIE_COUNTERは削除しておくと良いかもしれません。

　※以下のスクリプトを使って各プレイヤーにデータをコンバートさせることも可能です。
　　ただしbattle_athena.confでOnPCLoginラベルが利用できるように設定しておく必要があります。

	-	script	Conv_DieCounter	-1,{
	OnPCLogin:
		if(PC_DIE_COUNTER) {
			set DieCounter,PC_DIE_COUNTER;
			set PC_DIE_COUNTER,0;
		}
		end;
	}

・db/const.txtに記載されているパラメータの内、updatestatus出来ないものの値を変更しようとすると
　警告メッセージが出るのを抑制（pc.c）
	例えば「set Class,0;」を実行すると clif_updatestatus() でエラー扱いになっていました。
	今後はエラーが出なくなりますが、あくまで警告抑制であって実質何もしないコードになります。
・細かい修正（status.c）

・TXT: JOURNAL_IDENTIFIERをバージョン02に変更しておく（journal.c）
・SQL: main.sql更新、Auriga089_changetable.sql追加
・SQL: converter.exe対応、ただし089より古いバージョンは読み込み非対応なので
       必ず一度089以降のTXTモードでデータをセーブしてからコンバートしてください
・SQL: login-converter.cの細かい修正

----------------------------------------
//088 [2007/02/18] by Rayce

・@allskillの修正（atcommand.c, pc,*）
	-> battle_athena.confのplayer_skillup_limitがyesのとき全てのスキルが表示されなかった問題を解消
	-> 引数を一つ取れるように拡張
	   「@allskill 1」とするとbattle_athena.confのquest_skill_learnの設定に関わらず
	   クエストスキルも取得できるようになります

・クローンスキル関連の細かい修正（atcommand.c, skill.c）
・DEBUG_MEMMGRがオンのとき、メモリ消費削減のためタイムスタンプを最適化（malloc.c）

----------------------------------------
//087 [2007/02/17] by Rayce

・MakefileのPACKETVERが 8 になっていなかったのを修正
・script.cの DEBUG_VARS の定義をコンパイルオプションにする
	Makefile, bcc32_make.bat, vc_make.bat参照
・AthenaProjectからのmerge漏れを補完
	-> vc_make.batにCPU最適化スイッチ NOOPTIMIZE を追加
	-> doc/server_build.txt追加、内容を少し加筆および修正
・item_db.txtにtypoがあったので更新, thanks to huge cgi

----------------------------------------
//086 [2007/02/16] by Rayce

・ギルドメンバーの一覧でガンスリンガーと忍者が1_ETCと表示される問題を修正（clif.c）
・DYNAMIC_SC_DATAがオンのとき、ストームガストの凍結挙動がおかしかったバグを修正（skill.c, status.c）

・緊急回避とディフェンスの後にbreakが多分抜けていたので修正（skill.c）
・skill_castend_nodamage_id() を少し修正
・使われていない定数 CLASSCHANGE_BOSS_NUM を削除（mob.c）
・mobdb_searchname() でmemcmpしないように変更（mob.c）
・mob.cを少し整理
・doc/client_packet.txt更新

----------------------------------------
//085 [2007/02/16] by Rayce

・キャラ名を赤文字にするパケット0x220が見つかったので実装（battle.*, clif.*, status.c）
	-> clif_send_murderer() 追加
	-> battle_athena.confでマーダラーに必要なキラーポイントを設定できるように拡張
	   デフォルトは100で、この値以上になるとマーダラーとなり文字が赤くなります
	-> マーダラーシステム（ステータスボーナスなど）を無効にしたい場合には、
	   pk_murderer_pointの値を0に設定してください
	   また、PKモードを全く利用しない場合は0にしておくと良いかもしれません
	-> ステータスボーナスがAll+5になるのはキラーポイントがpk_murderer_pointの4倍以上のときです
	   個別設定できないので注意してください

・ログアウトするときはテレポートのようなエフェクト（clrtype=2）が出るように修正（clif.c, map.c）
・doc/client_packet.txt更新

----------------------------------------
//084 [2007/02/15] by Rayce

・サーバースナップショット（version.h）
・不要なファイルを削除
　　doc/
	mysql.txt
　　sql-files/
	****_changetable.sql
　　script/sample/
	npc_custom_extendshop.txt
	npc_debug_questskill2.txt
	npc_debug_sample.txt
	npc_test_arena.txt
	npc_test_bank.txt
	npc_test_skill.txt
・ファイルの改行コードをCR/LFに統一（29files）
　ただしUNIX環境用のものはLFにしています
