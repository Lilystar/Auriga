//-----------------------------------------------------------------------------
// 転職カプラ
// 追加職対応修正版
// 追加職に対応していなくても大丈夫なはず	by ＡＡＡ
//-----------------------------------------------------------------------------
prontera.gat,161,192,5	script	転職カプラ	114,{
	function Check_Condition;
	cutin "kafra_04",2;
	mes "[転職カプラ]";
	mes "いらっしゃいませ。";
	mes "こちらでは、転職する事が出来ます。";
	mes "転職しますか?";
	next;
	set '@job,-1;
	switch(select("1次職への転職希望","拡張1次職への転職希望","2-1次職への転職希望","2-2次職への転職希望","やめる")) {
	case 1:
	case 2:
		if(Class != Job_Novice) {
			mes "[転職カプラ]";
			mes "あなたはそのジョブに転職出来ません。";
			close2;
			cutin "kafra_04",255;
			end;
		}
		if(getskilllv(1) < 9) {
			mes "[転職カプラ]";
			mes "基本スキルを9にしてきてください。";
			close2;
			cutin "kafra_04",255;
			end;
		}
		if(SkillPoint) {
			mes "[転職カプラ]";
			mes "スキルポイントを全て使い切らないと";
			mes "転職出来ません。";
			close2;
			cutin "kafra_04",255;
			end;
		}
		mes "[転職カプラ]";
		mes "どの職業に転職しますか?";
		next;
		if(@menu == 1) {
			switch(select("剣士","マジシャン","アーチャー","アコライト","商人","シーフ","テコン少年/少女","やめる")) {
				case 1: set '@job,Job_Swordman;   break;
				case 2: set '@job,Job_Magician;   break;
				case 3: set '@job,Job_Archer;     break;
				case 4: set '@job,Job_Acolyte;    break;
				case 5: set '@job,Job_Merchant;   break;
				case 6: set '@job,Job_Thief;      break;
				case 7: set '@job,Job_TaekwonBoy; break;
				case 8: break;
			}
		}
		else {
			switch(select("スーパーノービス","ガンスリンガー","忍者","デスナイト","ダークコレクター","やめる")) {
				case 1: set '@job,Job_SuperNovice;   break;
				case 2: set '@job,Job_Gunslinger;    break;
				case 3: set '@job,Job_Ninja;         break;
				case 4: set '@job,Job_DeathKnight;   break;
				case 5: set '@job,Job_DarkCollector; break;
				case 6: break;
			}
		}
		break;
	case 3:
	case 4:
		if(JobLevel < 40) {
			mes "[転職カプラ]";
			mes "ジョブレベルが40以下だと転職出来ません。";
			close2;
			cutin "kafra_04",255;
			end;
		}
		mes "[転職カプラ]";
		mes "どの職業に転職しますか?";
		next;
		if(@menu == 3) {
			switch(select("ナイト","プリースト","ウィザード","鍛冶屋","ハンター","アサシン","拳聖","やめる")) {
				case 1: set '@job,Job_Knight;        break;
				case 2: set '@job,Job_Priest;        break;
				case 3: set '@job,Job_Wizard;        break;
				case 4: set '@job,Job_BlackSmith;    break;
				case 5: set '@job,Job_Hunter;        break;
				case 6: set '@job,Job_Assassin;      break;
				case 7: set '@job,Job_StarGladiator; break;
				case 8: break;
			}
		}
		else {
			switch(select("クルセイダー","モンク","セージ","ローグ","アルケミスト","バード/ダンサー","ソウルリンカー","やめる")) {
				case 1: set '@job,Job_Crusader;                break;
				case 2: set '@job,Job_Monk;                    break;
				case 3: set '@job,Job_Sage;                    break;
				case 4: set '@job,Job_Rogue;                   break;
				case 5: set '@job,Job_Alchemist;               break;
				case 6: set '@job,(Sex? Job_Bard: Job_Dancer); break;
				case 7: set '@job,Job_SoulLinker;              break;
				case 8: break;
			}
		}
		break;
	case 5:
		break;
	}
	// 判定および転職処理
	if('@job < 0) {
		mes "[転職カプラ]";
		mes "またのご利用を、お待ちしております。";
	}
	else {
		set '@ret,Check_Condition('@job);
		if('@ret == 0) {
			mes "[転職カプラ]";
			mes "あなたはそのジョブに転職出来ません。";
		}
		else if('@ret == 1) {
			jobchange '@job;
		}
	}
	close2;
	cutin "kafra_04",255;
	end;

	// Check_Condition(<class>) : 転職可能かどうかチェック
	//   1: 許可, 0: 転職不可, -1: レベル不足
	function Check_Condition {
		switch(getarg(0)) {
			case Job_Swordman:
			case Job_Magician:
			case Job_Archer:
			case Job_Acolyte:
			case Job_Merchant:
			case Job_Thief:
			case Job_TaekwonBoy:
				return 1;
			case Job_Knight:
			case Job_Crusader:
				return (Class == Job_Swordman);
			case Job_Priest:
			case Job_Monk:
				return (Class == Job_Acolyte);
			case Job_Wizard:
			case Job_Sage:
				return (Class == Job_Magician);
			case Job_BlackSmith:
			case Job_Alchemist:
				return (Class == Job_Merchant);
			case Job_Hunter:
			case Job_Bard:
			case Job_Dancer:
				return (Class == Job_Archer);
			case Job_Assassin:
			case Job_Rogue:
				return (Class == Job_Thief);
			case Job_SuperNovice:
				if(Upper == 1)
					return 0;
				if(BaseLevel < 45) {
					mes "[転職カプラ]";
					mes "ベースレベルを45以上にしてきてください。";
					return -1;
				}
				return 1;
			case Job_StarGladiator:
			case Job_SoulLinker:
				return (Class == Job_TaekwonBoy);
			case Job_Gunslinger:
			case Job_Ninja:
			case Job_DeathKnight:
			case Job_DarkCollector:
				return (Upper == 0);
		}
		return -1;
	}
}
